{"version":3,"file":"aepp-sdk.cjs","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;ACVA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,GAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtkBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5WA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA,aAAa,mBAAO,CAAC,IAAM;AAC3B;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE,0CAAiD;AACnD;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA,aAAa,mBAAO,CAAC,EAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChEA,aAAa,kCAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA,oBAAoB,eAAe;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,IAAU;AACjC,WAAW,mBAAO,CAAC,GAAQ;AAC3B,aAAa,kCAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;ACtIA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;A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AAO,CAAC,IAA4C;AACrF,oBAAoB,mBAAO,CAAC,IAA8B;AAC1D,4BAA4B,mBAAO,CAAC,IAAuC;AAC3E,aAAa,mBAAO,CAAC,IAAqB;AAC1C,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,UAAU,mBAAO,CAAC,IAAkB;AACpC,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,mCAAmC,mBAAO,CAAC,GAAwC;AACnF,4BAA4B,mBAAO,CAAC,GAAuC;AAC3E,8BAA8B,mBAAO,CAAC,IAAyC;AAC/E,qBAAqB,mBAAO,CAAC,IAAgC;AAC7D,0BAA0B,mBAAO,CAAC,IAA6B;AAC/D,eAAe,kCAA+C;;AAE9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD,uBAAuB,yCAAyC,UAAU;AAC1E,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,oDAAoD,gDAAgD;AACpG,MAAM;AACN,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,+EAA+E,iCAAiC;AAChH;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sFAAsF,cAAc;AACpG;AACA;AACA;;AAEA,IAAI,2FAA2F;AAC/F;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED,IAAI,oDAAoD;AACxD,2BAA2B,oBAAoB;AAC/C,2BAA2B;AAC3B,CAAC;;AAED,IAAI,0EAA0E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,IAAI,sDAAsD;AAC1D;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACtQA;;;;;;;;;ACAa;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,aAAa,mBAAO,CAAC,IAA+B;AACpD,eAAe,mBAAO,CAAC,GAAwB;AAC/C,aAAa,mBAAO,CAAC,IAAqB;AAC1C,6BAA6B,mBAAO,CAAC,IAAwC;;AAE7E;AACA;;AAEA;AACA;AACA,IAAI,+DAA+D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACtBY;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb;AACA,mBAAO,CAAC,IAAkC;AAC1C,mBAAO,CAAC,IAA0B;AAClC,mBAAO,CAAC,GAA8B;AACtC,mBAAO,CAAC,IAA8B;AACtC,mBAAO,CAAC,IAA+C;;;;;;;;;ACN1C;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,aAAa,mBAAO,CAAC,IAA+B;AACpD,eAAe,mBAAO,CAAC,IAAwB;AAC/C,kBAAkB,mBAAO,CAAC,IAA4B;AACtD,aAAa,mBAAO,CAAC,IAAqB;AAC1C,6BAA6B,mBAAO,CAAC,IAAwC;;AAE7E;;AAEA;AACA;AACA,IAAI,+DAA+D;AACnE;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACjBY;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;AAC3E,8BAA8B,mBAAO,CAAC,IAAyC;;AAE/E;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACVa;AACb,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,4BAA4B,mBAAO,CAAC,GAAuC;AAC3E,qBAAqB,mBAAO,CAAC,IAAgC;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACXa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,qBAAqB,6BAAgD;;AAErE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACba;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,yBAAyB,mBAAO,CAAC,IAAmC;;AAEpE;AACA;AACA,IAAI,8BAA8B;AAClC;AACA,CAAC;;;;;;;;;ACRY;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,yBAAyB,mBAAO,CAAC,IAAmC;;AAEpE;AACA;AACA,IAAI,0DAA0D;AAC9D;AACA,CAAC;;;;;;;;;ACRY;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,wBAAwB,mBAAO,CAAC,IAAmC;;AAEnE;AACA;AACA;AACA,IAAI,4CAA4C;AAChD;AACA,CAAC;;;;;;;;;ACTY;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,wBAAwB,mBAAO,CAAC,IAAmC;;AAEnE;AACA;AACA;AACA,IAAI,uEAAuE;AAC3E;AACA,CAAC;;;;;;;;;ACTY;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb;AACA,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACNa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb;AACA,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACNa;AACb;AACA,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;;;;;;;;;ACJa;AACb,mBAAO,CAAC,IAA8B;AACtC,mBAAmB,mBAAO,CAAC,IAA4B;AACvD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,qBAAqB,mBAAO,CAAC,IAAgC;AAC7D,gBAAgB,mBAAO,CAAC,IAAwB;;AAEhD;AACA;AACA;AACA;;;;;;;;;ACVa;AACb,aAAa,mBAAO,CAAC,GAAyB;;AAE9C;;;;;;;;;ACHa;AACb,aAAa,mBAAO,CAAC,IAAiC;;AAEtD;;;;;;;;;ACHa;AACb,aAAa,mBAAO,CAAC,IAAiB;AACtC,mBAAO,CAAC,IAA4C;;AAEpD;;;;;;;;;ACJa;AACb,aAAa,mBAAO,CAAC,IAA0B;AAC/C,mBAAO,CAAC,IAA4C;;AAEpD;;;;;;;;;ACJa;AACb,aAAa,mBAAO,CAAC,IAA8B;;AAEnD;;;;;;;UCHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAayC;;AAEzC;AACA;AACA;AACA;AACO,MAAMC,WAAW,GAAIC,MAA4C,IAAc;EACpF,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAO,IAAI;EAC3C,OACE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAC,OAAOD,MAAM,CAAC;EACtD;EACC,CAACE,KAAK,CAACF,MAAgB,CAAC,IAAIG,MAAM,CAACC,SAAS,CAACJ,MAAM,CAAC,IAAIF,gCAAS,CAACC,WAAW,CAACC,MAAM,CAAC,CAAC;AAE3F,CAAC;;AAED;AACA;AACA;AACO,MAAMK,IAAI,GAAIC,SAAoB,IACvCA,SAAS,CAACC,YAAY,CAACT,gCAAS,CAACU,UAAU,CAAC;;ACtB9C;;AAKA;AACA;AACA;AACA;AACO,MAAeC,SAAS,SAASC,KAAK,CAAC;EAC5CC,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMC,YAAY,SAASL,SAAS,CAAC;EAC1CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,cAAc;EAC5B;AACF;;AAEA;AACA;AACA;AACO,MAAME,SAAS,SAASN,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMG,SAAS,SAASP,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMI,YAAY,SAASR,SAAS,CAAC;EAC1CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,cAAc;EAC5B;AACF;;AAEA;AACA;AACA;AACO,MAAMK,aAAa,SAAST,SAAS,CAAC;EAC3CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMM,aAAa,SAASV,SAAS,CAAC;EAC3CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMO,iBAAiB,SAASX,SAAS,CAAC;EAC/CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMQ,SAAS,SAASZ,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMS,gBAAgB,SAASb,SAAS,CAAC;EAC9CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,kBAAkB;EAChC;AACF;;AAEA;AACA;AACA;AACO,MAAMU,WAAW,SAASd,SAAS,CAAC;EACzCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAMW,aAAa,SAASf,SAAS,CAAC;EAC3CE,WAAWA,CAACc,YAAoB,EAAEC,WAAoB,EAAEC,aAAsB,EAAE;IAC9E,KAAK,CAAC,GAAGF,YAAY,cAAcC,WAAW,SAASC,aAAa,UAAU,CAAC;IAC/E,IAAI,CAACd,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMe,oBAAoB,SAASR,iBAAiB,CAAC;EAC1DT,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMgB,0BAA0B,SAASpB,SAAS,CAAC;EACxDE,WAAWA,CAACmB,YAAoB,EAAEC,aAAqB,EAAEC,aAAqB,EAAE;IAC9E,KAAK,CAAC,GAAGF,YAAY,YAAYC,aAAa,mBAAmBC,aAAa,UAAU,CAAC;IACzF,IAAI,CAACnB,IAAI,GAAG,4BAA4B;EAC1C;AACF;;AAEA;AACA;AACA;AACO,MAAMoB,wBAAwB,SAASxB,SAAS,CAAC;EACtDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMqB,iBAAiB,SAASzB,SAAS,CAAC;EAC/CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMsB,sBAAsB,SAAS1B,SAAS,CAAC;EACpDE,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,kCAAkC,CAAC;IACzC,IAAI,CAACE,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMuB,oBAAoB,SAAS3B,SAAS,CAAC;EAClDE,WAAWA,CAAC0B,MAAc,EAAE;IAC1B,KAAK,CAAC,uBAAuBA,MAAM,EAAE,CAAC;IACtC,IAAI,CAACxB,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMyB,eAAe,SAAS7B,SAAS,CAAC;EAC7CE,WAAWA,CAAC4B,MAAc,EAAEC,EAAkB,EAAE;IAC9C,KAAK,CAAC,mBAAmBD,MAAM,oCAAoCC,EAAE,EAAE,CAAC;IACxE,IAAI,CAAC3B,IAAI,GAAG,iBAAiB;EAC/B;AACF;;AAEA;AACA;AACA;AACO,MAAM4B,gBAAS,SAAShC,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAM6B,wBAAwB,SAASjC,SAAS,CAAC;EACtDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM8B,wBAAwB,SAASlC,SAAS,CAAC;EACtDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM+B,mBAAmB,SAASnC,SAAS,CAAC;EACjDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACO,MAAMgC,uBAAuB,SAASpC,SAAS,CAAC;EACrDE,WAAWA,CAACmC,UAAkB,EAAEC,OAAe,EAAEC,SAAiB,EAAEC,SAAkB,EAAE;IACtF,KAAK,CACH,eAAeH,UAAU,YAAYC,OAAO,mBAAmBC,SAAS,EAAE,IACvEC,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,MAAMA,SAAS,EAAE,CAC/C,CAAC;IACD,IAAI,CAACpC,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAMqC,UAAU,SAASzC,SAAS,CAAC;EACxCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,YAAY;EAC1B;AACF;;AAEA;AACA;AACA;AACO,MAAMsC,aAAa,SAAS1C,SAAS,CAAC;EAC3CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMuC,iBAAiB,SAASD,aAAa,CAAC;EACnDxC,WAAWA,CAACC,OAAO,GAAG,yCAAyC,EAAE;IAC/D,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMwC,uBAAuB,SAASvC,YAAY,CAAC;EACxDH,WAAWA,CAAC2C,OAA+B,EAAE;IAC3C,KAAK,CAAC,eAAeA,OAAO,gBAAgB,CAAC;IAC7C,IAAI,CAACzC,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAM0C,uBAAuB,SAASxC,SAAS,CAAC;EACrDJ,WAAWA,CAAC6C,QAAiC,EAAEC,MAAc,EAAE;IAC7D,KAAK,CAAC,QAAQD,QAAQ,4BAA4BC,MAAM,EAAE,CAAC;IAC3D,IAAI,CAAC5C,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAM6C,wBAAwB,SAAS3C,SAAS,CAAC;EACtDJ,WAAWA,CAACgD,OAAkB,EAAEC,UAAqB,EAAE;IACrD,KAAK,CACH,oBAAoBD,OAAO,CAACE,QAAQ,CAAC,CAAC,kDAAkDD,UAAU,CAACC,QAAQ,CAAC,CAAC,EAC/G,CAAC;IACD,IAAI,CAAChD,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMiD,oBAAoB,SAAS/C,SAAS,CAAC;EAClDJ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMkD,sBAAsB,SAAS/C,SAAS,CAAC;EACpDL,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAAC,6BAA6BA,OAAO,EAAE,CAAC;IAC7C,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMmD,oBAAoB,SAAShD,SAAS,CAAC;EAClDL,WAAWA,CAACsD,EAAU,EAAE;IACtB,KAAK,CAAC,0CAA0CA,EAAE,EAAE,CAAC;IACrD,IAAI,CAACpD,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMqD,wBAAwB,SAASlD,SAAS,CAAC;EACtDL,WAAWA,CAACwD,SAAiC,EAAE;IAC7C,KAAK,CAAC,qCAAqCA,SAAS,EAAE,CAAC;IACvD,IAAI,CAACtD,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMuD,qBAAqB,SAASpD,SAAS,CAAC;EACnDL,WAAWA,CAACsD,EAAU,EAAE;IACtB,KAAK,CAAC,qBAAqBA,EAAE,eAAe,CAAC;IAC7C,IAAI,CAACpD,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMwD,wBAAwB,SAASrD,SAAS,CAAC;EACtDL,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,wCAAwC,CAAC;IAC/C,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMyD,gBAAgB,SAASrD,YAAY,CAAC;EACjDN,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,kBAAkB;EAChC;AACF;;AAEA;AACA;AACA;AACO,MAAM0D,sBAAsB,SAAStD,YAAY,CAAC;EACvDN,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM2D,wBAAwB,SAASvD,YAAY,CAAC;EACzDN,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,uBAAuB,CAAC;IAC9B,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM4D,6BAA6B,SAASxD,YAAY,CAAC;EAC9DN,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,+BAA+B;EAC7C;AACF;;AAEA;AACA;AACA;AACO,MAAM6D,2BAA2B,SAASzD,YAAY,CAAC;EAK5DN,WAAWA,CAACgE,YAAmB,EAAEC,eAAuC,EAAE;IACxE,KAAK,CAACD,YAAY,CAAC/D,OAAO,CAAC;IAC3B,IAAI,CAAC+D,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAAC/D,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAMgE,wBAAwB,SAAS5D,YAAY,CAAC;EACzDN,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,0CAA0C,CAAC;IACjD,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMiE,oBAAoB,SAAS5D,aAAa,CAAC;EACtDP,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMkE,qBAAqB,SAAS5D,aAAa,CAAC;EACvDR,WAAWA,CAACqE,MAAkC,EAAE;IAC9C,KAAK,CAAC,YAAYA,MAAM,0DAA0D,CAAC;IACnF,IAAI,CAACnE,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMoE,sBAAsB,SAAS9D,aAAa,CAAC;EACxDR,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,2BAA2B,CAAC;IAClC,IAAI,CAACE,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMqE,qBAAqB,SAAS/D,aAAa,CAAC;EACvDR,WAAWA,CAACwE,eAAwC,EAAE;IACpD,KAAK,CAAC,yBAAyBA,eAAe,aAAa,CAAC;IAC5D,IAAI,CAACtE,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMuE,4BAA4B,SAASjE,aAAa,CAAC;EAC9DR,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,8BAA8B;EAC5C;AACF;;AAEA;AACA;AACA;AACO,MAAMwE,2BAA2B,SAASlE,aAAa,CAAC;EAC7DR,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAMyE,uBAAuB,SAASnE,aAAa,CAAC;EACzDR,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,wDAAwD,CAAC;IAC/D,IAAI,CAACE,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAM0E,wBAAwB,SAASpE,aAAa,CAAC;EAC1DR,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,2BAA2B,CAAC;IAClC,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM2E,mBAAmB,SAASrE,aAAa,CAAC;EAGrDR,WAAWA,CAACC,OAAe,EAAE6E,WAAiC,EAAE;IAC9D,KAAK,CAAC,oBAAoB7E,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG,MAAMA,OAAO,GAAG,EAAE,CAAC;IACpE,IAAI,CAACC,IAAI,GAAG,qBAAqB;IACjC,IAAI,CAAC4E,WAAW,GAAGA,WAAW;EAChC;AACF;;AAEA;AACA;AACA;AACO,MAAMC,2BAA2B,SAASvE,aAAa,CAAC;EAC7DR,WAAWA,CAACE,IAAY,EAAE;IACxB,KAAK,CAAC,YAAYA,IAAI,4BAA4B,CAAC;IACnD,IAAI,CAACA,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAM8E,uBAAuB,SAASxE,aAAa,CAAC;EACzDR,WAAWA,CAACiF,MAAW,EAAEC,EAAU,EAAE;IACnC,KAAK,CACH,mBAAmBD,MAAM,kBAAkBC,EAAE,0BAA0B,GACrE,wCACJ,CAAC;IACD,IAAI,CAAChF,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAMiF,2BAA2B,SAAS3E,aAAa,CAAC;EAC7DR,WAAWA,CAACoF,aAAqB,EAAEC,YAAqC,EAAE;IACxE,KAAK,CACH,4BAA4BD,aAAa,qBAAqBC,YAAY,EAAE,GAC1E,sDACJ,CAAC;IACD,IAAI,CAACnF,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAMoF,6BAA6B,SAAS9E,aAAa,CAAC;EAC/DR,WAAWA,CAACqF,YAAqC,EAAEE,aAAsC,EAAE;IACzF,KAAK,CACH,kCAAkCA,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yCAAyC,GAC5F,IAAIF,YAAY,OAAOE,aAAa,CAACC,GAAG,CAAC,CAAC,CAACtF,IAAI,CAAC,KAAK,IAAIA,IAAI,GAAG,CAAC,CAACuF,IAAI,CAAC,IAAI,CAAC,YAAY,GACxF,uFACJ,CAAC;IACD,IAAI,CAACvF,IAAI,GAAG,+BAA+B;EAC7C;AACF;;AAEA;AACA;AACA;AACO,MAAMwF,oBAAoB,SAASjF,iBAAiB,CAAC;EAC1DT,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,kBAAkB,CAAC;IACzB,IAAI,CAACE,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMyF,2BAA2B,SAASlF,iBAAiB,CAAC;EACjET,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,wCAAwC,CAAC;IAC/C,IAAI,CAACE,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAM0F,sBAAsB,SAASnF,iBAAiB,CAAC;EAC5DT,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM2F,sBAAsB,SAASpF,iBAAiB,CAAC;EAC5DT,WAAWA,CAAC8F,UAAkB,EAAE;IAC9B,KAAK,CAAC,wBAAwBA,UAAU,EAAE,CAAC;IAC3C,IAAI,CAAC5F,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM6F,sBAAsB,SAAStF,iBAAiB,CAAC;EAC5DT,WAAWA,CAACgG,MAAc,EAAE;IAC1B,KAAK,CAAC,wBAAwBA,MAAM,EAAE,CAAC;IACvC,IAAI,CAAC9F,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM+F,kBAAkB,SAASvF,SAAS,CAAC;EAChDV,WAAWA,CAACE,IAAY,EAAE;IACxB,KAAK,CAAC,kBAAkBA,IAAI,gBAAgB,CAAC;IAC7C,IAAI,CAACA,IAAI,GAAG,oBAAoB;EAClC;AACF;;AAEA;AACA;AACA;AACO,MAAMgG,iBAAiB,SAASxF,SAAS,CAAC;EAC/CV,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMiG,WAAW,SAASxF,gBAAgB,CAAC;EAChDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAMkG,kBAAkB,SAASzF,gBAAgB,CAAC;EACvDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAClC;AACF;;AAEA;AACA;AACA;AACO,MAAMmG,WAAW,SAAS1F,gBAAgB,CAAC;EAChDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAMoG,kBAAkB,SAAS3F,gBAAgB,CAAC;EACvDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAClC;AACF;;AAEA;AACA;AACA;AACO,MAAMqG,qBAAqB,SAAS5F,gBAAgB,CAAC;EAC1DX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMsG,mBAAmB,SAAS7F,gBAAgB,CAAC;EACxDX,WAAWA,CAACyG,GAAW,EAAE;IACvB,KAAK,CAAC,qBAAqBA,GAAG,aAAa,CAAC;IAC5C,IAAI,CAACvG,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACO,MAAMwG,mBAAmB,SAAS/F,gBAAgB,CAAC;EACxDX,WAAWA,CAAC2G,GAAW,EAAEvE,OAAe,EAAE;IACxC,KAAK,CAAC,8CAA8CuE,GAAG,YAAYvE,OAAO,EAAE,CAAC;IAC7E,IAAI,CAAClC,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACO,MAAM0G,gBAAgB,SAASjG,gBAAgB,CAAC;EACrDX,WAAWA,CAAC8C,MAAc,EAAE;IAC1B,KAAK,CAAC,qBAAqBA,MAAM,aAAa,CAAC;IAC/C,IAAI,CAAC5C,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAM2G,iBAAiB,SAASlG,gBAAgB,CAAC;EACtDX,WAAWA,CAAC8G,MAAsB,EAAE;IAClC,KAAK,CAAC,eAAeA,MAAM,wBAAwB,CAAC;IACpD,IAAI,CAAC5G,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAM6G,qBAAqB,SAASnG,WAAW,CAAC;EACrDZ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAM8G,sBAAsB,SAASpG,WAAW,CAAC;EACtDZ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM+G,kBAAkB,SAASrG,WAAW,CAAC;EAClDZ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAClC;AACF;;AChwByC;AACI;AACD;AAErC,IAAKgH,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;;AAU7B;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG;EAC7B,CAACD,iBAAiB,CAACE,EAAE,GAAG,CAAC;EACzB,CAACF,iBAAiB,CAACG,OAAO,GAAG,CAAC,CAAC;EAC/B,CAACH,iBAAiB,CAACI,QAAQ,GAAG,CAAC,CAAC;EAChC,CAACJ,iBAAiB,CAACK,OAAO,GAAG,CAAC,CAAC;EAC/B,CAACL,iBAAiB,CAACM,OAAO,GAAG,CAAC,EAAE;EAChC,CAACN,iBAAiB,CAACO,QAAQ,GAAG,CAAC,EAAE;EACjC,CAACP,iBAAiB,CAACQ,MAAM,GAAG,CAAC;AAC/B,CAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAY,GAAGA,CAC1BC,KAA2C,EAC3C;EACEC,YAAY,GAAGX,iBAAiB,CAACQ,MAAM;EACvCI,kBAAkB,GAAGZ,iBAAiB,CAACQ;AACqC,CAAC,KACpE;EACX,IAAI,CAACtI,WAAW,CAACwI,KAAK,CAAC,EAAE,MAAM,IAAI/G,aAAa,CAAC,OAAO,EAAE,UAAU,EAAE+G,KAAK,CAAC;EAE5E,OAAO,IAAIzI,gCAAS,CAAC,OAAOyI,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAAC1E,QAAQ,CAAC,CAAC,GAAG0E,KAAK,CAAC,CACvEG,SAAS,CAACZ,sBAAsB,CAACU,YAAY,CAAC,GAAGV,sBAAsB,CAACW,kBAAkB,CAAC,CAAC,CAC5FE,OAAO,CAAC,CAAC;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,IAAI,GAAGA,CAClBL,KAAkC,EAClC;EAAEC,YAAY,GAAGX,iBAAiB,CAACQ;AAA6C,CAAC,GAAG,CAAC,CAAC,KAC3EC,YAAY,CAACC,KAAK,EAAE;EAAEC,YAAY;EAAEC,kBAAkB,EAAEZ,iBAAiB,CAACE;AAAG,CAAC,CAAC;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACO,MAAMc,QAAQ,GAAGA,CACtBN,KAAkC,EAClC;EAAEC,YAAY,GAAGX,iBAAiB,CAACE;AAAyC,CAAC,GAAG,CAAC,CAAC,KACvEO,YAAY,CAACC,KAAK,EAAE;EAAEC;AAAa,CAAC,CAAC;AAOlD,MAAMM,QAAkB,GAAG,CACzB;EAAEjI,IAAI,EAAE,KAAK;EAAEkI,SAAS,EAAE;AAAG,CAAC,EAC9B;EAAElI,IAAI,EAAE,MAAM;EAAEkI,SAAS,EAAE;AAAE,CAAC,EAC9B;EAAElI,IAAI,EAAE,EAAE;EAAEkI,SAAS,EAAE;AAAE,CAAC,EAC1B;EAAElI,IAAI,EAAE,MAAM;EAAEkI,SAAS,EAAE,CAAC;AAAG,CAAC,CACjC;AAED,MAAMC,gBAAgB,GAAIC,QAAgB,IACxCH,QAAQ,CAACI,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KACnBC,IAAI,CAACC,GAAG,CAACF,CAAC,CAACL,SAAS,GAAGE,QAAQ,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACH,CAAC,CAACJ,SAAS,GAAGE,QAAQ,CAAC,GAAGG,CAAC,GAAGD,CAC5E,CAAC;AAEH,MAAMI,mBAAmB,GAAIN,QAAgB;EAAA,IAAAO,cAAA;EAAA,QAAAA,cAAA,GAC3CV,QAAQ,CAACW,IAAI,CAAEN,CAAC,IAAKA,CAAC,CAACJ,SAAS,IAAIE,QAAQ,CAAC,cAAAO,cAAA,cAAAA,cAAA,GAAIV,QAAQ,CAACA,QAAQ,CAACY,MAAM,GAAG,CAAC,CAAC;AAAA;AAEzE,MAAMC,cAAc,GAAIC,QAAqC,IAAa;EAAA,IAAAC,QAAA;EAC/E,MAAMtB,KAAgB,GAAG,IAAIzI,gCAAS,CAAC8J,QAAQ,CAAC;EAEhD,MAAME,GAAG,IAAAD,QAAA,GAAGtB,KAAK,CAACwB,CAAC,cAAAF,QAAA,cAAAA,QAAA,GAAI,CAAC;EACxB,MAAM;IAAEhJ,IAAI;IAAEkI;EAAU,CAAC,GAAG,CAACe,GAAG,GAAG,CAAC,GAAGd,gBAAgB,GAAGO,mBAAmB,EAAEO,GAAG,CAAC;EACnF,MAAME,CAAC,GAAGzB,KAAK,CACZG,SAAS,CAAC,CAACK,SAAS,CAAC,CACrBkB,SAAS,CAAC,CAAC,GAAGZ,IAAI,CAACa,GAAG,CAACJ,GAAG,GAAGf,SAAS,EAAE,CAAC,CAAC,CAAC,CAC3CJ,OAAO,CAAC,CAAC;EACZ,OAAO,GAAGqB,CAAC,GAAGnJ,IAAI,KAAK,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;AAC/C,CAAC;;;;ACrGqD;AAE/C,MAAMuJ,KAAK,GAAG,MAAOC,QAAgB,IAC1C,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvBC,UAAU,CAACD,OAAO,EAAEF,QAAQ,CAAC;AAC/B,CAAC,CAAC;AAEG,MAAMI,SAAS,GAAGA,CACvBC,MAA+B,EAC/B7E,EAI+B,KACF8E,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACH,MAAM,CAAC,CAACvE,GAAG,CAACN,EAAE,CAAC,CAAC;;AAEjF;AACA,MAAMiF,gBAAgB,GAAG,CAAC,MAAM;EAC9B,IAAI;IACFC,MAAM,CAACC,MAAM,CAAC,CAACC,UAAU,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,OAAO,KAAK;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC,EAAE,CAAC;AAEG,MAAMC,aAAa,GAAGN,gBAAgB,GACzC,CAACO,IAA2B,EAAEC,WAAoB,KAChDP,MAAM,CAACC,MAAM,CACXK,IAAI,CAAClF,GAAG,CAAEoF,EAAE,IAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CAAC,CAAC,EACjCD,WACF,CAAC,GACHP,MAAM,CAACC,MAAM;;AAEjB;AACA;AACA;AACA;AACA;AACO,SAASQ,aAAaA,CAC3BlE,GAA6B,EAC7BoD,MAAS,EACO;EAChB,OAAOpD,GAAG,IAAIoD,MAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASe,aAAaA,CAAIC,IAAS,EAAEC,KAAmB,EAAa;EAC1E,OAAOA,KAAK,CAAC1L,QAAQ,CAACyL,IAAI,CAAC;AAC7B;AAEO,SAASE,sBAAsBA,CAACT,KAAY,EAAW;EAC5D,OACEA,KAAK,YAAYhB,6BAAS,IAC1BgB,KAAK,CAACU,UAAU,KAAK,GAAG,IACxBV,KAAK,CAACvK,OAAO,CAACX,QAAQ,CAAC,mBAAmB,CAAC;AAE/C;;AAEA;;AAOA;;AAGO,SAAS6L,WAAWA,CAACX,KAAc,EAA0B;EAClE,IAAIA,KAAK,YAAYzK,KAAK,EAAE;EAC5B,MAAMyK,KAAK;AACb;;AC5E4C;AAErC,SAASY,aAAaA,CAC3BC,OAAoB,EACA;EACpB,OAAO,IAAIC,KAAK,CACd,CAAC,CAAC,EACFtB,MAAM,CAACC,WAAW,CAEd,CACE,OAAO,EACP,WAAW,EACX,gBAAgB,EAChB,gBAAgB,EAChB,0BAA0B,EAC1B,gBAAgB,EAChB,cAAc,EACd,SAAS,EACT,mBAAmB,EACnB,KAAK,EACL,gBAAgB,EAChB,KAAK,EACL,KAAK,CACN,CACDzE,GAAG,CAAEtF,IAAI,IAAK,CACdA,IAAI,EACJ,CAACqL,CAAK,EAAE,GAAGC,IAAe,KAAK;IAC7B,MAAMC,MAAM,GAAGJ,OAAO,CAAC,CAAC;IACxB,IAAII,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI5K,aAAa,CAAC,eAAe,EAAE,SAAS,EAAE4K,MAAM,CAAC;IAC/E,IAAIvL,IAAI,KAAK,KAAK,IAAIsL,IAAI,CAAC,CAAC,CAAC,KAAK,eAAe,EAAE,OAAOC,MAAM;IAChE,MAAMC,GAAG,GAAIC,OAAO,CAACzL,IAAI,CAAC,CAASuL,MAAM,EAAE,GAAGD,IAAI,CAAC;IACnD,OAAO,OAAOE,GAAG,KAAK,UAAU,IAAIxL,IAAI,KAAK,KAAK,GAAGwL,GAAG,CAACE,IAAI,CAACH,MAAM,CAAC,GAAGC,GAAG;EAC7E,CAAC,CACF,CACH,CACF,CAAC;AACH;AAEO,SAASG,WAAWA,CAAuBjE,KAAY,EAAS;EAAA,IAAAkE,aAAA;EACrE,QAAAA,aAAA,GAAQlE,KAAK,CAA+BkE,aAAa,cAAAA,aAAA,cAAAA,aAAA,GAAIlE,KAAK;AACpE;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACO,IAAKmE,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;;;;;;;;ACLI;AACxB;AACA;AACsC;AAC6D;AACzC;AACZ;AACA;AAEjB;;AAE7B;AACA;AACA;AACA;AACA;AACO,SAASI,UAAUA,CAACC,KAA0B,EAAU;EAC7D,OAAO,IAAIH,kBAAM,CAAC,CAAC,CAACI,MAAM,CAACD,KAAK,CAAC,CAACE,MAAM,CAAC,CAAC;AAC5C;;AAEA;AACA;AACA;AACA,MAAMC,WAAW,GAAG,CAClBR,QAAQ,CAACS,iBAAiB,EAC1BT,QAAQ,CAACU,gBAAgB,EACzBV,QAAQ,CAACW,kBAAkB,EAC3BX,QAAQ,CAACY,WAAW,EACpBZ,QAAQ,CAACa,WAAW,EACpBb,QAAQ,CAACc,cAAc,EACvBd,QAAQ,CAACe,KAAK,EACdf,QAAQ,CAACgB,GAAG,EACZhB,QAAQ,CAACiB,UAAU,EACnBjB,QAAQ,CAACkB,aAAa,EACtBlB,QAAQ,CAACmB,SAAS,CACV;AACV,MAAMC,WAAW,GAAG,CAClBpB,QAAQ,CAACqB,YAAY,EACrBrB,QAAQ,CAACsB,cAAc,EACvBtB,QAAQ,CAACuB,YAAY,EACrBvB,QAAQ,CAACwB,WAAW,EACpBxB,QAAQ,CAACyB,cAAc,EACvBzB,QAAQ,CAAC0B,OAAO,EAChB1B,QAAQ,CAAC2B,eAAe,EACxB3B,QAAQ,CAAC4B,MAAM,EACf5B,QAAQ,CAAC6B,aAAa,EACtB7B,QAAQ,CAAC8B,aAAa,EACtB9B,QAAQ,CAAC+B,cAAc,EACvB/B,QAAQ,CAACgC,gBAAgB,EACzBhC,QAAQ,CAACiC,SAAS,EAClBjC,QAAQ,CAACkC,UAAU,EACnBlC,QAAQ,CAACmC,UAAU,EACnBnC,QAAQ,CAACoC,IAAI,CACL;;AAEV;AACA;AACA;AACA,MAAMC,eAAe,GAAG;EACtB,CAACrC,QAAQ,CAACqB,YAAY,GAAG,EAAE;EAC3B,CAACrB,QAAQ,CAACsB,cAAc,GAAG,EAAE;EAC7B,CAACtB,QAAQ,CAACuB,YAAY,GAAG,EAAE;EAC3B,CAACvB,QAAQ,CAACwB,WAAW,GAAG,EAAE;EAC1B,CAACxB,QAAQ,CAACyB,cAAc,GAAG,EAAE;EAC7B,CAACzB,QAAQ,CAAC0B,OAAO,GAAG,EAAE;EACtB,CAAC1B,QAAQ,CAAC2B,eAAe,GAAG,EAAE;EAC9B,CAAC3B,QAAQ,CAAC4B,MAAM,GAAG,EAAE;EACrB,CAAC5B,QAAQ,CAAC6B,aAAa,GAAG,EAAE;EAC5B,CAAC7B,QAAQ,CAAC8B,aAAa,GAAG,EAAE;EAC5B,CAAC9B,QAAQ,CAAC+B,cAAc,GAAG,EAAE;EAC7B,CAAC/B,QAAQ,CAACgC,gBAAgB,GAAG,EAAE;EAC/B,CAAChC,QAAQ,CAACiC,SAAS,GAAG,EAAE;EACxB,CAACjC,QAAQ,CAACkC,UAAU,GAAG,EAAE;EACzB,CAAClC,QAAQ,CAACmC,UAAU,GAAG,EAAE;EACzB,CAACnC,QAAQ,CAACe,KAAK,GAAG;AACpB,CAAU;AAEV,SAASuB,iBAAiBA,CAACC,IAAgB,EAAEC,IAAc,EAAQ;EACjE,IAAI,CAAC1D,aAAa,CAAC0D,IAAI,EAAEH,eAAe,CAAC,EAAE;EAC3C,MAAMI,MAAM,GAAGJ,eAAe,CAACG,IAAI,CAAC;EACpC,IAAIC,MAAM,IAAI,IAAI,IAAIF,IAAI,CAACvF,MAAM,KAAKyF,MAAM,EAAE;EAC9C,MAAM,IAAIpI,kBAAkB,CAAC,qBAAqBoI,MAAM,eAAeF,IAAI,CAACvF,MAAM,UAAU,CAAC;AAC/F;AAEA,MAAM0F,WAAW,GAAIC,OAAmB,IAAavC,UAAU,CAACA,UAAU,CAACuC,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAEhG,MAAMC,WAAW,GAAIF,OAAmB,IAAajE,aAAa,CAAC,CAACiE,OAAO,EAAED,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;AAEnG,SAASG,UAAUA,CAACC,MAAc,EAAU;EAC1C,MAAMJ,OAAO,GAAGI,MAAM,CAACH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnC,IAAI,CAACF,WAAW,CAACC,OAAO,CAAC,CAACK,MAAM,CAACD,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,IAAIjJ,oBAAoB,CAAC,CAAC;EACpF,OAAOgJ,OAAO;AAChB;AAEA,MAAMM,MAAM,GAAG;EACbC,MAAM,EAAGH,MAAkB,IAAKF,WAAW,CAACE,MAAM,CAAC,CAAC5L,QAAQ,CAAC,QAAQ,CAAC;EACtEgM,MAAM,EAAGC,MAAc,IAAKN,UAAU,CAACzE,MAAM,CAACG,IAAI,CAAC4E,MAAM,EAAE,QAAQ,CAAC;AACtE,CAAC;AAED,MAAMC,MAAM,GAAG;EACbH,MAAM,EAAGH,MAAkB,IAAK9C,8BAAW,CAAC4C,WAAW,CAACE,MAAM,CAAC,CAAC;EAChEI,MAAM,EAAGC,MAAc,IAAKN,UAAU,CAACzE,MAAM,CAACG,IAAI,CAACyB,8BAAW,CAACmD,MAAM,CAAC,CAAC;AACzE,CAAC;AAED,MAAME,SAAS,GAAIC,SAAkB,IAAgC;EACnE,MAAMC,UAAU,GAAGhD,WAAW,CAACzD,IAAI,CAAEyC,CAAC,IAAKA,CAAC,KAAK+D,SAAS,CAAC;EAC3D,IAAIC,UAAU,IAAI,IAAI,EAAE,OAAO,CAACA,UAAU,EAAEP,MAAM,CAAC;EACnD,MAAMQ,UAAU,GAAGrC,WAAW,CAACrE,IAAI,CAAEyC,CAAC,IAAKA,CAAC,KAAK+D,SAAS,CAAC;EAC3D,IAAIE,UAAU,IAAI,IAAI,EAAE,OAAO,CAACA,UAAU,EAAEJ,MAAM,CAAC;EACnD,MAAM,IAAIvO,aAAa,CACrB,QAAQ,EACR,UAAU,CAAC,GAAGsM,WAAW,EAAE,GAAGZ,WAAW,CAAC,CAAC9G,IAAI,CAAC,IAAI,CAAC,EAAE,EACvD6J,SACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,SAASJ,MAAMA,CAACZ,IAAiB,EAAU;EAChD,MAAM,CAACxL,MAAM,EAAE2M,cAAc,EAAEC,KAAK,CAAC,GAAGpB,IAAI,CAACqB,KAAK,CAAC,GAAG,CAAC;EACvD,IAAIF,cAAc,IAAI,IAAI,EAAE,MAAM,IAAItJ,WAAW,CAAC,mCAAmCmI,IAAI,EAAE,CAAC;EAC5F,IAAIoB,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIvJ,WAAW,CAAC,oCAAoCmI,IAAI,EAAE,CAAC;EACpF,MAAM,CAACC,IAAI,EAAEqB,OAAO,CAAC,GAAGP,SAAS,CAACvM,MAAM,CAAC;EACzC,MAAM4L,OAAO,GAAGkB,OAAO,CAACV,MAAM,CAACO,cAAc,CAAC;EAC9CpB,iBAAiB,CAACK,OAAO,EAAEH,IAAI,CAAC;EAChC,OAAOG,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,MAAMA,CAAwBX,IAAgB,EAAEC,IAAU,EAAyB;EACjG,MAAM,GAAGqB,OAAO,CAAC,GAAGP,SAAS,CAACd,IAAI,CAAC;EACnCF,iBAAiB,CAACC,IAAI,EAAEC,IAAI,CAAC;EAC7B,OAAO,GAAGA,IAAI,IAAIqB,OAAO,CAACX,MAAM,CAACX,IAAI,CAAC,EAAE;AAC1C;;AC9I6B;AAC7B;AACA;AAC6C;AACa;AAEA;AACO;AACrB;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKO,SAAS0B,cAAcA,CAACC,YAAoB,EAAE,GAAGC,SAAqB,EAAW;EACtF,IAAIA,SAAS,CAACnH,MAAM,KAAK,CAAC,EAAEmH,SAAS,GAAG,CAACnE,QAAQ,CAAC+B,cAAc,CAAC;EACjE,IAAI;IACFoB,MAAM,CAACe,YAA2B,CAAC;IACnC,MAAME,QAAQ,GAAGF,YAAY,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC7E,aAAa,CAACqF,QAAQ,EAAED,SAAS,CAAC,EAAE;MACvC,MAAM,IAAIrP,aAAa,CACrB,qBAAqB,EACrBqP,SAAS,CAACnH,MAAM,GAAG,CAAC,GAAG,UAAUmH,SAAS,CAACzK,IAAI,CAAC,IAAI,CAAC,EAAE,GAAGyK,SAAS,CAAC,CAAC,CAAC,EACtEC,QACF,CAAC;IACH;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAO3F,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACO,SAAS4F,OAAOA,CAAA,EAAW;EAChC,MAAM,CAACC,MAAM,CAAC,GAAG,IAAIC,cAAc,CAACT,wCAAgB,CAAC,CAAC,CAAC,CAACf,MAAM,CAAC;EAC/D,OAAOtP,MAAM,CAAC6Q,MAAM,GAAGG,MAAM,CAAChR,MAAM,CAACiR,gBAAgB,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAC9I,KAAa,EAAU;EACpD,MAAM+I,MAAM,GAAGvG,MAAM,CAACwG,WAAW,CAAC,CAAC,CAAC;EACpCD,MAAM,CAACE,aAAa,CAACjJ,KAAK,CAAC;EAC3B,OAAO+I,MAAM,CAAChC,KAAK,CAACgC,MAAM,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAK,CAAC,CAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,IAAIA,CAAC5E,KAA0B,EAAU;EACvD,OAAOhC,MAAM,CAACG,IAAI,CAACuF,mBAAO,CAAC1D,KAAK,EAAE6E,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqBA,CACnCC,KAA6B,EAC7BC,KAAa,EACY;EACzB,MAAMC,SAAS,GAAGnC,MAAM,CAACiC,KAAK,CAAC;EAC/B,MAAMR,MAAM,GAAGlG,aAAa,CAAC,CAAC4G,SAAS,EAAEX,cAAc,CAACU,KAAK,CAAC,CAAC,CAAC;EAChE,OAAOnC,MAAM,CAAC+B,IAAI,CAACL,MAAM,CAAC,EAAE5E,QAAQ,CAAC2B,eAAe,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4D,MAAMA,CACpBhD,IAAgB,EAChBiD,SAAqB,EACrB5O,OAA+B,EACtB;EACT,OAAOkN,iCAAS,CAAC4B,QAAQ,CAACH,MAAM,CAAChD,IAAI,EAAEiD,SAAS,EAAErC,MAAM,CAACvM,OAAO,CAAC,CAAC;AACpE;AAEA,MAAM+O,aAAa,GAAGtH,MAAM,CAACG,IAAI,CAAC,6BAA6B,EAAE,MAAM,CAAC;AACjE,MAAMoH,mBAAmB,GAAG5B,oCAAa,CAAC2B,aAAa,CAAC3I,MAAM,CAAC,CAAC+F,MAAM;;AAE7E;AACO,SAAS8C,aAAaA,CAAC3R,OAAe,EAAU;EACrD,MAAM4R,GAAG,GAAGzH,MAAM,CAACG,IAAI,CAACtK,OAAO,EAAE,MAAM,CAAC;EACxC,OAAO+Q,IAAI,CACTvG,aAAa,CAAC,CAACkH,mBAAmB,EAAED,aAAa,EAAE3B,oCAAa,CAAC8B,GAAG,CAAC9I,MAAM,CAAC,CAAC+F,MAAM,EAAE+C,GAAG,CAAC,CAC3F,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAaA,CAC3B7R,OAAe,EACfsR,SAAqB,EACrB5O,OAA+B,EACtB;EACT,OAAO2O,MAAM,CAACM,aAAa,CAAC3R,OAAO,CAAC,EAAEsR,SAAS,EAAE5O,OAAO,CAAC;AAC3D;;AClIyC;AACuB;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoP,OAAOA,CAACC,GAAwC,EAAEC,GAAG,GAAG,KAAK,EAAU;EACrF;EACA;EACA;;EAEA,IAAID,GAAG,IAAI,IAAI,EAAE,OAAO5H,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC;EACvC,IAAI/K,MAAM,CAACC,SAAS,CAACuS,GAAG,CAAC,IAAI7S,gCAAS,CAACC,WAAW,CAAC4S,GAAG,CAAC,IAAIC,GAAG,EAAE;IAC9D,IAAI,CAAC9S,gCAAS,CAACC,WAAW,CAAC4S,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI7S,gCAAS,CAAC6S,GAAG,CAAC;IACzD,IAAI,CAACA,GAAG,CAACvS,SAAS,CAAC,CAAC,EAAE,MAAM,IAAIqC,gBAAS,CAAC,iCAAiCkQ,GAAG,CAAChK,OAAO,CAAC,CAAC,EAAE,CAAC;IAC3F,IAAIkK,SAAS,GAAGF,GAAG,CAAC9O,QAAQ,CAAC,EAAE,CAAC;IAChC,IAAIgP,SAAS,CAACnJ,MAAM,GAAG,CAAC,KAAK,CAAC,EAAEmJ,SAAS,GAAG,IAAIA,SAAS,EAAE;IAC3D,OAAO9H,MAAM,CAACG,IAAI,CAAC2H,SAAS,EAAE,KAAK,CAAC;EACtC;EACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAO5H,MAAM,CAACG,IAAI,CAACyH,GAAG,CAAC;EACzB;EACA,MAAM,IAAIxQ,sBAAsB,CAAC,CAAC;AACpC;;AC3ByC;AACQ;AAE1C,MAAM2Q,eAAe,GAAG;EAC7BC,GAAG,EAAE,2CAA2C;EAChDnN,MAAM,EAAE;AACV,CAAU;AAEH,MAAMoN,gBAAgB,GAAG,KAAK;AAG9B,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;AAClC;AACO,MAAMC,mBAAmB,GAAG,IAAI,CAAC,CAAC;AAClC,MAAMC,sBAAsB,GAAG,IAAI,CAAC,CAAC;AAC5C;AACO,MAAMC,uBAAuB,GAAG,GAAG,CAAC,CAAC;AAC5C;AACO,MAAMC,mBAAmB,GAAG,EAAE;AACrC;AACA;AACA;AACO,MAAMC,eAAe,GAAG7I,SAAS,CACtC;EACE,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,OAAO;EACV,CAAC,EAAE;AACL,CAAC,EACD,CAAC,CAACnD,GAAG,EAAEiB,KAAK,CAAC,KAAK,CAACjB,GAAG,EAAE,IAAIxH,gCAAS,CAACyI,KAAK,CAAC,CAACgL,KAAK,CAACL,mBAAmB,CAAC,CACzE,CAAC;AAEM,IAAKM,wBAAwB,0BAAxBA,wBAAwB;EAAxBA,wBAAwB,CAAxBA,wBAAwB;EAAA,OAAxBA,wBAAwB;AAAA;;AAIpC;AACA;AACA;AACA;AACO,IAAKC,SAAS,0BAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAAA,OAATA,SAAS;AAAA;;AAWrB;AACA;AACA;AACA;AACO,IAAKC,UAAU,0BAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;;AAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAKC,GAAG,0BAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAA,OAAHA,GAAG;AAAA;;AC/F0B;AACa;AACqB;AAC5B;AACM;AAO7B;AACwB;AAC0B;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAC7BC,OAA+B,EAC/B9B,KAAyB,EACA;EACzB,MAAM+B,eAAe,GAAG/I,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG2E,MAAM,CAACgE,OAAO,CAAC,EAAE,GAAGnB,OAAO,CAACX,KAAK,CAAC,CAAC,CAAC;EAC5E,MAAMgC,OAAO,GAAGpC,IAAI,CAACmC,eAAe,CAAC;EACrC,OAAOlE,MAAM,CAACmE,OAAO,EAAErH,QAAQ,CAAC2B,eAAe,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2F,aAAaA,CAC3BC,QAAgC,EAChClC,KAAkC,EAClCmC,QAA+B,EACR;EACvB,SAASC,MAAMA,CAACxB,GAAgC,EAAU;IACxD,MAAMyB,OAAO,GAAG1B,OAAO,CAACC,GAAG,EAAE,IAAI,CAAC;IAClC,OAAOvH,aAAa,CAAC,CAACL,MAAM,CAACsJ,KAAK,CAAC,EAAE,GAAGD,OAAO,CAAC1K,MAAM,CAAC,EAAE0K,OAAO,CAAC,CAAC;EACpE;EAEA,MAAML,OAAO,GAAGpC,IAAI,CAAC5G,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG2E,MAAM,CAACoE,QAAQ,CAAC,EAAE,GAAGE,MAAM,CAACpC,KAAK,CAAC,EAAE,GAAGlC,MAAM,CAACqE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/F,OAAOtE,MAAM,CAACmE,OAAO,EAAErH,QAAQ,CAAC8B,aAAa,CAAC;AAChD;AAEA,MAAM8F,WAAW,GAAG,QAAQ;AAErB,SAASC,cAAcA,CAACC,SAAiB,EAAY;EAC1D,MAAM,CAAC3T,IAAI,EAAE4T,MAAM,EAAE,GAAGC,KAAK,CAAC,GAAGF,SAAS,CAAClE,KAAK,CAAC,GAAG,CAAC;EACrD,IAAIoE,KAAK,CAAChL,MAAM,KAAK,CAAC,EAAE,MAAM,IAAIlI,aAAa,CAAC,WAAW,EAAE,wBAAwB,EAAEgT,SAAS,CAAC;EACjG,IAAIC,MAAM,KAAKH,WAAW,CAAChF,KAAK,CAAC,CAAC,CAAC,EAAE;IACnC,MAAM,IAAI9N,aAAa,CAAC,WAAW,EAAE,iBAAiB8S,WAAW,EAAE,EAAEE,SAAS,CAAC;EACjF;EACA,IAAI,yBAAyB,CAACG,IAAI,CAAC9T,IAAI,CAAC,EAAE;IACxC,MAAM,IAAIW,aAAa,CAAC,WAAW,EAAE,sBAAsB,EAAEgT,SAAS,CAAC;EACzE;EACA,IAAI3T,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACtC,MAAM,IAAIW,aAAa,CACrB,WAAW,EACX,yDAAyD,EACzDgT,SACF,CAAC;EACH;EACA,IAAI3T,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACnB,MAAM,IAAIW,aAAa,CAAC,WAAW,EAAE,2BAA2B,EAAEgT,SAAS,CAAC;EAC9E;EACA,IAAI3T,IAAI,CAAC+T,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACvB,MAAM,IAAIpT,aAAa,CAAC,WAAW,EAAE,yBAAyB,EAAEgT,SAAS,CAAC;EAC5E;EACA,IAAIK,QAAQ;EACZ,IAAI;IACF,MAAMC,CAAC,GAAG,IAAIC,GAAG,CAAC,UAAUlU,IAAI,IAAI4T,MAAM,EAAE,CAAC;IAC7C,IAAIK,CAAC,CAACE,QAAQ,GAAGF,CAAC,CAACG,QAAQ,GAAGH,CAAC,CAACI,IAAI,GAAGJ,CAAC,CAACK,MAAM,GAAGL,CAAC,CAACnD,IAAI,KAAK,EAAE,IAAImD,CAAC,CAACM,QAAQ,KAAK,GAAG,EAAE;MACrF,MAAM,IAAI5T,aAAa,CAAC,WAAW,EAAE,OAAO,EAAEgT,SAAS,CAAC;IAC1D;IACAK,QAAQ,GAAGC,CAAC,CAACO,IAAI;EACnB,CAAC,CAAC,OAAOlK,KAAK,EAAE;IACd,IAAIA,KAAK,YAAY1I,SAAS,IAAI0I,KAAK,CAACvK,OAAO,CAACX,QAAQ,CAAC,aAAa,CAAC,EAAE;MACvE,MAAM,IAAIuB,aAAa,CAAC,WAAW,EAAE,OAAO,EAAEgT,SAAS,CAAC;IAC1D;IACA,MAAMrJ,KAAK;EACb;EACA,IAAI,CAAC,gBAAgB,CAACwJ,IAAI,CAACE,QAAQ,CAAC,EAAE;IACpC,MAAM,IAAIrT,aAAa,CAAC,WAAW,EAAE,uBAAuB,EAAEgT,SAAS,CAAC;EAC1E;EACA,IAAIK,QAAQ,CAACnL,MAAM,GAAG,EAAE,GAAG4K,WAAW,CAAC5K,MAAM,EAAE;IAC7C,MAAM,IAAIlI,aAAa,CAAC,WAAW,EAAE,cAAc,EAAEgT,SAAS,CAAC;EACjE;EACA,OAAOK,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,aAAaA,CAACzU,IAAc,EAAgB;EAC1D,OAAO+O,MAAM,CAAC+B,IAAI,CAAC4C,cAAc,CAAC1T,IAAI,CAAC,CAAC,EAAE6L,QAAQ,CAACoC,IAAI,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyG,cAAcA,CAAC1U,IAAc,EAAE2U,IAAY,GAAGzE,OAAO,CAAC,CAAC,EAAsB;EAC3F,OAAOnB,MAAM,CACX+B,IAAI,CACFvG,aAAa,CAAC,CACZL,MAAM,CAACG,IAAI,CAACqJ,cAAc,CAAC1T,IAAI,CAAC,CAAC,EACjCkK,MAAM,CAACG,IAAI,CAACsK,IAAI,CAAC3R,QAAQ,CAAC,EAAE,CAAC,CAAC4R,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CACxD,CACH,CAAC,EACD/I,QAAQ,CAACkC,UACX,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8G,OAAOA,CAACC,GAAW,GAAG5K,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC,EAAU;EAC7D,OAAO,IAAIpL,gCAAS,CAACiL,MAAM,CAACG,IAAI,CAACyK,GAAG,CAAC,CAAC9R,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAACA,QAAQ,CAAC,EAAE,CAAC;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS+R,UAAUA,CAACpB,SAAiB,EAAiC;EAC3ED,cAAc,CAACC,SAAS,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqB,WAAWA,CAACrB,SAAiB,EAAyB;EACpE,IAAI;IACFoB,UAAU,CAACpB,SAAS,CAAC;IACrB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOrJ,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;AAEA,MAAM2K,oBAAoB,GAAG,CAC3B,CAACpJ,QAAQ,CAAC+B,cAAc,EAAE,gBAAgB,CAAC,EAC3C,CAAC/B,QAAQ,CAAC6B,aAAa,EAAE,eAAe,CAAC,EACzC,CAAC7B,QAAQ,CAAC2B,eAAe,EAAE,iBAAiB,CAAC,EAC7C,CAAC3B,QAAQ,CAAC0B,OAAO,EAAE,SAAS,CAAC,CACrB;;AAEV;AACA;AACA;AACA;AACA;AACO,SAAS2H,oBAAoBA,CAClCC,UAAqE,EAC3B;EAC1CnG,MAAM,CAACmG,UAAU,CAAC;EAClB,MAAMlF,QAAQ,GAAGkF,UAAU,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3C,MAAMC,MAAM,GAAGJ,oBAAoB,CAACrM,IAAI,CAAC,CAAC,CAACM,CAAC,CAAC,KAAKA,CAAC,KAAK+G,QAAQ,CAAC,GAAG,CAAC,CAAC;EACtE,IAAIoF,MAAM,IAAI,IAAI,EAAE,OAAOA,MAAM;EACjC,MAAM,IAAI1U,aAAa,CACrB,YAAY,EACZ,wBAAwBsU,oBAAoB,CAAC3P,GAAG,CAAC,CAAC,CAAC4D,CAAC,CAAC,KAAK,GAAGA,CAAC,GAAG,CAAC,CAAC3D,IAAI,CAAC,IAAI,CAAC,EAAE,EAC/E4P,UACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,iBAAiBA,CAACtV,IAAc,EAAa;EAC3D,MAAMuV,UAAU,GAAG7B,cAAc,CAAC1T,IAAI,CAAC,CAAC6I,MAAM,GAAG4K,WAAW,CAAC5K,MAAM;EACnE,OAAO4J,eAAe,CAACjK,IAAI,CAACa,GAAG,CAACkM,UAAU,EAAE/C,mBAAmB,CAAC,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgD,aAAaA,CAC3BxV,IAAc,EACd;EACEyV,QAAQ;EACRC,SAAS,GAAGpD,sBAAsBA;AAC4B,CAAC,GAAG,CAAC,CAAC,EAC3D;EACX,IAAI,EAAEhT,MAAM,CAACoW,SAAS,CAAC,KAAKA,SAAS,IAAIA,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,EAC3D,MAAM,IAAItP,kBAAkB,CAAC,8CAA8CsP,SAAS,EAAE,CAAC;EACzF,IAAIA,SAAS,GAAGpD,sBAAsB,EACpC,MAAM,IAAIlM,kBAAkB,CAAC,mCAAmCkM,sBAAsB,EAAE,CAAC;EAC3F;EACA,OAAO9S,IAAI,CACT,IAAIP,gCAAS,CAACwW,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIH,iBAAiB,CAACtV,IAAI,CAAC,CAAC,CAAC0S,KAAK,CACtD,IAAIzT,gCAAS,CAACqT,sBAAsB,CAAC,CAACqD,IAAI,CAAC,CAAC,CAC9C,CACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAAC5V,IAAc,EAAE6V,WAAmB,EAAU;EAAA,IAAAC,IAAA,EAAAC,KAAA,EAAAC,KAAA;EAClF,MAAMnN,MAAM,GAAG6K,cAAc,CAAC1T,IAAI,CAAC,CAAC6I,MAAM,GAAG4K,WAAW,CAAC5K,MAAM;EAC/D,MAAMoN,CAAC,IAAAH,IAAA,IAAAC,KAAA,IAAAC,KAAA,GACJnN,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG0J,uBAAuB,GAAG,IAAI,cAAAyD,KAAA,cAAAA,KAAA,GACjDnN,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG0J,uBAAuB,GAAG,IAAI,cAAAwD,KAAA,cAAAA,KAAA,GACjDlN,MAAM,IAAI,EAAE,GAAG0J,uBAAuB,GAAG,IAAI,cAAAuD,IAAA,cAAAA,IAAA,GAC9C,CAAC;EACH,OAAOG,CAAC,GAAGJ,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACO,SAASK,aAAaA,CAAClW,IAAc,EAAW;EACrD,OAAO0T,cAAc,CAAC1T,IAAI,CAAC,CAAC6I,MAAM,GAAG,EAAE,GAAG4K,WAAW,CAAC5K,MAAM;AAC9D;;AChQ8E;AACb;AACb;AACiB;AACC;AAQ3C;AAG4C;;AAEvE;AACA;AACA;AACA;AACA;AACO,eAAesN,gBAAgBA,CACpC9H,IAAiC,EACjC;EACE+H,iBAAiB;EACjBC,gBAAgB;EAChBC;AACuE,CAAC,EACzD;EAAA,IAAAR,IAAA,EAAAS,aAAA;EACjB,MAAMC,MAAM,GAAG,MAAAA,CACbnL,CAAS,EACTyG,GAAuB,EACvB2E,UAAkB,EAClBC,GAAW,KACgB;IAC3B,IAAIrL,CAAC,KAAKgD,IAAI,EAAE,OAAO,IAAI;IAC3B,IAAIyD,GAAG,IAAI,IAAI,EAAE,OAAOA,GAAG;IAC3B,OAAO,CAAC,MAAMwE,MAAM,EAAEK,YAAY,CAAC,CAAC,MAAM,QAAQ,GAAGF,UAAU,GAAGC,GAAG;EACvE,CAAC;EAED,MAAME,IAAI,IAAAd,IAAA,IAAAS,aAAA,GACP,MAAMC,MAAM,CAAC,WAAW,EAAEJ,iBAAiB,EAAE,CAAC,EAAE,MAAM,CAAC,cAAAG,aAAA,cAAAA,aAAA,GACvD,MAAMC,MAAM,CAAC,aAAa,EAAEH,gBAAgB,EAAE,CAAC,EAAE,IAAI,CAAC,cAAAP,IAAA,cAAAA,IAAA,GACvD,CAAC,MAAM;IACL,MAAM,IAAIxT,aAAa,CAAC,iBAAiB+L,IAAI,EAAE,CAAC;EAClD,CAAC,EAAE,CAAC;EACN,OAAO7F,IAAI,CAACqO,KAAK,CAACD,IAAI,GAAG,CAAC,CAAC;AAC7B;AAEA,MAAME,WAA4D,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,SAASA,CAAC;EAC9BC,MAAM,GAAG,KAAK;EACd,GAAGC;AAIoC,CAAC,EAAmB;EAC3D,MAAMZ,MAAM,GAAG3K,WAAW,CAACuL,OAAO,CAACZ,MAAM,CAAC;EAC1C,IAAIW,MAAM,EAAE;IACV,MAAME,KAAK,GAAGL,WAAW,CAACM,GAAG,CAACd,MAAM,CAAC;IACrC,IAAIa,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACE,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI,MAAMpB,gBAAgB,CAAC,WAAW,EAAEe,OAAO,CAAC,CAAC,EAAE;MAC7F,OAAOC,KAAK,CAAC3V,MAAM;IACrB;EACF;EACA,MAAM;IAAEA;EAAO,CAAC,GAAG,MAAM8U,MAAM,CAACkB,wBAAwB,CAAC,CAAC;EAC1DV,WAAW,CAACW,GAAG,CAACnB,MAAM,EAAE;IAAE9U,MAAM;IAAE6V,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CAAC;EACrD,OAAO/V,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAekW,IAAIA,CACxB/V,EAAkB,EAClB;EACED,MAAM,GAAG,CAAC;EACViW,QAAQ;EACR,GAAGT;AAC0F,CAAC,EACtD;EAAA,IAAAU,SAAA;EAC1C,CAAAA,SAAA,GAAAD,QAAQ,cAAAC,SAAA,cAAAA,SAAA,GAARD,QAAQ,GAAK,MAAMxB,gBAAgB,CAAC,aAAa,EAAEe,OAAO,CAAC;EAC3D,IAAIW,GAAG;EACP,GAAG;IACD,MAAMC,EAAE,GAAG,MAAMZ,OAAO,CAACZ,MAAM,CAACyB,oBAAoB,CAACpW,EAAE,CAAC;IACxD,IAAImW,EAAE,CAACE,WAAW,KAAK,CAAC,CAAC,EAAE,OAAOF,EAAE;IACpC,IAAID,GAAG,IAAI,IAAI,EAAE;MACfA,GAAG,GAAGC,EAAE,CAACA,EAAE,CAACG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAMjB,SAAS,CAAC;QAAE,GAAGE,OAAO;QAAED,MAAM,EAAE;MAAK,CAAC,CAAC,IAAIvV,MAAM;IACvF;IACA,MAAM6H,KAAK,CAACoO,QAAQ,CAAC;EACvB,CAAC,QAAQE,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,MAAMb,SAAS,CAAC;IAAE,GAAGE,OAAO;IAAED,MAAM,EAAE;EAAK,CAAC,CAAC,IAAIY,GAAG;EAClF,MAAM,IAAIpW,eAAe,CAACC,MAAM,EAAEC,EAAE,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeuW,WAAWA,CAC/B1W,MAAc,EACd;EACEmW,QAAQ;EACR,GAAGT;AACyE,CAAC,EAC9D;EAAA,IAAAiB,UAAA;EACjB,CAAAA,UAAA,GAAAR,QAAQ,cAAAQ,UAAA,cAAAA,UAAA,GAARR,QAAQ,GAAKnP,IAAI,CAACa,GAAG,CAAC,MAAM8M,gBAAgB,CAAC,WAAW,EAAEe,OAAO,CAAC,EAAE,IAAI,CAAC;EACzE,IAAIkB,aAAa;EACjB,GAAG;IACD,IAAIA,aAAa,IAAI,IAAI,EAAE,MAAM7O,KAAK,CAACoO,QAAQ,CAAC;IAChDS,aAAa,GAAG,MAAMpB,SAAS,CAACE,OAAO,CAAC;EAC1C,CAAC,QAAQkB,aAAa,GAAG5W,MAAM;EAC/B,OAAO4W,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,gBAAgBA,CACpCzR,MAAsB,EACtB;EACE0R,OAAO,GAAG,CAAC;EACXhC,MAAM;EACN,GAAGY;AACmE,CAAC,EACxD;EACjB,MAAM;IAAEc;EAAY,CAAC,GAAG,MAAM1B,MAAM,CAACyB,oBAAoB,CAACnR,MAAM,CAAC;EACjE,MAAMpF,MAAM,GAAG,MAAM0W,WAAW,CAACF,WAAW,GAAGM,OAAO,EAAE;IAAEhC,MAAM;IAAE,GAAGY;EAAQ,CAAC,CAAC;EAC/E,MAAM;IAAEc,WAAW,EAAEO;EAAe,CAAC,GAAG,MAAMjC,MAAM,CAACyB,oBAAoB,CAACnR,MAAM,CAAC;EACjF,QAAQ2R,cAAc;IACpB,KAAK,CAAC,CAAC;MACL,MAAM,IAAI5R,iBAAiB,CAACC,MAAM,CAAC;IACrC,KAAKoR,WAAW;MACd,OAAOxW,MAAM;IACf;MACE,OAAO6W,gBAAgB,CAACzR,MAAM,EAAE;QAAE0P,MAAM;QAAEgC,OAAO;QAAE,GAAGpB;MAAQ,CAAC,CAAC;EACpE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAesB,UAAUA,CAC9B/V,OAAyD,EACzD;EACEjB,MAAM;EACNsP,IAAI;EACJwF;AACuF,CAAC,EAClD;EACxC,IAAI9U,MAAM,IAAI,IAAI,EAAE,OAAO8U,MAAM,CAACmC,2BAA2B,CAAChW,OAAO,EAAEjB,MAAM,CAAC;EAC9E,IAAIsP,IAAI,IAAI,IAAI,EAAE,OAAOwF,MAAM,CAACoC,yBAAyB,CAACjW,OAAO,EAAEqO,IAAI,CAAC;EACxE,OAAOwF,MAAM,CAACqC,kBAAkB,CAAClW,OAAO,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemW,UAAUA,CAC9BnW,OAAiF,EACjF;EACEoW,MAAM,GAAG7R,iBAAiB,CAACQ,MAAM;EACjC,GAAG0P;AAC8D,CAAC,EACnD;EACjB,MAAM4B,IAAI,GAAGrW,OAAO,CAACsW,UAAU,CAAC,KAAK,CAAC,GAClChK,MAAM,CAACC,MAAM,CAACvM,OAAO,CAAC,EAAEoJ,QAAQ,CAAC+B,cAAc,CAAC,GAC/CnL,OAA4D;EAEjE,MAAM;IAAEuW;EAAQ,CAAC,GAAG,MAAMR,UAAU,CAACM,IAAI,EAAE5B,OAAO,CAAC,CAAC+B,KAAK,CAAE3O,KAAK,IAAK;IACnE,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;IAC/C,OAAO;MAAE0O,OAAO,EAAE;IAAG,CAAC;EACxB,CAAC,CAAC;EAEF,OAAOvR,YAAY,CAACuR,OAAO,EAAE;IAAEpR,kBAAkB,EAAEiR;EAAO,CAAC,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeK,oBAAoBA,CAAC;EACzC5C;AAGF,CAAC,EAA4C;EAC3C,OAAOA,MAAM,CAAC4C,oBAAoB,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,aAAaA,CACjCC,YAA2C,EAC3C;EAAE9C;AAAyB,CAAC,EACa;EACzC,IAAI,OAAO8C,YAAY,KAAK,QAAQ,EAAE,OAAO9C,MAAM,CAAC+C,qBAAqB,CAACD,YAAY,CAAC;EACvF,OAAO9C,MAAM,CAACgD,mBAAmB,CAACF,YAAY,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeG,yBAAyBA,CAC7CzI,IAA4B,EAC5B;EAAEwF;AAAyB,CAAC,EACP;EACrB,OAAO,CAAC,MAAMA,MAAM,CAACkD,+BAA+B,CAAC1I,IAAI,CAAC,EAAE2I,YAAY;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,WAAWA,CAC/BN,YAA2C,EAC3C;EAAE9C;AAAyB,CAAC,EACW;EACvC,IAAI,OAAO8C,YAAY,KAAK,QAAQ,EAAE,OAAO9C,MAAM,CAACqD,mBAAmB,CAACP,YAAY,CAAC;EACrF,OAAO9C,MAAM,CAACsD,iBAAiB,CAACR,YAAY,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeS,mBAAmBA,CACvC/I,IAA4B,EAC5B;EAAEwF;AAAyB,CAAC,EACmB;EAC/C,OAAOA,MAAM,CAACwD,yBAAyB,CAAChJ,IAAI,CAAC;AAC/C;AAUA,MAAMiJ,gBAAiF,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEnG,eAAeC,eAAeA,CAACxT,GAAW,EAAE6P,MAAY,EAAiB;EACvE,MAAM4D,EAAE,GAAGH,gBAAgB,CAAC3C,GAAG,CAAC3Q,GAAG,CAAC;EACpCsT,gBAAgB,CAACI,MAAM,CAAC1T,GAAG,CAAC;EAC5B,IAAIyT,EAAE,IAAI,IAAI,EAAE,MAAM,IAAI5X,aAAa,CAAC,2BAA2B,CAAC;EAEpE,IAAI8X,SAAS;EACb,IAAI;IACF,MAAMC,GAAG,GACP,OAAOH,EAAE,CAAC,CAAC,CAAC,CAACG,GAAG,KAAK,QAAQ,GAAG,CAAC,MAAMX,WAAW,CAACQ,EAAE,CAAC,CAAC,CAAC,CAACG,GAAG,EAAE;MAAE/D;IAAO,CAAC,CAAC,EAAExF,IAAI,GAAGoJ,EAAE,CAAC,CAAC,CAAC,CAACG,GAAG;IAC7FD,SAAS,GAAG,MAAM9D,MAAM,CAACgE,kBAAkB,CAAC;MAC1CD,GAAG;MACHE,QAAQ,EAAEL,EAAE,CAAC,CAAC,CAAC,CAACK,QAAQ;MACxBC,GAAG,EAAEN,EAAE,CAAC5U,GAAG,CAAEmV,GAAG,KAAM;QAAE3C,EAAE,EAAE2C,GAAG,CAAC3C;MAAG,CAAC,CAAC,CAAC;MACtC4C,QAAQ,EAAEC,KAAK,CAACtQ,IAAI,CAAC,IAAIuQ,GAAG,CAACV,EAAE,CAAC5U,GAAG,CAAEmV,GAAG,IAAKA,GAAG,CAACI,cAAc,CAAC,CAAC,CAAC,CAACvV,GAAG,CAAEwV,MAAM,KAAM;QAClFA,MAAM;QACN/V,MAAM,EAAEkN,eAAe,CAAClN;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOuF,KAAK,EAAE;IACd4P,EAAE,CAACa,OAAO,CAAC,CAAC;MAAEC;IAAO,CAAC,KAAKA,MAAM,CAAC1Q,KAAK,CAAC,CAAC;IACzC;EACF;EAEA,MAAM;IAAE2Q,OAAO;IAAEV;EAAS,CAAC,GAAGH,SAAS;EACvCa,OAAO,CAACF,OAAO,CAAC,CAAC;IAAE1F,MAAM;IAAE6F,MAAM;IAAE,GAAGC;EAAc,CAAC,EAAEC,GAAG,KAAK;IAC7D,MAAM;MAAE1R,OAAO;MAAEsR,MAAM;MAAElD,EAAE;MAAE+C;IAAe,CAAC,GAAGX,EAAE,CAACkB,GAAG,CAAC;IACvD,IAAI/F,MAAM,KAAK,IAAI,EAAE3L,OAAO,CAAC;MAAE,GAAGyR,aAAa;MAAEZ;IAAS,CAAC,CAAC,CAAC,KACxDS,MAAM,CAAClR,MAAM,CAACuR,MAAM,CAAC,IAAIlV,WAAW,CAAC+U,MAAgB,CAAC,EAAE;MAAEpD,EAAE;MAAE+C;IAAe,CAAC,CAAC,CAAC;EACvF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeS,QAAQA,CAC5BxD,EAAuB,EACvB+C,cAAsC,EACtC;EACER,GAAG;EACHE,QAAQ;EACRgB,OAAO;EACPjF;AACuF,CAAC,EACxB;EAAA,IAAAkF,qBAAA;EAClE,MAAM/U,GAAG,GAAG8U,OAAO,KAAK,IAAI,GAAG,CAAClB,GAAG,EAAEE,QAAQ,CAAC,CAAChV,IAAI,CAAC,CAAC,GAAG,WAAW;EACnE,MAAMkW,QAAQ,IAAAD,qBAAA,GAAGzB,gBAAgB,CAAC3C,GAAG,CAAC3Q,GAAG,CAAC,cAAA+U,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EAChDzB,gBAAgB,CAACtC,GAAG,CAAChR,GAAG,EAAEgV,QAAQ,CAAC;EACnC,OAAO,IAAIhS,OAAO,CAAC,CAACC,OAAO,EAAEsR,MAAM,KAAK;IAAA,IAAAU,iBAAA;IACtCD,QAAQ,CAACE,IAAI,CAAC;MACZ7D,EAAE;MACF+C,cAAc;MACdR,GAAG;MACHE,QAAQ;MACR7Q,OAAO;MACPsR;IACF,CAAC,CAAC;IACF,IAAIO,OAAO,KAAK,IAAI,EAAE;MACpB,KAAKtB,eAAe,CAACxT,GAAG,EAAE6P,MAAM,CAAC;MACjC;IACF;IACA,CAAAoF,iBAAA,GAAAD,QAAQ,CAACG,OAAO,cAAAF,iBAAA,cAAAA,iBAAA,GAAhBD,QAAQ,CAACG,OAAO,GAAKjS,UAAU,CAAC,MAAM;MACpC,KAAKsQ,eAAe,CAACxT,GAAG,EAAE6P,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeuF,mBAAmBA,CACvCC,UAAmC,EACnC;EAAExF;AAAyB,CAAC,EACS;EACrC,OAAOA,MAAM,CAACyF,eAAe,CAACD,UAAU,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeE,WAAWA,CAC/BF,UAAmC,EACnC;EAAExF;AAAyB,CAAC,EACK;EACjC,OAAOA,MAAM,CAAC0F,WAAW,CAACF,UAAU,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeG,OAAOA,CAC3Bjc,IAAc,EACd;EAAEsW;AAAyB,CAAC,EACY;EACxC,OAAOA,MAAM,CAAC4F,kBAAkB,CAAClc,IAAI,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemc,WAAWA,CAC/BxZ,QAA0C,EAC1C8D,GAAW,EACX;EACE2K,MAAM,GAAG,IAAI;EACbgL,aAAa,GAAG,KAAK;EACrB9F;AAC2D,CAAC,EACd;EAChD,IAAItB,WAAW,CAACrS,QAAQ,CAAC,EAAE;IACzB,IAAIyO,MAAM,IAAIgL,aAAa,EAAE;MAC3B,MAAMpc,IAAI,GAAG,MAAMsW,MAAM,CAAC4F,kBAAkB,CAACvZ,QAAQ,CAAC;MACtD,MAAM0Z,OAAO,GAAGrc,IAAI,CAACsc,QAAQ,CAAC1T,IAAI,CAAEN,CAAC,IAAKA,CAAC,CAAC7B,GAAG,KAAKA,GAAG,CAAC;MACxD,IAAI4V,OAAO,IAAI,IAAI,EAAE,MAAM,IAAI3Z,uBAAuB,CAACC,QAAQ,EAAE8D,GAAG,CAAC;MACrE,IAAI2V,aAAa,EAAE,OAAOC,OAAO,CAACjZ,EAAE;IACtC;IACA,OAAOqR,aAAa,CAAC9R,QAAQ,CAAC;EAChC;EACA,IAAI;IACFqM,MAAM,CAACrM,QAAQ,CAAC;IAChB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAO2H,KAAK,EAAE;IACd,MAAM,IAAIrH,oBAAoB,CAAC,4BAA4BN,QAAQ,EAAE,CAAC;EACxE;AACF;;AC1ckF;AAGlF;AACA;AACA;AACA;AACO,MAAM4Z,eAAe,GAAG;EAC7B,CAAC5J,wBAAwB,CAAC6J,KAAK,GAAG;IAChC,iBAAiB,EAAE;MACjBC,SAAS,EAAE,CAAC7J,SAAS,CAAC8J,KAAK,CAAC;MAC5BC,UAAU,EAAE,CAAC9J,UAAU,CAAC+J,IAAI;IAC9B,CAAC;IACD,eAAe,EAAE;MACfH,SAAS,EAAE,EAAE;MACbE,UAAU,EAAE,CAAC9J,UAAU,CAAC+J,IAAI;IAC9B,CAAC;IACD,aAAa,EAAE;MACbH,SAAS,EAAE,EAAE;MACbE,UAAU,EAAE,CAAC9J,UAAU,CAACgK,KAAK,EAAEhK,UAAU,CAAC+J,IAAI;IAChD;EACF;AACF,CAAU;AAOH,SAASE,kBAAkBA,CAChCC,eAAyC,EACzC1O,IAAyD,EAC9C;EAAA,IAAA2O,oBAAA;EACX,MAAMC,QAAQ,GAAGV,eAAe,CAACQ,eAAe,CAAC,CAAC1O,IAAI,CAAC;EACvD,OAAO;IACLoO,SAAS,GAAAO,oBAAA,GAAEC,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAC,cAAAO,oBAAA,cAAAA,oBAAA,GAAIpK,SAAS,CAACsK,KAAK;IACnDP,UAAU,EAAEM,QAAQ,CAACN,UAAU,CAAC,CAAC;EACnC,CAAC;AACH;AAEA,iDAAe;EACbQ,SAASA,CACPzV,KAA4B,EAC5B0V,MAAU,EACV;IACEC,wBAAwB,GAAG1K,wBAAwB,CAAC6J;EACG,CAAC,EAClD;IAAA,IAAAc,MAAA;IACR,CAAAA,MAAA,GAAA5V,KAAK,cAAA4V,MAAA,cAAAA,MAAA,GAAL5V,KAAK,GAAKoV,kBAAkB,CAACO,wBAAwB,EAAE,iBAAiB,CAAC;IAEzE,OAAOnT,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,CAAC+U,SAAS,EAAE,CAAC,EAAE/U,KAAK,CAACiV,UAAU,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMY,OAAOA,CACX7V,KAA4B,EAC5B0V,MAAU;EACV;EACAlG,OAA+E,EAC/C;IAChC,IAAIxP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAIwP,OAAO,CAACmG,wBAAwB,IAAI,IAAI,EAAE,OAAOtM,SAAS;IAC9D,IAAIjH,MAAM,CAAC0T,IAAI,CAAC7K,wBAAwB,CAAC,CAAC9J,MAAM,KAAK,CAAC,EAAE,OAAOkI,SAAS;IACxE,IAAImG,OAAO,CAACZ,MAAM,IAAI,IAAI,EAAE;MAC1B,OAAOwG,kBAAkB,CACvB,CAAC,MAAM5F,OAAO,CAACZ,MAAM,CAACmH,WAAW,CAAC,CAAC,EAAEJ,wBAAwB,EAC7D,iBACF,CAAC;IACH;IACA,OAAOtM,SAAS;EAClB,CAAC;EAED2M,WAAWA,CAAC9O,MAAc,EAAa;IACrC,MAAM,CAAC+O,EAAE,GAAIC,GAAG,CAAC,GAAGhP,MAAM;IAC1B,OAAO;MAAE6N,SAAS,EAAE,CAACkB,EAAE;MAAEhB,UAAU,EAAE,CAACiB;IAAI,CAAC;EAC7C;AACF,CAAC;;AC3E2E;AACvB;AAGrD,kDAAe;EACbC,mBAAmBA,CAACC,CAA2B,EAAEvX,GAAQ,EAAc;IACrE,MAAMwX,IAAI,GACRjL,GAAG,CAACkL,cAAc,KAAKzX,GAAG,IAAIuM,GAAG,CAACmL,QAAQ,KAAK1X,GAAG,GAAG,eAAe,GAAG,aAAa;IACtF,OAAOuW,kBAAkB,CAACgB,CAAC,EAAEC,IAAI,CAAC,CAACpB,UAAU;EAC/C,CAAC;EAEDQ,SAASA,CACPzV,KAA6B,EAC7B;IAAEnB;EAAkB,CAAC,EACrB;IACE8W,wBAAwB,GAAG1K,wBAAwB,CAAC6J;EACG,CAAC,EAClD;IACR,MAAMnH,MAAM,GAAG3N,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACmW,mBAAmB,CAACR,wBAAwB,EAAE9W,GAAG,CAAC;IAE/E,OAAO2D,MAAM,CAACG,IAAI,CAAC,CAACgL,MAAM,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMkI,OAAOA,CACX7V,KAA6B,EAC7B;IAAEnB;EAAkB,CAAC;EACrB;EACA2Q,OAA+E,EAC9C;IACjC,IAAIxP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAIwP,OAAO,CAACmG,wBAAwB,IAAI,IAAI,EAAE,OAAOtM,SAAS;IAC9D,IAAIjH,MAAM,CAAC0T,IAAI,CAAC7K,wBAAwB,CAAC,CAAC9J,MAAM,KAAK,CAAC,EAAE,OAAOkI,SAAS;IACxE,IAAImG,OAAO,CAACZ,MAAM,IAAI,IAAI,EAAE;MAC1B,OAAO,IAAI,CAACuH,mBAAmB,CAC7B,CAAC,MAAM3G,OAAO,CAACZ,MAAM,CAACmH,WAAW,CAAC,CAAC,EAAEJ,wBAAwB,EAC7D9W,GACF,CAAC;IACH;IACA,OAAOwK,SAAS;EAClB,CAAC;EAED2M,WAAWA,CAAC9O,MAAc,EAAc;IACtC,OAAOA,MAAM,CAAC,CAAC,CAAC;EAClB;AACF,CAAC;;AC5C+F;AAC9C;AAC4B;AACtB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACO,MAAMsP,eAAe,GAAG,CAC7BrS,QAAQ,CAAC+B,cAAc,EACvB/B,QAAQ,CAACoC,IAAI,EACbpC,QAAQ,CAACkC,UAAU,EACnBlC,QAAQ,CAAC6B,aAAa,EACtB7B,QAAQ,CAAC2B,eAAe,EACxB3B,QAAQ,CAAC0B,OAAO,CACR;AAIK,SAAS4Q,eAAeA,CACrC,GAAGnO,SAAqB,EAIxB;EACA,OAAO;IACL;AACJ;AACA;AACA;AACA;IACImN,SAASA,CAACiB,MAAM,EAAE;MAChB,MAAMC,GAAG,GAAGD,MAAM,CAAC3P,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9B,IAAI,CAAC7D,aAAa,CAACyT,GAAG,EAAEH,eAAe,CAAC,EAAE,MAAM,IAAIxX,gBAAgB,CAAC2X,GAAG,CAAC;MACzE,IAAI,CAACzT,aAAa,CAACyT,GAAG,EAAErO,SAAS,CAAC,EAAE;QAClC,MAAM,IAAIrP,aAAa,CAAC,kBAAkB,EAAEqP,SAAS,CAACzK,IAAI,CAAC,IAAI,CAAC,EAAE8Y,GAAG,CAAC;MACxE;MACA,MAAMC,KAAK,GAAGJ,eAAe,CAACK,OAAO,CAACF,GAAG,CAAC,GAAG,CAAC;MAC9C,OAAOnU,MAAM,CAACG,IAAI,CAAC,CAAC,GAAGwH,OAAO,CAACyM,KAAK,CAAC,EAAE,GAAGtP,MAAM,CAACoP,MAAM,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIV,WAAWA,CAAC5I,GAAG,EAAE;MACf,MAAMwJ,KAAK,GAAGpU,MAAM,CAACG,IAAI,CAACyK,GAAG,CAAC,CAAC0J,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAC/C,MAAMH,GAAG,GAAGH,eAAe,CAACI,KAAK,GAAG,CAAC,CAAC;MACtC,IAAID,GAAG,IAAI,IAAI,EAAE,MAAM,IAAI/X,mBAAmB,CAACgY,KAAK,CAAC;MACrD,IAAI,CAAC1T,aAAa,CAACyT,GAAG,EAAErO,SAAS,CAAC,EAAE;QAClC,MAAM,IAAIrP,aAAa,CAAC,kBAAkB,EAAEqP,SAAS,CAACzK,IAAI,CAAC,IAAI,CAAC,EAAE8Y,GAAG,CAAC;MACxE;MACA,OAAOtP,MAAM,CAAC+F,GAAG,CAAC2J,QAAQ,CAAC,CAAC,CAAC,EAAEJ,GAAG,CAAC;IACrC;EACF,CAAC;AACH;;AC3De,SAASK,aAAaA,CAAwBC,WAG5D,EAGC;EACA,OAAO;IACLxB,SAASA,CAACyB,KAAK,EAAExB,MAAM,EAAE;MACvB,OAAOwB,KAAK,CAACtZ,GAAG,CAAEuF,IAAI,IAAK8T,WAAW,CAACxB,SAAS,CAACtS,IAAI,EAAEuS,MAAM,CAAC,CAAC;IACjE,CAAC;IAEDM,WAAWA,CAACmB,OAAO,EAAEzB,MAAM,EAAE;MAC3B,OAAOyB,OAAO,CAACvZ,GAAG,CAAEsJ,MAAM,IAAK+P,WAAW,CAACjB,WAAW,CAAC9O,MAAM,EAAEwO,MAAM,CAAC,CAAC;IACzE;EACF,CAAC;AACH;;AChBwC;AAEiB;AACP;AAElD,4CAAe;EACbD,SAASA,CAACzV,KAAU,EAAU;IAC5B,IAAIpI,MAAM,CAACoI,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI/G,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAE+G,KAAK,CAAC;IACvF,OAAOmK,OAAO,CAACnK,KAAK,EAAE,IAAI,CAAC;EAC7B,CAAC;EAEDgW,WAAWA,CAAChW,KAAa,EAAU;IACjC,OAAOmN,OAAO,CAACnN,KAAK,CAAC;EACvB;AACF,CAAC;;ACd6B;AAEuD;AAErF,kDAAe;EACb,GAAGoX,KAAI;EAEP;EACAC,eAAeA,CAACrX,KAAyB,EAAE0V,MAAU,EAAElG,OAAW,EAAU;IAC1E,OAAOxP,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,GAAG;EACrB,CAAC;EAEDyV,SAASA,CACPzV,KAAsB,EACtB0V,MAAU,EACV;IAAEzV,YAAY,GAAGX,iBAAiB,CAACQ,MAAM;IAAE,GAAG0P;EAA8C,CAAC,EACrF;IACR,OAAO4H,KAAI,CAAC3B,SAAS,CACnB,IAAI,CAAC4B,eAAe,CAClBrX,KAAK,IAAI,IAAI,GAAGD,YAAY,CAACC,KAAK,EAAE;MAAEC;IAAa,CAAC,CAAC,GAAGD,KAAK,EAC7D0V,MAAM,EACNlG,OACF,CACF,CAAC;EACH;AACF,CAAC;;ACzB6E;AACrB;AAE1C,SAAS8H,eAAeA,CACrC/O,QAAW,EACXgP,QAAmB,EAMnB;EACA,OAAO;IACL9B,SAASA,CAAC+B,WAAgC,EAAE;MAC1C,IAAIA,WAAW,IAAI,IAAI,EAAE;QACvB,IAAID,QAAQ,KAAK,IAAI,EAAE,OAAO/U,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC;QAC7C,MAAM,IAAI1J,aAAa,CAAC,cAAc,EAAE,UAAU,EAAEue,WAAW,CAAC;MAClE;MACA,OAAOlQ,MAAM,CAACkQ,WAAW,CAAC;IAC5B,CAAC;IAEDxB,WAAWA,CAAC9O,MAAM,EAAE;MAClB,OAAOG,MAAM,CAACH,MAAM,EAAEqB,QAAQ,CAAC;IACjC;EACF,CAAC;AACH;;ACzB8E;AAI/D,SAASkP,aAAaA,CACnC5Y,GAAO,EAcP;EACA,OAAO;IACL4W,SAASA,CAACiC,QAAQ,EAAE;MAAEC;IAAU,CAAC,EAAE;MACjC,IAAIC,WAAW,CAACC,MAAM,CAACH,QAAQ,CAAC,EAAE,OAAOlV,MAAM,CAACG,IAAI,CAAC+U,QAAe,CAAC;MACrE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACrG,UAAU,CAAC,KAAK,CAAC,EAAE;QAC9D,OAAO/J,MAAM,CAACoQ,QAA+B,CAAC;MAChD;MACA,OAAOpQ,MAAM,CAACqQ,SAAS,CAAC;QAAE,GAAGD,QAAQ;QAAE,IAAI7Y,GAAG,IAAI,IAAI,IAAI;UAAEA;QAAI,CAAC;MAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAEDmX,WAAWA,CAAC5I,GAAG,EAAE;MAAE0K;IAAY,CAAC,EAAE;MAChC,OAAOA,WAAW,CAACzQ,MAAM,CAAC+F,GAAG,EAAEjJ,QAAQ,CAACmB,SAAS,CAAC,EAAEzG,GAAG,CAAC;IAC1D;EACF,CAAC;AACH;;ACjCyD;AACD;AAEzC,SAASkZ,mBAAmBA,CACzCC,GAAS,EAIT;EACA,MAAMC,MAAM,GAAG7V,MAAM,CAAC6V,MAAM,CAACD,GAAG,CAAC,CAACE,MAAM,CAAEzW,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,CAAC;EACtE,OAAO;IACLgU,SAASA,CAACzV,KAAK,EAAE;MACf,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,MAAM,IAAI/G,aAAa,CAAC,OAAO,EAAE,gBAAgB,EAAE+G,KAAK,CAAC;MACxF,IAAIA,KAAK,GAAG,IAAI,EAAE,MAAM,IAAI/G,aAAa,CAAC,OAAO,EAAE,qBAAqB,EAAE+G,KAAK,CAAC;MAChF,IAAI,CAACkD,aAAa,CAAClD,KAAK,EAAEiY,MAAM,CAAC,EAAE;QACjC,MAAM,IAAIhf,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAE+G,KAAK,CAAC;MAClE;MACA,OAAOwC,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,CAAC,CAAC;IAC7B,CAAC;IAEDgW,WAAWA,CAAC9O,MAAM,EAAE;MAClB,IAAIA,MAAM,CAAC/F,MAAM,KAAK,CAAC,EAAE;QACvB,MAAM,IAAIlI,aAAa,CAAC,QAAQ,EAAE,wBAAwB,EAAEiO,MAAM,CAAC/F,MAAM,CAAC;MAC5E;MACA,MAAMnB,KAAK,GAAGkH,MAAM,CAAC,CAAC,CAAC;MACvB,IAAI,CAAChE,aAAa,CAAClD,KAAK,EAAEiY,MAAM,CAAC,EAAE;QACjC,MAAM,IAAIhf,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAE+G,KAAK,CAAC;MAClE;MACA,OAAOA,KAAK;IACd;EACF,CAAC;AACH;;AC/ByC;AACC;AACqC;AAC1B;AAEgC;AAErF,MAAMoY,aAAgE,GAAG,IAAI/I,OAAO,CAAC,CAAC;AAE/E,eAAegJ,0BAA0BA,CAACC,IAAU,EAAmB;EAC5E,MAAM7I,KAAK,GAAG2I,aAAa,CAAC1I,GAAG,CAAC4I,IAAI,CAAC;EACrC,IAAI7I,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACE,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;IACxD,OAAOJ,KAAK,CAAC8I,QAAQ;EACvB;EAEA,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAG,CAAC,MAAMH,IAAI,CAACI,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;EACzE,IAAIH,QAAQ,GACVE,WAAW,GAAG,EAAE,GACZ,EAAE,GACF7P,MAAM,CAAC,IAAIrR,gCAAS,CAACihB,WAAW,CAACld,QAAQ,CAAC,CAAC,CAAC,CAAC0P,KAAK,CAAC,IAAI,CAAC,CAAChT,YAAY,CAAC,CAAC,CAACoI,OAAO,CAAC,CAAC,CAAC;EAExF,MAAMuY,eAAe,GAAG/P,MAAM,CAAC8B,aAAa,CAAC,GAAG,OAAO,CAAC,CAAC;EACzD,IAAI6N,QAAQ,GAAGI,eAAe,EAAE;IAC9BC,OAAO,CAACC,IAAI,CACV,uBAAuBN,QAAQ,qDAAqD,GAClF,0BAA0BI,eAAe,GAAG,GAC5C,oEACJ,CAAC;IACDJ,QAAQ,GAAGI,eAAe;EAC5B;EAEAP,aAAa,CAACrI,GAAG,CAACuI,IAAI,EAAE;IAAEC,QAAQ;IAAE5I,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CAAC;EACvD,OAAO0I,QAAQ;AACjB;;AAEA;AACA,gDAAe;EACb,GAAGJ,WAAU;EAEb,MAAMtC,OAAOA,CACX7V,KAAsB,EACtB0V,MAAU,EACV;IACE9G,MAAM;IACN3O;EAIF,CAAC,EACyB;IAC1B,IAAID,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAI4O,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,IAAI3V,aAAa,CAAC,QAAQ,EAAE,0CAA0C,EAAE2V,MAAM,CAAC;IACvF;IACA,MAAM2J,QAAQ,GAAG,MAAMF,0BAA0B,CAACzJ,MAAM,CAAC;IACzD,IAAI2J,QAAQ,KAAK,EAAE,EAAE,OAAOlP,SAAS;IACrC,OAAOtJ,YAAY,CAACwY,QAAQ,EAAE;MAAErY,kBAAkB,EAAED;IAAa,CAAC,CAAC;EACrE,CAAC;EAEDoX,eAAeA,CAACrX,KAAyB,GAAG0K,aAAa,CAACpP,QAAQ,CAAC,CAAC,EAAU;IAC5E,IAAI,CAAC0E,KAAK,GAAG0K,aAAa,EAAE;MAC1B,MAAM,IAAIrR,oBAAoB,CAC5B,aAAa2G,KAAK,CAAC1E,QAAQ,CAAC,CAAC,wBAAwBoP,aAAa,EACpE,CAAC;IACH;IACA,OAAO1K,KAAK;EACd;AACF,CAAC;;ACnEwC;AACsC;AACrB;AAC5B;AACY;AACkB;AACJ;AACI;AAI5D,MAAM8Y,QAAQ,GAAG,KAAK;AACtB,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,kBAAkB,GAAG,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAIC,MAAW,IAAa;EAAA,IAAAC,WAAA;EAC3C,MAAMC,UAAU,GAAG;IACjB,CAAChO,GAAG,CAACiO,sBAAsB,GAAG,EAAE;IAChC,CAACjO,GAAG,CAACkO,iBAAiB,GAAG,CAAC;IAC1B,CAAClO,GAAG,CAACmO,gBAAgB,GAAG,CAAC;IACzB,CAACnO,GAAG,CAACkL,cAAc,GAAG,EAAE;IACxB,CAAClL,GAAG,CAACoO,UAAU,GAAG,CAAC;IACnB,CAACpO,GAAG,CAACmL,QAAQ,GAAG,CAAC;IACjB,CAACnL,GAAG,CAACqO,WAAW,GAAG,CAAC,GAAG;EACzB,CAAU;EACV,MAAMC,MAAM,IAAAP,WAAA,GAAGC,UAAU,CAACF,MAAM,CAA4B,cAAAC,WAAA,cAAAA,WAAA,GAAI,CAAC;EACjE,OAAOO,MAAM,GAAGZ,QAAQ;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,YAAY,GAAGA,CACnBT,MAAW,EACXU,MAAc,EACd;EAAEC,WAAW;EAAEC;AAA0D,CAAC,KAC/D;EACX,QAAQZ,MAAM;IACZ,KAAK9N,GAAG,CAAC2O,gBAAgB;IACzB,KAAK3O,GAAG,CAAC4O,cAAc;IACvB,KAAK5O,GAAG,CAAC6O,aAAa;IACtB,KAAK7O,GAAG,CAAC8O,gBAAgB;MACvB,OACEN,MAAM,GAAGb,YAAY,GACrBjY,IAAI,CAAChJ,IAAI,CAAE,KAAK,GAAG+hB,WAAW,GAAI/Y,IAAI,CAACqO,KAAK,CAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAI6J,kBAAkB,CAAC,CAAC;IAEvF,KAAK5N,GAAG,CAACmL,QAAQ;IACjB,KAAKnL,GAAG,CAACqO,WAAW;MAClB,OAAO,CAACG,MAAM,GAAGE,WAAW,IAAIf,YAAY;IAC9C;MACE,OAAOa,MAAM,GAAGb,YAAY;EAChC;AACF,CAAC;AAED,SAASoB,oBAAoBA,CAACzE,MAAW,EAAU;EACjD,MAAM0E,OAAO,GAAG;IACd,CAAChP,GAAG,CAAC2O,gBAAgB,GAAG,gBAAgB;IACxC,CAAC3O,GAAG,CAAC4O,cAAc,GAAG,gBAAgB;IACtC,CAAC5O,GAAG,CAAC6O,aAAa,GAAG,eAAe;IACpC,CAAC7O,GAAG,CAAC8O,gBAAgB,GAAG;EAC1B,CAAU;EAEV,MAAM;IAAErb;EAAI,CAAC,GAAG6W,MAAM;EACtB,IAAI,CAACzS,aAAa,CAACpE,GAAG,EAAEub,OAAO,CAAC,EAAE,OAAO,CAAC;EAC1C,OAAO1E,MAAM,CAAC0E,OAAO,CAACvb,GAAG,CAAC,CAAC;AAC7B;;AAEA;AACA;AACA;AACO,SAASwb,QAAQA,CACtBC,OAA4B,EAC5BC,QAA6B,EAC7BC,OAA2B,EACnB;EACR,MAAM;IAAErZ;EAAO,CAAC,GAAGmG,MAAM,CAACgT,OAAO,CAAC;EAClC,MAAMG,QAAQ,GAAGF,QAAQ,CAACD,OAAO,CAAC;EAElC,IAAIR,WAAW,GAAG,CAAC;EACnB,IAAIW,QAAQ,CAAC5b,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,IAAIkE,QAAQ,CAAC5b,GAAG,KAAKuM,GAAG,CAACqO,WAAW,EAAE;IACrEK,WAAW,GAAGxS,MAAM,CAACkT,OAAO,CAACC,QAAQ,CAACrK,EAAE,CAACsK,SAAS,CAAC,CAAC,CAACvZ,MAAM;EAC7D;EAEA,OACE8X,WAAW,CAACwB,QAAQ,CAAC5b,GAAG,CAAC,GACzB8a,YAAY,CAACc,QAAQ,CAAC5b,GAAG,EAAEsC,MAAM,EAAE;IACjC0Y,WAAW,EAAEM,oBAAoB,CAACM,QAAQ,CAAC;IAC3CX;EACF,CAAC,CAAC;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASa,eAAeA,CACtBC,SAAoD,EACpDL,QAA6B,EAC7BC,OAA2B,EAChB;EACX,IAAIK,GAAG,GAAG,IAAItjB,gCAAS,CAAC,CAAC,CAAC;EAC1B,IAAIujB,WAAW;EACf,GAAG;IACDA,WAAW,GAAGD,GAAG;IACjBA,GAAG,GAAG,IAAItjB,gCAAS,CAACmT,aAAa,CAAC,CAACM,KAAK,CAACqP,QAAQ,CAACO,SAAS,CAACC,GAAG,CAAC,EAAEN,QAAQ,EAAEC,OAAO,CAAC,CAAC;EACvF,CAAC,QAAQ,CAACK,GAAG,CAACE,EAAE,CAACD,WAAW,CAAC;EAC7B,OAAOD,GAAG;AACZ;;AAEA;AACA;AACA;AACA,MAAMG,cAAc,GAAG,aAAa;AASpC,0CAAe;EACb,GAAG7C,WAAU;EAEb,MAAMtC,OAAOA,CACX7V,KAAsB,EACtB0V,MAAU,EACV;IAAE9G;EAA0B,CAAC,EACH;IAC1B,IAAI5O,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAI4O,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,IAAI3V,aAAa,CAAC,QAAQ,EAAE,qCAAqC,EAAE2V,MAAM,CAAC;IAClF;IACA,MAAM2J,QAAQ,GAAG,MAAMF,0BAA0B,CAACzJ,MAAM,CAAC;IACzD,IAAI2J,QAAQ,KAAK,EAAE,EAAE,OAAOlP,SAAS;IACrC,OAAO2R,cAAc,GAAGzC,QAAQ;EAClC,CAAC;EAEDlB,eAAeA,CACbzB,MAA0B,EAC1B;IAAEgF,SAAS;IAAEL,QAAQ;IAAEC,OAAO;IAAES;EAAwC,CAAC,EACzE;IAAEC;EAA+C,CAAC,EAC1C;IACR,IAAID,gBAAgB,IAAI,IAAI,EAAE,OAAOA,gBAAgB,CAAC7a,OAAO,CAAC,CAAC;IAC/D,MAAM+a,MAAM,GAAGR,eAAe,CAC3BE,GAAG,IAAKD,SAAS,CAAC;MAAEK,gBAAgB,EAAEJ;IAAI,CAAC,CAAC,EAC7CN,QAAQ,EACRC,OACF,CAAC;IACD,MAAMxa,KAAK,GACT4V,MAAM,EAAEvE,UAAU,CAAC2J,cAAc,CAAC,KAAK,IAAI,GACvCG,MAAM,CAACC,SAAS,CAAC1Q,aAAa,CAAC,CAACM,KAAK,CAAC4K,MAAM,CAACyF,OAAO,CAACL,cAAc,EAAE,EAAE,CAAC,CAAC,GACzE,IAAIzjB,gCAAS,CAACqe,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIuF,MAAM,CAAC;IACrC,IAAIA,MAAM,CAACG,EAAE,CAACtb,KAAK,CAAC,EAAE;MACpB,IAAIkb,eAAe,KAAK,IAAI,EAAE,OAAOC,MAAM,CAAC/a,OAAO,CAAC,CAAC;MACrD,MAAM,IAAI/G,oBAAoB,CAAC,OAAO2G,KAAK,CAAC1E,QAAQ,CAAC,CAAC,wBAAwB6f,MAAM,EAAE,CAAC;IACzF;IACA,OAAOnb,KAAK,CAACI,OAAO,CAAC,CAAC;EACxB,CAAC;EAEDqV,SAASA,CACPzV,KAAiD,EACjD0V,MAA0E,EAC1ElG,OAAmF,EAC3E;IACR,IAAI,OAAOxP,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACqR,UAAU,CAAC2J,cAAc,CAAC,EAAE;MACjE,OAAO5D,KAAI,CAAC3B,SAAS,CAAC,IAAI,CAAC4B,eAAe,CAACrX,KAAK,EAAE0V,MAAM,EAAElG,OAAO,CAAC,CAAC;IACrE;IACA,OAAO2I,WAAU,CAAC1C,SAAS,CAAC8F,IAAI,CAAC,IAAI,EAAEvb,KAAK,EAAE0V,MAAM,EAAElG,OAAO,CAAC;EAChE;AACF,CAAC;;AClM6B;AAE9B,kDAAe;EACbiG,SAASA,CAACzV,KAAa,EAAU;IAC/B,OAAOoX,KAAI,CAAC3B,SAAS,CAACzV,KAAK,CAAC;EAC9B,CAAC;EAEDgW,WAAWA,CAAChW,KAAa,EAAU;IACjC,OAAO,CAACoX,KAAI,CAACpB,WAAW,CAAChW,KAAK,CAAC;EACjC;AACF,CAAC;;ACV+D;AACR;AACf;AACL;AAGpC,SAASyb,oBAAoBA,CAC3BC,MAAc,EACdd,SAAiC,EACjCL,QAA6B,EAC7BC,OAA2B,EACnB;EACR,OAAOkB,MAAM,GAAG,CAACrB,QAAQ,CAACO,SAAS,CAACc,MAAM,CAAC,EAAEnB,QAAQ,EAAEC,OAAO,CAAC;AACjE;AAEA,gDAAe;EACb,GAAGgB,WAAS;EAEZ/F,SAASA,CACPG,MAA0B,EAC1B;IACE/W,GAAG;IACH+b,SAAS;IACTL,QAAQ;IACRC,OAAO;IACPmB;EAOF,CAAC,EACD;IAAED,MAAM,GAAG;EAAyB,CAAC,EAC7B;IACR,IAAIC,kBAAkB,IAAI,IAAI,EAAE,OAAOH,WAAS,CAAC/F,SAAS,CAACkG,kBAAkB,CAAC;IAE9E,MAAMC,WAAW,GACf/c,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,GAChB9L,gBAAgB,GAChBgR,oBAAoB,CAClBC,MAAM,EACLG,QAAQ,IAAKjB,SAAS,CAAC;MAAEe,kBAAkB,EAAEE,QAAQ;MAAEX,eAAe,EAAE;IAAK,CAAC,CAAC,EAChFX,QAAQ,EACRC,OACF,CAAC;IACP,MAAMxa,KAAK,GAAG4V,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIgG,WAAW;IACnC,IAAI5b,KAAK,GAAG4b,WAAW,EAAE;MACvB,MAAM,IAAIviB,oBAAoB,CAAC,aAAa2G,KAAK,6BAA6B4b,WAAW,EAAE,CAAC;IAC9F;IACA,OAAOJ,WAAS,CAAC/F,SAAS,CAACzV,KAAK,CAAC;EACnC;AACF,CAAC;;ACpDD,4CAAe;EACbyV,SAASA,CAACzV,KAAa,EAAU;IAC/B,OAAOwC,MAAM,CAACG,IAAI,CAAC3C,KAAK,CAAC;EAC3B,CAAC;EAEDgW,WAAWA,CAAChW,KAAa,EAAU;IACjC,OAAOA,KAAK,CAAC1E,QAAQ,CAAC,CAAC;EACzB;AACF,CAAC;;ACR8B;AAG/B,uDAAe;EACb;AACF;AACA;EACEma,SAASA,CAACzV,KAAe,EAAU;IACjC,OAAO8b,KAAK,CAACrG,SAAS,CAACzV,KAAK,CAAC;EAC/B,CAAC;EAED;AACF;AACA;EACEgW,WAAWA,CAAChW,KAAa,EAAY;IACnC,OAAO8b,KAAK,CAAC9F,WAAW,CAAChW,KAAK,CAAC;EACjC;AACF,CAAC;;ACjBwC;AACS;AACkB;AAC1B;AAG1C,+CAAe;EACb,GAAGmY,WAAU;EAEbd,eAAeA,CAACzB,MAA0B,EAAEmG,QAA4B,EAAU;IAChF,MAAM1gB,UAAU,GAAGuS,iBAAiB,CAACmO,QAAQ,CAACzjB,IAAI,CAAC;IACnD,MAAM0H,KAAK,GAAG,IAAIzI,gCAAS,CAACqe,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIva,UAAU,CAAC;IACjD,IAAIA,UAAU,CAACigB,EAAE,CAACtb,KAAK,CAAC,EAAE,MAAM,IAAI7E,wBAAwB,CAAC6E,KAAK,EAAE3E,UAAU,CAAC;IAC/E,OAAO2E,KAAK,CAACI,OAAO,CAAC,CAAC;EACxB,CAAC;EAED;AACF;AACA;AACA;AACA;EACEqV,SAASA,CACPzV,KAAsB,EACtB+b,QAA8E,EAC9EC,UAA2D,EACnD;IACR,OAAO7D,WAAU,CAAC1C,SAAS,CAAC8F,IAAI,CAAC,IAAI,EAAEvb,KAAK,EAAE+b,QAAQ,EAAEC,UAAU,CAAC;EACrE;AACF,CAAC;;AC3B0D;AACxB;AAC2B;AAE9D,MAAMC,WAAW,GAAGlhB,eAAO,CAACoJ,QAAQ,CAACoC,IAAI,CAAC;AAE1C,8CAAe;EACb,GAAG0V,WAAW;EAEd;AACF;AACA;EACExG,SAASA,CAACzV,KAA8B,EAAU;IAChD,OAAOic,WAAW,CAACxG,SAAS,CAACnI,WAAW,CAACtN,KAAK,CAAC,GAAG+M,aAAa,CAAC/M,KAAK,CAAC,GAAGA,KAAK,CAAC;EACjF;AACF,CAAC;;AChBgE;AACxB;AAEgB;AAEnB;AAEvB,SAASkc,aAAaA,CACnCC,SAAoB,EAgBpB;EACA,OAAO;IACL,GAAGX,WAAS;IAEZ/F,SAASA,CAACzV,KAAa,EAAE;MAAEnB;IAAI,CAAC,EAAU;MACxC,IAAIuM,GAAG,CAACoO,UAAU,KAAK3a,GAAG,IAAImB,KAAK,KAAK,CAAC,EAAE;QACzC,MAAM,IAAI/G,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAE+G,KAAK,CAAC;MAClE;MACA,OAAOwb,WAAS,CAAC/F,SAAS,CAACzV,KAAK,CAAC;IACnC,CAAC;IAED,MAAM6V,OAAOA,CAAC7V,KAAK,EAAE0V,MAAM,EAAElG,OAAO,EAAE;MACpC,IAAIxP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;MAC/B;MACA;MACA,MAAM;QAAE4O,MAAM;QAAEwN;MAAS,CAAC,GAAG5M,OAAO;MACpC,MAAM9D,QAAQ,GAAG8D,OAAO,CAAC2M,SAAS,CAAC;MACnC,MAAMhjB,WAAW,GAAG,uCAAuC;MAC3D,IAAIyV,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI3V,aAAa,CAAC,QAAQ,EAAEE,WAAW,EAAEyV,MAAM,CAAC;MAC1E,IAAIlD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAIzS,aAAa,CAAC,UAAU,EAAEE,WAAW,EAAEuS,QAAQ,CAAC;MAChF,OAAO,CACL,MAAMkD,MAAM,CACTyN,mBAAmB,CAAC3Q,QAAQ,CAAC2P,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;QAAEe;MAAS,CAAC,CAAC,CAClE7K,KAAK,CAAE3O,KAAK,IAAK;QAChB,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;QAC/C,OAAO;UAAE0Z,SAAS,EAAE;QAAE,CAAC;MACzB,CAAC,CAAC,EACJA,SAAS;IACb,CAAC;IAEDH;EACF,CAAC;AACH;;ACvDkD;AAC4B;AACpB;AACkC;AAClB;AAE1E,MAAMI,MAAM,GAAG/Z,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,MAAM6Z,QAAQ,GAAGha,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM8Z,eAAe,GAAG,IAAI;AAC5B,MAAMC,UAAU,GAAG3hB,eAAO,CAAC,GAAGyb,eAAe,CAAC;;AAE9C;;AAQA,+CACEmG,QAAkB,KAMd;EACJ;AACF;AACA;AACA;AACA;AACA;EACElH,SAASA,CAACb,QAAQ,EAAE;IAClB,IAAIA,QAAQ,CAACzT,MAAM,GAAG,EAAE,EAAE;MACxB,MAAM,IAAI9H,oBAAoB,CAC5B,qCAAqCub,QAAQ,CAACzT,MAAM,UACtD,CAAC;IACH;IACA,OAAOyT,QAAQ,CAAChX,GAAG,CAAC,CAAC;MAAEmB,GAAG;MAAErD;IAAG,CAAC,KAAK;MACnC,IAAIoL,OAAO;MACX,IAAIsB,cAAc,CAAC1M,EAAE,EAAE,GAAG8a,eAAe,CAAC,EAAE;QAC1C1P,OAAO,GAAG,CAAC,IAAI6V,QAAQ,GAAG,CAACJ,MAAM,CAAC,GAAG,EAAE,CAAC,EAAEG,UAAU,CAACjH,SAAS,CAAC/Z,EAAE,CAAC,CAAC;MACrE;MACA,IAAI0M,cAAc,CAAC1M,EAAE,EAAEyI,QAAQ,CAACmB,SAAS,CAAC,EAAE;QAC1C,MAAMoB,IAAI,GAAGY,MAAM,CAAC5L,EAAE,CAAC;QACvB,IAAIgL,IAAI,CAACvF,MAAM,GAAGsb,eAAe,EAAE;UACjC,MAAM,IAAIxjB,aAAa,CACrB,aAAa,EACb,gBAAgBwjB,eAAe,GAAG,CAAC,QAAQ,EAC3C,GAAG/V,IAAI,CAACvF,MAAM,QAChB,CAAC;QACH;QACA2F,OAAO,GAAG,CAAC0V,QAAQ,EAAE9V,IAAI,CAAC;MAC5B;MACA,IAAII,OAAO,IAAI,IAAI,EAAE,MAAM,IAAIvI,WAAW,CAAC,+BAA+B7C,EAAE,EAAE,CAAC;MAC/E,OAAO,CAACyO,OAAO,CAACpL,GAAG,CAAC,EAAEyD,MAAM,CAACC,MAAM,CAACqE,OAAO,CAAC,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;AACA;AACA;EACEkP,WAAWA,CAACpB,QAAQ,EAAE;IACpB,OAAOA,QAAQ,CAAChX,GAAG,CAAC,CAAC,CAACgf,IAAI,EAAEC,GAAG,CAAC,KAAK;MACnC,IAAI,CAACF,QAAQ,EAAE,OAAO;QAAE5d,GAAG,EAAE6d,IAAI,CAACthB,QAAQ,CAAC,CAAC;QAAEI,EAAE,EAAEghB,UAAU,CAAC1G,WAAW,CAAC6G,GAAG;MAAE,CAAC;MAC/E,MAAMhe,GAAG,GAAGge,GAAG,CAAC9F,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9B,MAAMjQ,OAAO,GAAG+V,GAAG,CAAC9F,QAAQ,CAAC,CAAC,CAAC;MAC/B,IAAIrb,EAAE;MACN,IAAImD,GAAG,CAACsI,MAAM,CAACoV,MAAM,CAAC,EAAE7gB,EAAE,GAAGghB,UAAU,CAAC1G,WAAW,CAAClP,OAAO,CAAC;MAC5D;MACA,IAAIjI,GAAG,CAACsI,MAAM,CAACqV,QAAQ,CAAC,EAAE9gB,EAAE,GAAG2L,MAAM,CAACP,OAAO,EAAE3C,QAAQ,CAACmB,SAAS,CAA2B;MAC5F,IAAI5J,EAAE,IAAI,IAAI,EAAE,MAAM,IAAI6C,WAAW,CAAC,6BAA6BM,GAAG,EAAE,CAAC;MACzE,OAAO;QAAEE,GAAG,EAAE6d,IAAI,CAACthB,QAAQ,CAAC,CAAC;QAAEI;MAAG,CAAC;IACrC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AC/EwC;AAIe;;AAEzD;AACA;AACA;AACA,gDAAe;EACb,GAAGyc,WAAU;EAEb,MAAMtC,OAAOA,CACX7V,KAAsB,EACtB0V,MAAU,EACVlG,OAA4D,EAC5D;IACA,IAAIxP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,MAAM;MAAE4O,MAAM;MAAEjD;IAAS,CAAC,GAAG6D,OAAO;IACpC,MAAMrW,WAAW,GAAG,0CAA0C;IAC9D,IAAIyV,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI3V,aAAa,CAAC,QAAQ,EAAEE,WAAW,EAAEyV,MAAM,CAAC;IAC1E,IAAIjD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI1S,aAAa,CAAC,UAAU,EAAEE,WAAW,EAAEwS,QAAQ,CAAC;IAChF,OAAO,CAAC,MAAMiD,MAAM,CAACkO,iBAAiB,CAACnR,QAAQ,CAAC,EAAEoR,QAAQ,CAACzhB,QAAQ,CAAC,CAAC;EACvE;AACF,CAAC;;ACxBD,0CAAe;EACbma,SAASA,CAACvO,MAAkB,EAAU;IACpC,OAAO1E,MAAM,CAACG,IAAI,CAACuE,MAAM,CAAC;EAC5B,CAAC;EAED8O,WAAWA,CAAC9O,MAAc,EAAU;IAClC,OAAOA,MAAM;EACf;AACF,CAAC;;ACRwD;AAChB;AAE1B,SAAS8V,sBAAsBA,CAI5CC,UAAiB,EACjB1F,QAAmB,EAMnB;EACA,OAAO;IACL9B,SAASA,CAACzV,KAAa,EAAE;MACvB,IAAI,CAACuX,QAAQ,KAAK,IAAI,IAAIvX,KAAK,IAAI,IAAI,KAAKA,KAAK,KAAKid,UAAU,EAAE;QAChE,MAAM,IAAIhkB,aAAa,CAAC,gBAAgB,EAAEgkB,UAAU,EAAEjd,KAAK,CAAC;MAC9D;MACA,OAAOwb,WAAS,CAAC/F,SAAS,CAACwH,UAAU,CAAC;IACxC,CAAC;IAEDjH,WAAWA,CAAC5I,GAAG,EAAE;MACf,MAAMpN,KAAK,GAAGwb,WAAS,CAACxF,WAAW,CAAC5I,GAAG,CAAC;MACxC,IAAIpN,KAAK,KAAKid,UAAU,EAAE,MAAM,IAAIhkB,aAAa,CAAC,gBAAgB,EAAEgkB,UAAU,EAAEjd,KAAK,CAAC;MACtF,OAAOid,UAAU;IACnB,CAAC;IAEDA,UAAU;IAEVC,kBAAkB,EAAE3F,QAAQ,KAAK;EACnC,CAAC;AACH;;ACjCkD;AAElD,6CAAe;EACb9B,SAASA,CAAClO,MAAc,EAAU;IAChC,OAAO4C,OAAO,CAAC5C,MAAM,CAAC;EACxB,CAAC;EAEDyO,WAAWA,CAAC9O,MAAc,EAAU;IAClC,OAAOA,MAAM,CAAC5L,QAAQ,CAAC,CAAC;EAC1B;AACF,CAAC;;ACV6E;AAI/D,SAAS6hB,mBAAmBA,CACzCte,GAAO,EAcP;EACA,OAAO;IACL4W,SAASA,CAACiC,QAAQ,EAAE;MAAE8C;IAAQ,CAAC,EAAE;MAC/B,IAAI5C,WAAW,CAACC,MAAM,CAACH,QAAQ,CAAC,EAAE,OAAOlV,MAAM,CAACG,IAAI,CAAC+U,QAAe,CAAC;MACrE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACrG,UAAU,CAAC,KAAK,CAAC,EAAE;QAC9D,OAAO/J,MAAM,CAACoQ,QAA+B,CAAC;MAChD;MACA,OAAOpQ,MAAM,CAACkT,OAAO,CAAC;QAAE,GAAG9C,QAAQ;QAAE,IAAI7Y,GAAG,IAAI,IAAI,IAAI;UAAEA;QAAI,CAAC;MAAE,CAAC,CAAC,CAAC;IACtE,CAAC;IAEDmX,WAAWA,CAAC5I,GAAG,EAAE;MAAEmN;IAAS,CAAC,EAAE;MAC7B,OAAOA,QAAQ,CAAClT,MAAM,CAAC+F,GAAG,EAAEjJ,QAAQ,CAACY,WAAW,CAAC,EAAElG,GAAG,CAAC;IACzD;EACF,CAAC;AACH;;ACjCyC;AAEgB;AACO;;AAEhE;AACA;AACA;AACA,0CAAe;EACb,GAAG2c,WAAS;EAEZ/F,SAASA,CAACzV,KAAyB,EAAU;IAC3C,OAAOwb,WAAS,CAAC/F,SAAS,CAACzV,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,CAAC,CAAC;EACxC,CAAC;EAED,MAAM6V,OAAOA,CACX7V,KAAyB,EACzB0V,MAAU;EACV;EACA;IACE9G,MAAM;IACNwO,WAAW;IACXC,gBAAgB;IAChB,GAAG7N;EAKoD,CAAC,EAC1D;IACA,IAAI4N,WAAW,KAAK,IAAI,IAAIpd,KAAK,KAAK,CAAC,KAAKA,KAAK,IAAI,IAAI,IAAIqd,gBAAgB,KAAK,IAAI,CAAC,EAAE;MAAA,IAAAzH,MAAA;MACvF,IAAIhH,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI3V,aAAa,CAAC,QAAQ,EAAE,UAAU,EAAE2V,MAAM,CAAC;MACzE5O,KAAK,GAAG,EAAA4V,MAAA,GAAC5V,KAAK,cAAA4V,MAAA,cAAAA,MAAA,GAAI,CAAC,KAAK,MAAMtG,SAAS,CAAC;QAAE,GAAGE,OAAO;QAAEZ,MAAM;QAAEW,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;IAChF;IACA,OAAOvP,KAAK;EACd;AACF,CAAC;;ACpCc,SAASsd,WAAWA,CACjCC,YAAmB,EACnBzB,KAGC,EAID;EACA,OAAO;IACL,GAAGA,KAAK;IAERrG,SAASA,CAACzV,KAAK,EAAE0V,MAAM,EAAE;MACvB,OAAOoG,KAAK,CAACrG,SAAS,CAACzV,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIud,YAAY,EAAE7H,MAAM,CAAC;IACvD;EACF,CAAC;AACH;;ACjBe,SAAS8H,cAAcA,CACpCrM,MAAuC,EACvC2K,KAGC,EAID;EACA,OAAO;IACL,GAAGA,KAAK;IAERrG,SAASA,CAACzV,KAAK,EAAE0V,MAAM,EAAElG,OAAO,EAAE;MAChC,OAAOsM,KAAK,CAACrG,SAAS,CAACtE,MAAM,CAACnR,KAAK,CAAC,EAAE0V,MAAM,EAAElG,OAAO,CAAC;IACxD;EACF,CAAC;AACH;;ACjBO,IAAKiO,cAAc,0BAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;;AAM1B;AACA;AACA;AACO,IAAKC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;;ACTpB;AACA;AACA;AACA;AACA;;AAEqC;AAEiB;AACc;AACzB;AACW;AACF;AACL;AACJ;AACY;AAChB;AACW;AACA;AACT;AACO;AACF;AACH;AACM;AACC;AACX;AACc;AACW;AACnB;AACU;AAChB;AACG;AACc;AACM;AACH;AACL;AACN;AAGzC,IAAKQ,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;;AAK5B;;AAOA,MAAMC,cAAc,GAAGjhB,mBAAW,CAAC,CAA8B;AAUjE,MAAMkhB,mBAAmB,GAAGlhB,mBAAW,CAACkO,GAAG,CAACiT,QAAQ,CAAmC;AAUvF,MAAMC,aAAa,GAAGT,aAAK,CAACH,QAAQ,CAACa,QAAQ,CAA6B;AAE1E,MAAMC,SAAS,GAAGlB,WAAW,CAAC,EAAE,GAAG,EAAE,EAAE9B,WAAS,CAAC;AACjD;AACA;AACA;AACA;AACA,MAAMiD,OAAO,GAAGjB,cAAc,CAAExd,KAAK,IAAK;EAAA,IAAA4V,MAAA;EACxC,MAAM8I,QAAQ,GAAG,MAAM;EACvB,CAAA9I,MAAA,GAAA5V,KAAK,cAAA4V,MAAA,cAAAA,MAAA,GAAL5V,KAAK,GAAK0e,QAAQ;EAClB,IAAI1e,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI0e,QAAQ,EAAE,OAAO1e,KAAK;EACjD,MAAM,IAAI/G,aAAa,CAAC,SAAS,EAAE,0BAA0BylB,QAAQ,SAAS,EAAE1e,KAAK,CAAC;AACxF,CAAC,EAAEwb,WAAS,CAAC;;AAEb;AACA;AACA;AACO,MAAMmD,QAAQ,GAAG,CACtB;EACE9f,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACiT,QAAQ,CAAC;EACjC7jB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCW,UAAU,EAAExb,aAAK,CAAC4a,GAAG,CAAC;EAAE;EACxBtD,SAAS,EAAEyD;AACb,CAAC,EACD;EACEtf,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACyT,OAAO,CAAC;EAChCrkB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCvS,QAAQ,EAAE3Q,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1C;EACA4Y,WAAW,EAAE/jB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,EAAE/B,QAAQ,CAAC2B,eAAe,EAAE3B,QAAQ,CAACoC,IAAI,CAAC;EACtFlJ,MAAM,EAAE8a,WAAU;EAClB0C,GAAG;EACHtK,GAAG;EACH/G,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB1C,OAAO,EAAE8W,eAAO,CAACzZ,QAAQ,CAACmB,SAAS,EAAE,IAAI;AAC3C,CAAC,EACD;EACEzG,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC2T,cAAc,CAAC;EACvCvkB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzByV,YAAY,EAAElkB,eAAO,CAACoJ,QAAQ,CAACkC,UAAU,CAAC;EAC1CwU,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC8T,WAAW,CAAC;EACpC1kB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBlR,IAAI;EACJ6mB,QAAQ,EAAE7B,WAAW,CAAC,CAAC,EAAElG,KAAI,CAAC;EAC9Bhc,OAAO;EACPyf,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACgU,YAAY,CAAC;EACrC5kB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBuU,MAAM;EACNU,OAAO;EACP7J,QAAQ,EAAEA,QAAQ,CAAC,KAAK,CAAC;EACzB4J,SAAS;EACT3D,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACgU,YAAY,CAAC;EACrC5kB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,CAAC;EAC1Be,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBuU,MAAM;EACNU,OAAO;EACP7J,QAAQ,EAAEA,QAAQ,CAAC,IAAI,CAAC;EACxB4J,SAAS;EACT3D,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACiU,cAAc,CAAC;EACvC7kB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBuU,MAAM;EACN;EACAe,WAAW,EAAE/jB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,EAAE/B,QAAQ,CAACoC,IAAI,CAAC;EAC5DsU,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACkU,YAAY,CAAC;EACrC9kB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBuU,MAAM;EACNlD,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACmO,gBAAgB,CAAC;EACzC/e,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC3S,OAAO,EAAEvQ,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACzCsD,KAAK,EAAEA,aAAK,CAAC,SAAS,CAAC;EACvB+V,IAAI,EAAE3B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EACzC+Y,SAAS;EACT9C,GAAG;EACHtK,GAAG;EACHiP,OAAO,EAAEhC,cAAc,CAAC,CAACxd,KAAK,GAAG,CAAC,KAAK;IACrC,IAAI,CAACA,KAAK,KAAK,CAAC,EAAE,OAAOA,KAAK;IAC9B,MAAM,IAAI/G,aAAa,CAAC,SAAS,EAAE,qCAAqC,EAAE+G,KAAK,CAAC;EAClF,CAAC,EAAEmY,WAAU,CAAC;EACd9a,MAAM,EAAE8a,WAAU;EAClB0D,QAAQ;EACRtD,QAAQ;EACRkH,QAAQ,EAAE7B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACkL,cAAc,CAAC;EACvC9b,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCyB,QAAQ,EAAE3kB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1CsD,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB;EACA4K,UAAU,EAAErZ,eAAO,CAACoJ,QAAQ,CAAC2B,eAAe,EAAE3B,QAAQ,CAACoC,IAAI,CAAC;EAC5D0O,UAAU;EACV4F,GAAG;EACHtK,GAAG;EACHlT,MAAM,EAAE8a,WAAU;EAClB0D,QAAQ;EACRtD,QAAQ;EACRkH,QAAQ,EAAE7B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC2O,gBAAgB,CAAC;EACzCvf,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CsD,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBmW,WAAW,EAAEpY,MAAM;EACnBqY,cAAc,EAAErY,MAAM;EACtBwV,QAAQ,EAAE5E,WAAU;EACpB0H,aAAa,EAAEvC,WAAW,CAACY,gBAAgB,CAAC4B,KAAK,EAAEhC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACjF6B,cAAc,EAAEzC,WAAW,CAAC,GAAG,EAAE9B,WAAS,CAAC;EAC3CX,GAAG;EACHtK,GAAG;EACH0E,UAAUA,EAAAA,WAAAA;AACZ,CAAC,EACD;EACEpW,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC4O,cAAc,CAAC;EACvCxf,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC;EACAtS,QAAQ,EAAE5Q,eAAO,CAACoJ,QAAQ,CAAC6B,aAAa,EAAE7B,QAAQ,CAACoC,IAAI,CAAC;EACxDiD,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxBqW,aAAa,EAAEvC,WAAW,CAACY,gBAAgB,CAAC4B,KAAK,EAAEhC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACjF6B,cAAc,EAAEzC,WAAW,CAAC,GAAG,EAAE9B,WAAS,CAAC;EAC3CX,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC6O,aAAa,CAAC;EACtCzf,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCvS,QAAQ,EAAE3Q,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1CsD,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB;EACAmC,QAAQ,EAAE5Q,eAAO,CAACoJ,QAAQ,CAAC6B,aAAa,EAAE7B,QAAQ,CAACoC,IAAI,CAAC;EACxDyZ,KAAK,EAAEzY,MAAM;EACbwV,QAAQ;EACRkD,YAAY,EAAE3C,WAAW,CAACY,gBAAgB,CAAC4B,KAAK,EAAEhC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EAChFgC,aAAa,EAAE5C,WAAW,CAAC,EAAE,EAAE9B,WAAS,CAAC;EACzC2E,eAAe,EAAE7C,WAAW,CAACY,gBAAgB,CAAC4B,KAAK,EAAEhC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACnFkC,gBAAgB,EAAE9C,WAAW,CAAC,EAAE,EAAE9B,WAAS,CAAC;EAC5CX,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC8O,gBAAgB,CAAC;EACzC1f,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCtS,QAAQ,EAAE5Q,eAAO,CAACoJ,QAAQ,CAAC6B,aAAa,CAAC;EACzCwD,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB6W,OAAO,EAAEzC,eAAO,CAACzZ,QAAQ,CAAC8B,aAAa,CAAC;EACxCqa,QAAQ,EAAE/Y,MAAM;EAChB4Y,eAAe,EAAE7C,WAAW,CAACY,gBAAgB,CAAC4B,KAAK,EAAEhC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACnFkC,gBAAgB,EAAE9C,WAAW,CAAC,EAAE,EAAE9B,WAAS,CAAC;EAC5CX,GAAG;EACHtK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACE1R,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACmV,eAAe,CAAC;EACxC/lB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCuC,SAAS,EAAEzlB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3Cua,eAAe,EAAErJ,KAAI;EACrBsJ,SAAS,EAAE3lB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3Cya,eAAe,EAAEvJ,KAAI;EACrBwJ,cAAc,EAAExJ,KAAI;EACpByJ,UAAU,EAAEzJ,KAAI;EAChB7G,GAAG;EACHsK,GAAG;EACHiG,oBAAoB,EAAE1d,aAAK,CAACrI,eAAO,CAAC,GAAGyb,eAAe,CAAC,CAAC;EACxDuK,oBAAoB,EAAE3d,aAAK,CAACrI,eAAO,CAAC,GAAGyb,eAAe,CAAC,CAAC;EACxDwK,SAAS,EAAEpD,eAAO,CAACzZ,QAAQ,CAACe,KAAK,CAAC;EAClCsE,KAAK,EAAEA,aAAK,CAAC,WAAW;AAC1B,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC6V,oBAAoB,CAAC;EAC7CzmB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCkb,oBAAoB,EAAEhK,KAAI;EAC1BiK,oBAAoB,EAAEjK,KAAI;EAC1B7G,GAAG;EACHsK,GAAG;EACHrR,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACkW,kBAAkB,CAAC;EAC3C9mB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE8W,eAAO,CAACzZ,QAAQ,CAACY,WAAW,CAAC;EACtCwc,GAAG,EAAEjD,aAAa;EAClB/N,GAAG;EACHsK,GAAG;EACHrR,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACoW,cAAc,CAAC;EACvChnB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE8W,eAAO,CAACzZ,QAAQ,CAACY,WAAW,CAAC;EACtCwc,GAAG,EAAEjD,aAAa;EAClB/N,GAAG;EACHsK,GAAG;EACHrR,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACqW,gBAAgB,CAAC;EACzCjnB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxC7I,MAAM,EAAE+Z,KAAI;EACZ7G,GAAG;EACHsK,GAAG;EACHmG,SAAS,EAAEpD,eAAO,CAACzZ,QAAQ,CAACe,KAAK,CAAC;EAClCwc,KAAK,EAAElG,WAAS;EAChBhS,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACuW,iBAAiB,CAAC;EAC1CnnB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpC+b,IAAI,EAAE7mB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC7I,MAAM,EAAE+Z,KAAI;EACZ7G,GAAG;EACHsK,GAAG;EACHmG,SAAS,EAAEpD,eAAO,CAACzZ,QAAQ,CAACe,KAAK,CAAC;EAClCwc,KAAK,EAAElG,WAAS;EAChBhS,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACyW,eAAe,CAAC;EACxCrnB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCkb,oBAAoB,EAAEhK,KAAI;EAC1BiK,oBAAoB,EAAEjK,KAAI;EAC1B7G,GAAG;EACHsK,GAAG;EACHrR,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACiO,sBAAsB,CAAC;EAC/C7e,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE8W,eAAO,CAACzZ,QAAQ,CAACY,WAAW,CAAC;EACtC2c,KAAK,EAAElG,WAAS;EAChB/W,MAAM,EAAEmZ,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EAC3Coc,SAAS,EAAEpD,eAAO,CAACzZ,QAAQ,CAACe,KAAK,CAAC;EAClC4c,aAAa,EAAElE,eAAO,CAACzZ,QAAQ,CAACiB,UAAU,CAAC;EAC3CmL,GAAG;EACHsK,GAAG;EACHrR,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACkO,iBAAiB,CAAC;EAC1C9e,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpC6b,KAAK,EAAElG,WAAS;EAChBwF,SAAS,EAAEpD,eAAO,CAACzZ,QAAQ,CAACe,KAAK;AACnC,CAAC,EACD;EACErG,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAAC2W,qBAAqB,CAAC;EAC9CvnB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiD,SAAS,EAAEnmB,eAAO,CAACoJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCsb,MAAM,EAAEpmB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE8W,eAAO,CAACzZ,QAAQ,CAACY,WAAW,CAAC;EACtCwL,GAAG;EACHsK,GAAG;EACHrR,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE3K,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACoO,UAAU,CAAC;EACnChf,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC3S,OAAO,EAAEvQ,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACzCsD,KAAK,EAAEA,aAAK,CAAC,SAAS,CAAC;EACvB+V,IAAI,EAAE3B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EACzCod,OAAO,EAAEhE,GAAG;EACZL,SAAS;EACT9C,GAAG;EACHtK,GAAG;EACHsL,QAAQ;EACRtD,QAAQ;EACRkH,QAAQ,EAAE7B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACmL,QAAQ,CAAC;EACjC/b,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCgE,IAAI,EAAElnB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACtCgc,QAAQ,EAAEtE,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EAC7CqQ,UAAU;EACV4F,GAAG;EACHgB,QAAQ;EACRtD,QAAQ;EACRnI,EAAE,EAAEgO;AACN,CAAC,EACD;EACEvf,GAAG,EAAEof,sBAAc,CAAC7S,GAAG,CAACqO,WAAW,CAAC;EACpCjf,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkE,OAAO,EAAEpnB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACzCsD,KAAK,EAAEA,aAAK,CAAC,SAAS,CAAC;EACvBqR,GAAG;EACHzK,EAAE,EAAEgO;AACN,CAAC,CACO;;;;ACrZqD;AAOhC;AAC4C;AACpC;AAOhC,SAASkE,SAASA,CACvBC,OAAgB,EAChBnX,GAA8B,EAC9BvM,GAAW,EACXrE,OAA2B,EACH;EACxB,MAAMgoB,UAAU,GAAGD,OAAO,CAACrK,MAAM,CAAEuK,CAAC,IAAKA,CAAC,CAAC5jB,GAAG,CAACoe,UAAU,KAAKpe,GAAG,CAAC;EAClE,IAAI2jB,UAAU,CAACrhB,MAAM,KAAK,CAAC,EAAE,MAAM,IAAIrC,mBAAmB,CAAC,GAAGsM,GAAG,CAACvM,GAAG,CAAC,KAAKA,GAAG,GAAG,EAAE,CAAC,CAAC;EACrF,IAAIrE,OAAO,IAAI,IAAI,EAAE;IACnB,MAAMkoB,aAAa,GAAGF,UAAU,CAACthB,IAAI,CAAEyhB,MAAM,IAAKA,MAAM,CAACnoB,OAAO,CAAC0iB,kBAAkB,CAAC;IACpF,IAAIwF,aAAa,IAAI,IAAI,EACvB,MAAM,IAAI9nB,aAAa,CAAC,gCAAgCwQ,GAAG,CAACvM,GAAG,CAAC,KAAKA,GAAG,GAAG,CAAC;IAC9ErE,OAAO,GAAGkoB,aAAa,CAACloB,OAAO,CAACyiB,UAAU;EAC5C;EACA,MAAM0F,MAAM,GAAGH,UAAU,CAACthB,IAAI,CAAEuhB,CAAC,IAAKA,CAAC,CAACjoB,OAAO,CAACyiB,UAAU,KAAKziB,OAAO,CAAC;EACvE,IAAImoB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI7jB,mBAAmB,CAAC,GAAGsM,GAAG,CAACvM,GAAG,CAAC,KAAKA,GAAG,GAAG,EAAErE,OAAO,CAAC;EAClF,OAAO4H,MAAM,CAACE,OAAO,CAACqgB,MAAM,CAAC;AAC/B;AAEO,SAASC,UAAUA,CACxBL,OAAgB,EAChBnX,GAA8B,EAC9BsK,MAIC,EACDmN,WAAqC,EACrCta,QAAW,EACS;EACpB,MAAMoa,MAAM,GAAGL,SAAS,CAACC,OAAO,EAAEnX,GAAG,EAAEsK,MAAM,CAAC7W,GAAG,EAAE6W,MAAM,CAAClb,OAAO,CAAC;EAClE,MAAMuO,MAAM,GAAG4Z,MAAM,CAAC/kB,GAAG,CAAC,CAAC,CAACmB,GAAG,EAAE+c,KAAK,CAAC,KACrCA,KAAK,CAACrG,SAAS,CAACC,MAAM,CAAC3W,GAAG,CAAC,EAAE;IAAE,GAAG2W,MAAM;IAAE,GAAGmN;EAAY,CAAC,EAAEnN,MAAM,CACpE,CAAC;EACD,OAAOrO,MAAM,CAACgb,wBAAS,CAACtZ,MAAM,CAAC,EAAER,QAAQ,CAAC;AAC5C;AAEO,SAASua,YAAYA,CAC1BP,OAAgB,EAChBnX,GAA8B,EAC9B2X,aAA0B,EAC1BC,WAA+B,EAC/BH,WAAqC,EAC5B;EACT,MAAM9Z,MAAM,GAAGqZ,wBAAS,CAAC9a,MAAM,CAACyb,aAAa,CAAC,CAAC;EAC/C,MAAMlkB,GAAG,GAAG,CAACsO,OAAO,CAACpE,MAAM,CAAC,CAAC,CAAW,CAAC;EACzC,MAAMvO,OAAO,GAAG,CAAC2S,OAAO,CAACpE,MAAM,CAAC,CAAC,CAAW,CAAC;EAC7C,MAAM4Z,MAAM,GAAGL,SAAS,CAACC,OAAO,EAAEnX,GAAG,EAAEvM,GAAG,EAAErE,OAAO,CAAC;EACpD,IAAIwoB,WAAW,IAAI,IAAI,IAAIA,WAAW,KAAKnkB,GAAG,EAAE;IAC9C,MAAM,IAAIN,WAAW,CAAC,YAAY6M,GAAG,CAAC4X,WAAW,CAAC,aAAa5X,GAAG,CAACvM,GAAG,CAAC,UAAU,CAAC;EACpF;EACA,IAAIkK,MAAM,CAAC5H,MAAM,KAAKwhB,MAAM,CAACxhB,MAAM,EAAE;IACnC,MAAM,IAAIlI,aAAa,CAAC,YAAY,EAAE0pB,MAAM,CAACxhB,MAAM,EAAE4H,MAAM,CAAC5H,MAAM,CAAC;EACrE;EACA,OAAOiB,MAAM,CAACC,WAAW,CACvBsgB,MAAM,CAAC/kB,GAAG,CAAC,CAAC,CAACtF,IAAI,EAAEwjB,KAAK,CAAC,EAAEmH,KAAK,KAAK,CACnC3qB,IAAI,EACJwjB,KAAK,CAAC9F,WAAW,CAACjN,MAAM,CAACka,KAAK,CAAC,EAAgBJ,WAAW,CAAC,CAC5D,CACH,CAAC;AACH;;AC5EA,0DAAe;EACbpN,SAASA,CAACzV,KAAc,EAAU;IAChC,OAAOwC,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACrC,CAAC;EAEDgW,WAAWA,CAAC9O,MAAc,EAAW;IACnC,OAAOA,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;EACxB;AACF,CAAC;;ACRgD;AAC6B;AAG/D,SAASgc,WAAWA,CACjC3a,QAAW,EACX1J,GAAM,EAeN;EACA,OAAO;IACL4W,SAASA,CAACtT,MAAM,EAAE;MAAEwV;IAAU,CAAC,EAAE;MAC/B,OAAOrQ,MAAM,CACXqQ,SAAS,CAAC;QACR9Y,GAAG,EAAE6e,QAAQ,CAACyF,KAAK;QACnBlL,MAAM,EAAE7V,MAAM,CAACE,OAAO,CAACH,MAAM,CAAC,CAACvE,GAAG,CAChC,CAAC,CAACmB,GAAG,EAAEiB,KAAK,CAAC,MACV;UACCnB,GAAG,EAAE6e,QAAQ,CAAC0F,UAAU;UACxBrkB,GAAG,EAAEuI,MAAM,CAACvI,GAAyB,CAAC;UACtCiB,KAAK,EAAEsH,MAAM,CAACqQ,SAAS,CAAC;YAAE,GAAI3X,KAAa;YAAEnB;UAAI,CAAC,CAAC;QACrD,CAAC,CACL;MACF,CAAC,CACH,CAAC;IACH,CAAC;IAEDmX,WAAWA,CAAC9O,MAAM,EAAE;MAAE4Q;IAAY,CAAC,EAAE;MACnC,MAAM;QAAEG;MAAO,CAAC,GAAGH,WAAW,CAACzQ,MAAM,CAACH,MAAM,EAAE/C,QAAQ,CAACmB,SAAS,CAAC,EAAEoY,QAAQ,CAACyF,KAAK,CAAC;MAClF,OAAO/gB,MAAM,CAACC,WAAW,CACvB4V;MACE;MAAA,CACCC,MAAM,CAAC,CAAC;QAAEnZ;MAAI,CAAC,KAAKwJ,QAAQ,KAAKpE,QAAQ,CAAC2B,eAAe,IAAI/G,GAAG,CAACoC,MAAM,KAAK,EAAE,CAAC,CAC/EvD,GAAG,CAAC,CAAC;QAAEmB,GAAG;QAAEiB;MAAM,CAAC,KAAK,CACvBqH,MAAM,CAACtI,GAAG,EAAEwJ,QAAQ,CAAC,EACrBuP,WAAW,CAACzQ,MAAM,CAACrH,KAAK,EAAEmE,QAAQ,CAACmB,SAAS,CAAC,EAAEzG,GAAG,CAAC,CACpD,CACL,CAAC;IACH,CAAC;IAEDwkB,aAAa,EAAE;EACjB,CAAC;AACH;;;;;;;;;ACtDiD;AAED;AAQd;AAC4C;AAAA,IAIzEC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA,EAARA,QAAQ;AAAA,IAAAC,SAAA,oBAAAlU,OAAA;AAAA,IAAAmU,WAAA,oBAAAnU,OAAA;AAAA,IAAAoU,MAAA,oBAAApU,OAAA;AAAA,IAAAqU,SAAA,oBAAArU,OAAA;AAAA,IAAAsU,IAAA,oBAAAtU,OAAA;AAAA,IAAAuU,YAAA,oBAAAvU,OAAA;AAAA,IAAAwU,aAAA,oBAAAC,OAAA;AAQb,MAAMC,MAAM,CAAyC;EAKnD,IAAIC,UAAUA,CAAA,EAAY;IACxB,OAAOC,qBAAA,CAAKT,WAAW,EAAhB,IAAe,CAAC;EACzB;EAcA;AACF;AACA;AACA;AACA;AACA;AACA;EACEprB,WAAWA,CAAC2Q,MAAoB,EAAER,QAAW,EAAE1J,GAAM,EAAEqlB,MAA0B,EAAE;IAiFnF;AACF;AACA;AACA;AACA;IAJEC,2BAAA,OAAAN,aAAA;IA5GAO,0BAAA,OAASb,SAAS;IAElBa,0BAAA,OAAAZ,WAAW,EAAG,IAAI;IAMlBY,0BAAA,OAASX,MAAM;IAEfW,0BAAA,OAASV,SAAS;IAElBU,0BAAA,OAAST,IAAI;IAEbS,0BAAA,OAASR,YAAY;IAcnBS,qBAAA,CAAKX,SAAS,EAAd,IAAI,EAAanb,QAAJ,CAAC;IACd8b,qBAAA,CAAKV,IAAI,EAAT,IAAI,EAAQ9kB,GAAJ,CAAC;IACTwlB,qBAAA,CAAKT,YAAY,EAAjB,IAAI,EAAgBM,MAAJ,CAAC;IACjBG,qBAAA,CAAKd,SAAS,EAAd,IAAI,EAAaxa,MAAM,CAAC,CAAC,CAAC,CAACzN,QAAQ,CAAC,KAAK,CAA5B,CAAC;IACd+oB,qBAAA,CAAKZ,MAAM,EAAX,IAAI,EAAUrhB,MAAM,CAACC,WAAW,CAAC0G,MAAM,CAAC,CAAC,CAAC,CAACnL,GAAG,CAAE0a,IAAI,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC,CAAChd,QAAQ,CAAC,KAAK,CAAC,EAAEgd,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAlF,CAAC;IAEX,IAAI2L,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAACQ,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,CAAC,IAAI,IAAI,EAAE;MACvC,IAAInhB,MAAM,CAAC0T,IAAI,CAACmO,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC,CAACtiB,MAAM,KAAK,CAAC,EAAE;QACzC,MAAM,IAAInD,sBAAsB,CAAC,gCAAgC,CAAC;MACpE;MACAqmB,qBAAA,CAAKb,WAAW,EAAhB,IAAI,EAAe,KAAJ,CAAC;MAChB;IACF;IACAphB,MAAM,CAACE,OAAO,CAAC2hB,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC,CAACpQ,OAAO,CAAC,CAAC,CAACtU,GAAG,EAAEuZ,IAAI,CAAC,KAAK;MACnD,IAAIgM,SAAgB,CAAA/I,IAAA,CAAhBwI,MAAM,EAAWzL,IAAI,MAAMvZ,GAAG,EAAE,MAAM,IAAIhB,2BAA2B,CAAC,CAAC;MAC3E,MAAM;QAAE4I;MAAK,CAAC,GAAG4d,UAAiB,CAAAhJ,IAAA,CAAjBwI,MAAM,EAAYzL,IAAI,CAAC;MACxC,QAAQ3R,IAAI;QACV,KAAK2c,QAAQ,CAACkB,MAAM;UAClBlM,IAAI,CACDvR,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZmR,MAAM,CAAErX,CAAC,IAAKA,CAAC,CAACM,MAAM,CAAC,CACvBkS,OAAO,CAAExS,CAAC,IAAK;YACd;YACA;YACA;YACA;YACA,IAAIojB,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC5iB,CAAC,CAACvF,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE+oB,qBAAA,CAAKb,WAAW,EAAhB,IAAI,EAAe,KAAJ,CAAC;UAC9D,CAAC,CAAC;UACJ;QACF,KAAKF,QAAQ,CAACmB,SAAS;UACrB,IAAIR,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAACnL,IAAI,CAAC,CAAC,CAAC,CAAChd,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE;YAChD,MAAM,IAAI0C,sBAAsB,CAAC,6CAA6C,CAAC;UACjF;UACA;QACF,KAAKslB,QAAQ,CAACoB,IAAI;UAChB;QACF;UACE,MAAM,IAAI9pB,aAAa,CAAC,6BAA6B+L,IAAI,EAAE,CAAC;MAChE;IACF,CAAC,CAAC;EACJ;EAEAge,OAAOA,CAACC,IAAkB,EAAW;IACnC,OAAOX,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,KAAKU,qBAAA,CAAKV,SAAS,EAAdqB,IAAa,CAAC;EAC1C;EAyBA;AACF;AACA;AACA;EACEnP,SAASA,CAAA,EAAiB;IACxB,OAAO,CACLjT,MAAM,CAACG,IAAI,CAACshB,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,EAAE,KAAK,CAAC,EAClCnhB,MAAM,CAACE,OAAO,CAAC2hB,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC,CAAC7lB,GAAG,CAAC,CAAC,CAACinB,OAAO,EAAE7kB,KAAK,CAAC,KAAK,CAACwC,MAAM,CAACG,IAAI,CAACkiB,OAAO,EAAE,KAAK,CAAC,EAAE7kB,KAAK,CAAC,CAAC,CAC5F;EACH;EAsCA;AACF;AACA;AACA;AACA;EACE0P,GAAGA,CAAC3Q,GAAuB,EAA0C;IACnE,MAAM+lB,CAAC,GAAGC,iBAAA,CAAAlB,aAAA,MAAI,EAACmB,OAAM,CAAC,CAAAzJ,IAAA,CAAZ,IAAI,EAASjU,MAAM,CAACvI,GAAG,CAAC,CAACzD,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnD,IAAIwpB,CAAC,IAAI,IAAI,EAAE,OAAOA,CAAC;IACvB,OAAOb,qBAAA,CAAKL,YAAY,EAAjB,IAAgB,CAAC,CAAArI,IAAA,CAAjB,IAAI,EAAclU,MAAM,CAACyd,CAAC,EAAE3gB,QAAQ,CAACmB,SAAS,CAAC,EAAE2e,qBAAA,CAAKN,IAAI,EAAT,IAAQ,CAAC;EACnE;EAmCAsB,QAAQA,CAAA,EAAyD;IAC/D,OAAO7iB,MAAM,CAACC,WAAW,CACvB0iB,iBAAA,CAAAlB,aAAA,MAAI,EAACqB,WAAU,CAAC,CAAA3J,IAAA,CAAhB,IAAI,EACF;IAAA,CACCrD,MAAM,CAAC,CAAC,CAACiN,CAAC,CAAC,KAAKlB,qBAAA,CAAKP,SAAS,EAAd,IAAa,CAAC,KAAKvf,QAAQ,CAAC2B,eAAe,IAAIqf,CAAC,CAAChkB,MAAM,KAAK,EAAE,CAAC,CAC/EvD,GAAG,CAAC,CAAC,CAACunB,CAAC,EAAE1jB,CAAC,CAAC,KAAK,CACf4F,MAAM,CAAC7E,MAAM,CAACG,IAAI,CAACwiB,CAAC,EAAE,KAAK,CAAC,EAAElB,qBAAA,CAAKP,SAAS,EAAd,IAAa,CAAC,CAAC,EAC7CO,qBAAA,CAAKL,YAAY,EAAjB,IAAgB,CAAC,CAAArI,IAAA,CAAjB,IAAI,EAAclU,MAAM,CAAC5F,CAAC,EAAE0C,QAAQ,CAACmB,SAAS,CAAC,EAAE2e,qBAAA,CAAKN,IAAI,EAAT,IAAQ,CAAC,EAC3D,CACL,CAAC;EACH;AACF;AAACyB,OAAA,GAxMKrB,MAAM;AAAA,SAAAO,UAiBOhM,IAAW,EAAU;EACpC,OAAO9V,MAAM,CAACG,IAAI,CAACyG,IAAI,CAACiZ,wBAAS,CAAC/J,IAAI,CAAC,CAAC,CAAC,CAAChd,QAAQ,CAAC,KAAK,CAAC;AAC3D;AAAC,SAAAipB,WAwDiBjM,IAAc,EAAqD;EACnF,QAAQA,IAAI,CAACnX,MAAM;IACjB,KAAK,EAAE;MACL,OAAO;QACLwF,IAAI,EAAE2c,QAAQ,CAACkB,MAAM;QACrB,IAAIlM,IAAI,CAAC,EAAE,CAAC,CAACnX,MAAM,KAAK,CAAC,IAAI;UAAEnB,KAAK,EAAEsY,IAAI,CAAC,EAAE;QAAE,CAAC;MAClD,CAAC;IACH,KAAK,CAAC;MAAE;QACN,MAAMla,MAAM,GAAGka,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,IAAIla,MAAM,GAAG,CAAC,EAAE,MAAM,IAAID,sBAAsB,CAACC,MAAM,CAAC;QACxD,MAAMuI,IAAI,GAAGvI,MAAM,IAAI,CAAC,GAAGklB,QAAQ,CAACmB,SAAS,GAAGnB,QAAQ,CAACoB,IAAI;QAC7D,MAAM3d,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAACrP,QAAQ,CAAC0G,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;QAC7C,OAAO;UACLuI,IAAI;UACJ,IAAIA,IAAI,KAAK2c,QAAQ,CAACoB,IAAI,IAAI;YAAE1kB,KAAK,EAAEsY,IAAI,CAAC,CAAC;UAAE,CAAC,CAAC;UACjD+M,IAAI,EAAE/M,IAAI,CAAC,CAAC,CAAC,CAAChd,QAAQ,CAAC,KAAK,CAAC,CAACyL,KAAK,CAACA,KAAK;QAC3C,CAAC;MACH;IACA;MACE,MAAM,IAAI9I,sBAAsB,CAACqa,IAAI,CAACnX,MAAM,CAAC;EACjD;AACF;AAAC,SAAA6jB,QAkBOM,IAAY,EAAsB;EACxC,IAAIC,UAAU,GAAGtB,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC;EAC/B,IAAIxkB,GAAG,GAAGumB,IAAI;EACd,OAAO,IAAI,EAAE;IACX;IACA,MAAMhN,IAAI,GAAG2L,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC8B,UAAU,CAAC;IACpC,IAAIjN,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAAC0L,UAAU,EAAE,OAAO3a,SAAS;MACtC,MAAM,IAAIzO,aAAa,CAAC,kCAAkC,CAAC;IAC7D;IACA,MAAM;MAAE+L,IAAI;MAAE3G,KAAK;MAAEqlB;IAAK,CAAC,GAAGd,UAAiB,CAAAhJ,IAAA,CAAjBwI,OAAM,EAAYzL,IAAI,CAAC;IACrD,QAAQ3R,IAAI;MACV,KAAK2c,QAAQ,CAACkB,MAAM;QAClB,IAAIzlB,GAAG,CAACoC,MAAM,KAAK,CAAC,EAAE,OAAOnB,KAAK;QAClCulB,UAAU,GAAGjN,IAAI,CAAC,CAAC,KAAKvZ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAACzD,QAAQ,CAAC,KAAK,CAAC;QACjDyD,GAAG,GAAGA,GAAG,CAAC2O,SAAS,CAAC,CAAC,CAAC;QACtB;MACF,KAAK4V,QAAQ,CAACmB,SAAS;QACrB,IAAI1lB,GAAG,CAAC2O,SAAS,CAAC,CAAC,EAAE2X,IAAI,EAAElkB,MAAM,CAAC,KAAKkkB,IAAI,EAAE,OAAOhc,SAAS;QAC7Dkc,UAAU,GAAGjN,IAAI,CAAC,CAAC,CAAC,CAAChd,QAAQ,CAAC,KAAK,CAAC;QACpCyD,GAAG,GAAGA,GAAG,CAAC2O,SAAS,CAAC2X,IAAI,CAAClkB,MAAM,CAAC;QAChC;MACF,KAAKmiB,QAAQ,CAACoB,IAAI;QAChB,IAAIW,IAAI,KAAKtmB,GAAG,EAAE,OAAOsK,SAAS;QAClC,OAAOrJ,KAAK;MACd;QACE,MAAM,IAAIpF,aAAa,CAAC,6BAA6B+L,IAAI,EAAE,CAAC;IAChE;EACF;AACF;AAAC,SAAAue,YAAA,EAasC;EACrC,MAAM5iB,OAAgC,GAAG,EAAE;EAC3C,MAAMkjB,GAAG,GAAGA,CAACD,UAAkB,EAAExmB,GAAW,KAAW;IACrD,MAAMuZ,IAAI,GAAG2L,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC8B,UAAU,CAAC;IACpC,IAAIjN,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAAC0L,UAAU,EAAE;MACtB,MAAM,IAAIppB,aAAa,CAAC,kCAAkC,CAAC;IAC7D;IACA,MAAM;MAAE+L,IAAI;MAAE3G,KAAK;MAAEqlB;IAAK,CAAC,GAAGd,UAAiB,CAAAhJ,IAAA,CAAjBwI,OAAM,EAAYzL,IAAI,CAAC;IACrD,QAAQ3R,IAAI;MACV,KAAK2c,QAAQ,CAACkB,MAAM;QAClBlM,IAAI,CACDvR,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZnJ,GAAG,CAAC,CAAC+F,CAAC,EAAE+P,GAAG,KAAyB,CAAC/P,CAAC,EAAE+P,GAAG,CAAC,CAAC,CAC7CwE,MAAM,CAAC,CAAC,CAACvU,CAAC,CAAC,KAAKA,CAAC,CAACxC,MAAM,CAAC,CACzBkS,OAAO,CAAC,CAAC,CAAC1P,CAAC,EAAE+P,GAAG,CAAC,KAAK8R,GAAG,CAAC7hB,CAAC,CAACrI,QAAQ,CAAC,KAAK,CAAC,EAAEyD,GAAG,GAAG2U,GAAG,CAACpY,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI0E,KAAK,IAAI,IAAI,EAAEsC,OAAO,CAAC2R,IAAI,CAAC,CAAClV,GAAG,EAAEiB,KAAK,CAAC,CAAC;QAC7C;MACF,KAAKsjB,QAAQ,CAACmB,SAAS;QACrBe,GAAG,CAAClN,IAAI,CAAC,CAAC,CAAC,CAAChd,QAAQ,CAAC,KAAK,CAAC,EAAEyD,GAAG,GAAGsmB,IAAI,CAAC;QACxC;MACF,KAAK/B,QAAQ,CAACoB,IAAI;QAChB,IAAI1kB,KAAK,IAAI,IAAI,EAAE,MAAM,IAAInF,iBAAiB,CAAC,CAAC;QAChDyH,OAAO,CAAC2R,IAAI,CAAC,CAAClV,GAAG,GAAGsmB,IAAI,EAAErlB,KAAK,CAAC,CAAC;QACjC;MACF;QACE,MAAM,IAAIpF,aAAa,CAAC,6BAA6B+L,IAAI,EAAE,CAAC;IAChE;EACF,CAAC;EACD6e,GAAG,CAACvB,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,EAAE,EAAE,CAAC;EACvB,OAAOjhB,OAAO;AAChB;AAea,SAASmjB,cAAcA,CACpCld,QAAW,EACX1J,GAAM,EAIN;EACA,OAAO;IACL4W,SAASA,CAACzV,KAAK,EAAE;MACf,OAAOA,KAAK,CAACyV,SAAS,CAAC,CAAC;IAC1B,CAAC;IAEDO,WAAWA,CAAChW,KAAK,EAAE;MAAE8X;IAAY,CAAC,EAAE;MAClC,OAAO,IAAIiM,MAAM,CAAC/jB,KAAK,EAAEuI,QAAQ,EAAE1J,GAAG,EAAEiZ,WAAW,CAAC;IACtD;EACF,CAAC;AACH;;AChPqE;AAWtD,SAAS4N,eAAeA,CACrC7mB,GAAM,EAeN;EACA,OAAO;IACL4W,SAASA,CAAC3O,OAAO,EAAE;MAAE6Q;IAAU,CAAC,EAAE;MAChC,OAAOrQ,MAAM,CAACqQ,SAAS,CAAC;QAAE9Y,GAAG;QAAEiI;MAAQ,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEDkP,WAAWA,CAAC9O,MAAM,EAAE;MAAE4Q;IAAY,CAAC,EAAE;MACnC,OAAOA,WAAW,CAAczQ,MAAM,CAACH,MAAM,EAAE/C,QAAQ,CAACmB,SAAS,CAAC,EAAEzG,GAAG,CAAC,CAACiI,OAAO;IAClF,CAAC;IAEDuc,aAAa,EAAE;EACjB,CAAC;AACH;;ACvCuD;AACc;AACzB;AACI;AACO;AACF;AACL;AACJ;AACY;AACL;AACA;AACX;AACM;AACI;AACV;AACc;AACW;AACnB;AACH;AACK;AACc;AACJ;AAU1D,MAAMyC,oBAAoB,GAAG1iB,aAAK,CAACya,aAAK,CAACH,QAAQ,CAAC0F,UAAU,CAAC,CAAoC;AAYjG,MAAM2C,YAAY,GAAGnoB,WAAG,CAACuG,QAAQ,CAAC2B,eAAe,EAAE4X,QAAQ,CAACsI,QAAQ,CAA4B;AAYhG,MAAMC,WAAW,GAAGroB,WAAG,CAACuG,QAAQ,CAAC+B,cAAc,EAAEwX,QAAQ,CAACwI,OAAO,CAA2B;AAY5F,MAAMC,QAAQ,GAAGvoB,WAAG,CAACuG,QAAQ,CAACmB,SAAS,EAAEoY,QAAQ,CAAC0I,YAAY,CAAwB;AAQtF,MAAMC,WAAW,GAAGzoB,WAAG,CAACuG,QAAQ,CAAC0B,OAAO,EAAE6X,QAAQ,CAAC7X,OAAO,CAA2B;AAQrF,MAAMygB,QAAQ,GAAG1oB,WAAG,CAACuG,QAAQ,CAACoC,IAAI,EAAEmX,QAAQ,CAACnX,IAAI,CAAwB;AAUzE,MAAMggB,UAAU,GAAG3oB,WAAG,CAACuG,QAAQ,CAAC6B,aAAa,EAAE0X,QAAQ,CAAC8I,MAAM,CAA0B;;AAExF;AACA;AACA;AACO,MAAMjE,OAAO,GAAG,CACrB;EACE1jB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACwI,OAAO,CAAC;EACrC1rB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,CAAC;EAC1BzU,KAAK,EAAEgS,WAAS;EAChBlK,OAAO,EAAE8F,KAAIA;AACf,CAAC,EACD;EACEvY,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACwI,OAAO,CAAC;EACrC1rB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCwI,KAAK,EAAErP,KAAI;EACX5N,KAAK,EAAEgS,WAAS;EAChBlK,OAAO,EAAE8F,KAAI;EACbsP,UAAU,EAAE3rB,eAAO,CAACoJ,QAAQ,CAAC2B,eAAe,EAAE3B,QAAQ,CAACoC,IAAI,CAAC;EAC5DogB,SAAS,EAAE/I,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB;AAC/C,CAAC,EACD;EACE/F,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACnX,IAAI,CAAC;EAClC/L,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuY,OAAO,EAAEjD,WAAS;EAClBoL,MAAM,EAAE5I,GAAG;EACX;AACJ;AACA;EACIQ,SAAS,EAAEhD,WAAS;EACpB5G,QAAQA,EAAAA,QAAAA;AACV,CAAC,EACD;EACE/V,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACsI,QAAQ,CAAC;EACtCxrB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC1U,KAAK,EAAExO,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACvCyX,SAAS;EACT4B,IAAI,EAAE3B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EACzCiiB,GAAG,EAAEjJ,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EACxCkiB,MAAM,EAAEnB,mBAAO;EACfoB,QAAQ,EAAE3jB,aAAK,CAACrI,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC,CAAC;EACjDsZ,OAAO,EAAErH,WAAUA;AACrB,CAAC,EACD;EACEtZ,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC0I,YAAY,CAAC;EAC1C5rB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCyB,QAAQ,EAAE3kB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1C8gB,WAAW,EAAExL,WAAS;EACtB1hB,MAAM,EAAE0hB,WAAS;EACjBpH,UAAU,EAAErZ,eAAO,CAACoJ,QAAQ,CAAC2B,eAAe,CAAC;EAC7C;EACAyS,QAAQ,EAAEnB,KAAI;EACd6P,OAAO,EAAEzL,WAAS;EAClB0L,WAAW,EAAEtJ,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EAChDuiB,UAAU,EAAErJ,mBAAW,CAACL,cAAc,CAAC;EACvC;EACA;EACAoJ,GAAG,EAAEzjB,aAAK,CAAC4a,GAAG;AAChB,CAAC,EACD;EACEnf,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC8I,MAAM,CAAC;EACpChsB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEjkB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CyZ,WAAW,EAAEpY,MAAM;EACnBqY,cAAc,EAAErY,MAAM;EACtBwV,QAAQ,EAAE5E,WAAU;EACpB4H,cAAc,EAAEvE,WAAS;EACzBvG,UAAUA,EAAAA,WAAAA;AACZ,CAAC,EACD;EACEpW,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC7X,OAAO,CAAC;EACrCrL,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCuC,SAAS,EAAEzlB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3Cwa,SAAS,EAAE3lB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CkhB,aAAa,EAAEhQ,KAAI;EACnBqJ,eAAe,EAAErJ,KAAI;EACrBuJ,eAAe,EAAEvJ,KAAI;EACrBwJ,cAAc,EAAExJ,KAAI;EACpB0J,oBAAoB,EAAE1d,aAAK,CAACrI,eAAO,CAAC,GAAGyb,eAAe,CAAC,CAAC;EACxDuK,oBAAoB,EAAE3d,aAAK,CAACrI,eAAO,CAAC,GAAGyb,eAAe,CAAC,CAAC;EACxDwK,SAAS,EAAEpD,eAAO,CAACzZ,QAAQ,CAACe,KAAK,CAAC;EAClCwc,KAAK,EAAElG,WAAS;EAChB6L,SAAS,EAAEjQ,KAAI;EACfyJ,UAAU,EAAEzJ,KAAI;EAChBkQ,WAAW,EAAElQ,KAAI;EACjBmQ,aAAa,EAAE3J,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EAClD4iB,aAAa,EAAE5J,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB;AACnD,CAAC,EACD;EACE/F,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC+J,6BAA6B,CAAC;EAC3DjtB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCtb,IAAI,EAAE5H,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACtCwhB,EAAE,EAAE3sB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACpC7I,MAAM,EAAE+Z,KAAIA;AACd,CAAC,EACD;EACEvY,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACiK,4BAA4B,CAAC;EAC1DntB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCtb,IAAI,EAAE5H,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC7I,MAAM,EAAE+Z,KAAIA;AACd,CAAC,EACD;EACEvY,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACkK,6BAA6B,CAAC;EAC3DptB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCtb,IAAI,EAAE5H,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC7I,MAAM,EAAE+Z,KAAIA;AACd,CAAC,EACD;EACEvY,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACmK,mCAAmC,CAAC;EACjErtB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC1U,KAAK,EAAExO,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACvCyX,SAAS;EACT4B,IAAI,EAAE3B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EACzC4a,OAAO,EAAEpI,KAAI;EACbqI,QAAQ,EAAE7B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACoK,iCAAiC,CAAC;EAC/DttB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC8J,MAAM,EAAEhtB,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EACxC8hB,QAAQ,EAAEjtB,eAAO,CAACoJ,QAAQ,CAAC2B,eAAe,CAAC;EAC3CmP,UAAU;EACV5X,MAAM,EAAE+Z,KAAI;EACZqI,QAAQ,EAAE7B,eAAO,CAACzZ,QAAQ,CAACS,iBAAiB,CAAC;EAC7CqjB,SAAS,EAAEjK,GAAG;EACdzF,QAAQ;EACRsD,QAAQA,EAAAA,SAAAA;AACV,CAAC,EACD;EACEhd,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACa,QAAQ,CAAC;EACtC/jB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC;EACAjL,QAAQ,EAAE5P,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC+B,cAAc,EAAEwX,QAAQ,CAACwI,OAAO,CAAC,CAAC;EAClEgC,KAAK,EAAE9kB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAACmB,SAAS,EAAEoY,QAAQ,CAAC0I,YAAY,CAAC,CAAC;EAC/D+B,QAAQ,EAAE/kB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC0B,OAAO,EAAE6X,QAAQ,CAAC7X,OAAO,CAAC,CAAC;EAC3DuiB,SAAS,EAAEhlB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC2B,eAAe,EAAE4X,QAAQ,CAACsI,QAAQ,CAAC,CAAC;EACrEqC,EAAE,EAAEjlB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAACoC,IAAI,EAAEmX,QAAQ,CAACnX,IAAI,CAAC,CAAC;EAC/C+hB,OAAO,EAAEllB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC6B,aAAa,EAAE0X,QAAQ,CAAC8I,MAAM,CAAC;AAChE,CAAC,EACD;EACE3nB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACtY,UAAU,CAAC;EACxC5K,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCmK,SAAS,EAAEvC,eAAO,CAACnI,QAAQ,CAAC6K,cAAc,CAA4B;EACtEL,KAAK,EAAErC,eAAO,CAACnI,QAAQ,CAAC8K,UAAU,CAAwB;EAC1DL,QAAQ,EAAEtC,eAAO,CAACnI,QAAQ,CAAC+K,aAAa,CAA2B;EACnEJ,EAAE,EAAExC,eAAO,CAACnI,QAAQ,CAACgL,gBAAgB,CAAwB;EAC7DJ,OAAO,EAAEzC,eAAO,CAACnI,QAAQ,CAACiL,YAAY,CAA0B;EAChE3V,QAAQ,EAAE6S,eAAO,CAACnI,QAAQ,CAACkL,aAAa;AAC1C,CAAC,EACD;EACE/pB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACyF,KAAK,CAAC;EACnC3oB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChChG,MAAM,EAAE6N;AACV,CAAC,EACD;EACEjnB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC0F,UAAU,CAAC;EACxC5oB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChClf,GAAG,EAAEif,GAAG;EACRhe,KAAK,EAAEge,GAAGA;AACZ,CAAC,EACD;EACEnf,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC6K,cAAc,CAAC;EAC5C/tB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCnX,OAAO,EAAEif;AACX,CAAC,EACD;EACElnB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC8K,UAAU,CAAC;EACxChuB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCnX,OAAO,EAAEqf;AACX,CAAC,EACD;EACEtnB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAAC+K,aAAa,CAAC;EAC3CjuB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCnX,OAAO,EAAEuf;AACX,CAAC,EACD;EACExnB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACgL,gBAAgB,CAAC;EAC9CluB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCnX,OAAO,EAAEwf;AACX,CAAC,EACD;EACEznB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACiL,YAAY,CAAC;EAC1CnuB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCnX,OAAO,EAAEyf;AACX,CAAC,EACD;EACE1nB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACkL,aAAa,CAAC;EAC3CpuB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCnX,OAAO,EAAEmf;AACX,CAAC,EACD;EACEpnB,GAAG,EAAEof,sBAAc,CAACP,QAAQ,CAACmL,gBAAgB,CAAC;EAC9CruB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCpD,GAAG,EAAE1C,WAAU;EACfI,QAAQ;EACRrZ,MAAM,EAAE0e,eAAO,CAACzZ,QAAQ,CAAC4B,MAAM;AACjC,CAAC,CACO;;ACpSoD;AACN;AAClB;AACI;AAG1C,MAAM+iB,WAAW,GAAG,CAClB,CAACpL,QAAQ,CAAC8K,UAAU,EAAErkB,QAAQ,CAACkB,aAAa,CAAC,EAC7C,CAACqY,QAAQ,CAACtY,UAAU,EAAEjB,QAAQ,CAACiB,UAAU,CAAC,EAC1C,CAACsY,QAAQ,CAACa,QAAQ,EAAEpa,QAAQ,CAACgB,GAAG,CAAC,CACzB;;AAKV;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASwS,SAASA,CAACjC,MAAiB,EAAe;EAAA,IAAAqT,kBAAA;EACxD,MAAMxgB,QAAQ,IAAAwgB,kBAAA,GAAGD,WAAW,CAAC5nB,IAAI,CAAC,CAAC,CAACrC,GAAG,CAAC,KAAKA,GAAG,KAAK6W,MAAM,CAAC7W,GAAG,CAAC,GAAG,CAAC,CAAC,cAAAkqB,kBAAA,cAAAA,kBAAA,GAAI5kB,QAAQ,CAACmB,SAAS;EAC3F,OAAOsd,UAAU,CAACL,OAAO,EAAE7E,QAAQ,EAAEhI,MAAM,EAAE;IAAEiC;EAAU,CAAC,EAAEpP,QAAQ,CAAC;AACvE;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKO,SAASuP,WAAWA,CAAC8F,OAAoB,EAAEoF,WAAsB,EAAe;EAAA,IAAAgG,YAAA;EACrF,CAAAA,YAAA,GAAAhG,WAAW,cAAAgG,YAAA,cAAAA,YAAA,GAAXhG,WAAW,GAAK8F,WAAW,CAAC5nB,IAAI,CAAC,CAAC,GAAGyV,GAAG,CAAC,KAAKiH,OAAO,CAACvM,UAAU,CAACsF,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3E,OAAOmM,YAAY,CAACP,OAAO,EAAE7E,QAAQ,EAAEE,OAAO,EAAEoF,WAAW,EAAE;IAAElL;EAAY,CAAC,CAAC;AAC/E;;AChD2E;AAC9B;AAEN;AAEF;AACU;AACsC;AAC/B;AACI;;AAE1D;AACA;AACA;;AAEO,SAASwK,iBAASA,CAACzjB,GAAQ,EAAErE,OAAgB,EAA0B;EAC5E,OAAOyuB,SAAe,CAACtK,QAAQ,EAAEvT,GAAG,EAAEvM,GAAG,EAAErE,OAAO,CAAC;AACrD;AAQA;AACA;AACA;AACA;AACA;AACO,SAASggB,OAAOA,CAAC9E,MAAgB,EAAuB;EAC7D,OAAOkN,UAAU,CACfjE,QAAQ,EACRvT,GAAG,EACHsK,MAAM,EACN;IACE;IACA6E,QAAQ;IACRC,OAAO;IACPI,SAAS,EAAGsO,cAAmB,IAAK1O,OAAO,CAAC;MAAE,GAAG9E,MAAM;MAAE,GAAGwT;IAAe,CAAC,CAAC;IAC7EvR,SAASA,EAAAA,SAAAA;EACX,CAAC,EACDxT,QAAQ,CAACY,WACX,CAAC;AACH;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeokB,YAAYA,CAACzT,MAAqB,EAAgC;EACtF,MAAM3T,OAAO,CAACqnB,GAAG,CACf9G,iBAAS,CAAC5M,MAAM,CAAC7W,GAAG,EAAE6W,MAAM,CAAClb,OAAO,CAAC,CAACoD,GAAG,CAAC,OAAO,CAACmB,GAAG,EAAE+c,KAAK,CAAC,KAAK;IAChE,IAAIA,KAAK,CAACjG,OAAO,IAAI,IAAI,EAAE;IAC3B;IACAH,MAAM,CAAC3W,GAAG,CAAC,GAAG,MAAM+c,KAAK,CAACjG,OAAO,CAACH,MAAM,CAAC3W,GAAG,CAAC,EAAE2W,MAAM,EAAEA,MAAM,CAAC;EAChE,CAAC,CACH,CAAC;;EAED;EACA,OAAO8E,OAAO,CAAC9E,MAAM,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6E,QAAQA,CACtBG,SAAsC,EACtCxB,MAAe,EACe;EAC9B,OAAO4J,YAAY,CAACnE,QAAQ,EAAEvT,GAAG,EAAEsP,SAAS,EAAExB,MAAM,EAAE;IAAEqB,QAAQ;IAAEzC,WAAWA,EAAAA,WAAAA;EAAC,CAAC,CAAC;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuR,WAAWA,CAACC,KAAuC,EAAkB;EACnF,MAAM5iB,IAAI,GAAG,OAAO4iB,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACjY,UAAU,CAAC,KAAK,CAAC,GAAG/J,MAAM,CAACgiB,KAAK,CAAC,GAAGA,KAAK;EACzF,OAAOjiB,MAAM,CAAC+B,IAAI,CAAC1C,IAAI,CAAC,EAAEvC,QAAQ,CAAC4B,MAAM,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASwjB,2BAA2BA,CACzCC,UAA+B,EACN;EACzB,IAAI9T,MAAM,GAAG6E,QAAQ,CAACiP,UAAU,CAAC;EACjC,IAAIpe,GAAG,CAACiT,QAAQ,KAAK3I,MAAM,CAAC7W,GAAG,EAAE6W,MAAM,GAAGA,MAAM,CAACgF,SAAS;EAC1D,IAAItP,GAAG,CAACmO,gBAAgB,KAAK7D,MAAM,CAAC7W,GAAG,IAAIuM,GAAG,CAACoO,UAAU,KAAK9D,MAAM,CAAC7W,GAAG,EAAE;IACxE,MAAM,IAAI5F,aAAa,CAAC,YAAY,EAAE,gCAAgC,EAAEyc,MAAM,CAAC7W,GAAG,CAAC;EACrF;EACA,OAAOwM,eAAe,CAACqK,MAAM,CAACpK,OAAO,EAAEoK,MAAM,CAAClM,KAAK,CAAC;AACtD;;;;AC/GA,SAASigB,MAAMA,CAACC,CAAS,EAAEC,CAAS,EAAU;EAC5C,MAAMC,aAAa,GAAInoB,CAAS,IAC9BA,CAAC,CACEsG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAChBA,KAAK,CAAC,GAAG,CAAC,CACVnK,GAAG,CAAEuL,CAAC,IAAK,CAACA,CAAC,CAAC;EAEnB,MAAM0gB,WAAW,GAAGD,aAAa,CAACF,CAAC,CAAC;EACpC,MAAMI,WAAW,GAAGF,aAAa,CAACD,CAAC,CAAC;EAEpC,MAAMza,IAAI,GAAGpO,IAAI,CAACqP,GAAG,CAAC,GAAG0Z,WAAW,EAAE,GAAGC,WAAW,CAAC,GAAG,CAAC;EACzD,MAAMC,kBAAkB,GAAIC,UAAoB,IAC9CA,UAAU,CAACC,OAAO,CAAC,CAAC,CAACtpB,MAAM,CAAC,CAACupB,GAAG,EAAErpB,CAAC,EAAE6S,GAAG,KAAKwW,GAAG,GAAGrpB,CAAC,GAAGqO,IAAI,IAAIwE,GAAG,EAAE,CAAC,CAAC;EAExE,OAAOqW,kBAAkB,CAACF,WAAW,CAAC,GAAGE,kBAAkB,CAACD,WAAW,CAAC;AAC1E;AAEe,SAASK,eAAeA,CACrC3vB,OAAe,EACfC,SAAiB,EACjBC,SAAkB,EACT;EACT,OAAO+uB,MAAM,CAACjvB,OAAO,EAAEC,SAAS,CAAC,IAAI,CAAC,KAAKC,SAAS,IAAI,IAAI,IAAI+uB,MAAM,CAACjvB,OAAO,EAAEE,SAAS,CAAC,GAAG,CAAC,CAAC;AACjG;;ACvBwF;AAM5D;AACO;AACiB;AACoC;AAExF,MAAM4vB,YAAY,GAAG,eAAe;AAE7B,MAAMF,gBAAgB,GAAGA,CAC9B,GAAGxmB,IAA6C,KACJ;EAC5C,MAAM2mB,UAAU,GAAGF,iCAAoB,CAAC,GAAGzmB,IAAI,CAAC;EAChD,MAAM;IAAE6R,SAAS;IAAEO;EAAY,CAAC,GAAGuU,UAAU;EAC7C,OAAOnoB,MAAM,CAACuR,MAAM,CAAC4W,UAAU,EAAE;IAC/B9U,SAASA,CACP,GAAG,CAAC+U,MAAM,EAAEroB,MAAM,EAAEsoB,UAAU,EAAEjb,OAAO,CAA+B,EACxC;MAC9B;MACA,IAAIgb,MAAM,CAAC7jB,IAAI,CAACrO,IAAI,KAAK,QAAQ,IAAI6J,MAAM,IAAI,IAAI,EAAE;QACnD,OAAOsT,SAAS,CAAC8F,IAAI,CAAC,IAAI,EAAEiP,MAAM,EAAEroB,MAAM,EAAEsoB,UAAU,EAAEjb,OAAO,CAAC;MAClE;MACA,IAAI,OAAOrN,MAAM,KAAK,QAAQ,EAAE;QAAA,IAAAuoB,WAAA;QAC9B,CAAAA,WAAA,GAAAD,UAAU,cAAAC,WAAA,cAAAA,WAAA,GAAVD,UAAU,GAAKD,MAAM,CAACG,cAAc;QACpC,MAAM,IAAIxyB,KAAK,CAAC,GAAGsyB,UAAU,eAAetoB,MAAM,0BAA0B,CAAC;MAC/E;MACA,OAAOA,MAAM,CAAC7G,QAAQ,CAAC,CAAC;IAC1B,CAAC;IAED0a,WAAWA,CACT,GAAG,CAACwU,MAAM,EAAEI,YAAY,EAAEH,UAAU,EAAEjb,OAAO,CAAiC,EAC9C;MAChC;MACA,IAAIgb,MAAM,CAAC7jB,IAAI,CAACrO,IAAI,KAAK,QAAQ,IAAIsyB,YAAY,IAAI,IAAI,EAAE;QACzD,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAIA,YAAY,CAACvZ,UAAU,CAACiZ,YAAY,CAAC,EAAE;UAC7E1R,OAAO,CAACC,IAAI,CAAC,sCAAsC+R,YAAY,sBAAsB,CAAC;UACtFA,YAAY,GAAG,CAACA,YAAY,CAACvP,OAAO,CAACiP,YAAY,EAAE,EAAE,CAAC;QACxD;QACA,MAAM3c,MAAM,GAAGqI,WAAW,CAACuF,IAAI,CAAC,IAAI,EAAEiP,MAAM,EAAEI,YAAY,EAAEH,UAAU,EAAEjb,OAAO,CAAC;QAChF;QACA;QACA,IAAI7B,MAAM,YAAYiC,IAAI,EAAE,OAAO,IAAIA,IAAI,CAAC,CAACjC,MAAM,GAAG,IAAI,CAAC;QAC3D,OAAOA,MAAM;MACf;MACA,IAAI,OAAOid,YAAY,KAAK,QAAQ,IAAIA,YAAY,GAAGhzB,MAAM,CAACiR,gBAAgB,EAAE;QAC9E,MAAM,IAAIjO,aAAa,CAAC,UAAUgwB,YAAY,4CAA4C,CAAC;MAC7F;MACA,OAAOhiB,MAAM,CAACgiB,YAAY,CAACtvB,QAAQ,CAAC,CAAC,CAAC+f,OAAO,CAACiP,YAAY,EAAE,EAAE,CAAC,CAAC;IAClE;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMO,UAAU,GAAGjzB,MAAM,CAACiR,gBAAgB,CAACvN,QAAQ,CAAC,CAAC,CAAC6F,MAAM;AAC5D,MAAM2pB,gBAAgB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAAChN,GAAG,kBAAkB6M,UAAU,cAAc,EAAE,GAAG,CAAC;AAC9F,MAAMI,iBAAiB,GAAG,IAAIF,MAAM,CAACC,MAAM,CAAChN,GAAG,gBAAgB6M,UAAU,OAAO,EAAE,GAAG,CAAC;AAC/E,MAAMK,iBAAiC,GAAG;EAC/C5yB,IAAI,EAAE,eAAe;EACrB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;IAC/B,MAAM/K,QAAQ,GAAG,MAAM+K,IAAI,CAACD,OAAO,CAAC;IACpC,IAAI9K,QAAQ,CAACgL,UAAU,IAAI,IAAI,EAAE,OAAOhL,QAAQ;IAChD;IACAA,QAAQ,CAACgL,UAAU,GAAGhL,QAAQ,CAACgL,UAAU,CAACC,UAAU,CAClD,IAAIR,MAAM,CAACD,gBAAgB,EAAE,GAAG,CAAC,EAChCU,OAAO,IAAK;MACX,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACX,gBAAgB,CAAC;MAC7C,IAAIW,KAAK,IAAI,IAAI,EAAE,MAAM,IAAI5wB,iBAAiB,CAAC,CAAC;MAChD,MAAM,GAAGvC,IAAI,EAAE0H,KAAK,EAAE0rB,GAAG,CAAC,GAAGD,KAAK;MAClC,OAAO,CACLnzB,IAAI,EACJ,CAAC0H,KAAK,GAAGpI,MAAM,CAACiR,gBAAgB,GAAG,IAAIyhB,YAAY,GAAGtqB,KAAK,GAAG,GAAGA,KAAK,EACtE0rB,GAAG,CACJ,CAAC7tB,IAAI,CAAC,EAAE,CAAC;IACZ,CACF,CAAC;IACD;IACAyiB,QAAQ,CAACgL,UAAU,GAAGhL,QAAQ,CAACgL,UAAU,CAACC,UAAU,CAClD,IAAIR,MAAM,CAACE,iBAAiB,EAAE,GAAG,CAAC,EACjCO,OAAO,IAAK;MACX,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACR,iBAAiB,CAAC;MAC9C,IAAIQ,KAAK,IAAI,IAAI,EAAE,MAAM,IAAI5wB,iBAAiB,CAAC,CAAC;MAChD,MAAM,GAAGK,MAAM,EAAE8E,KAAK,CAAC,GAAGyrB,KAAK;MAC/B,OAAO,GAAGvwB,MAAM,IAAIovB,YAAY,GAAGtqB,KAAK,GAAG;IAC7C,CACF,CAAC;IACD,OAAOsgB,QAAQ;EACjB;AACF,CAAC;AAEM,MAAMqL,sBAAsB,GAAGA,CAAA,KAA8B;EAClE,MAAMC,aAAa,GAAG,IAAItZ,GAAG,CAA2B,CAAC;EAEzD,OAAO;IACLuZ,MAAM,EAAE;MACNvzB,IAAI,EAAE,gBAAgB;MACtB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;QAAA,IAAAS,kBAAA;QAC/B,MAAM/sB,GAAG,GAAGqsB,OAAO,CAACW,OAAO,CAACrc,GAAG,CAAC,SAAS,CAAC;QAC1C0b,OAAO,CAACW,OAAO,CAACtZ,MAAM,CAAC,SAAS,CAAC;QACjC,MAAMuZ,WAAW,GAAG,MAAAA,CAAA,KAAuCX,IAAI,CAACD,OAAO,CAAC;QACxE,IAAIrsB,GAAG,IAAI,IAAI,EAAE,OAAOitB,WAAW,CAAC,CAAC;QACrC,MAAMjZ,GAAG,GAAG,EAAA+Y,kBAAA,GAACF,aAAa,CAAClc,GAAG,CAAC3Q,GAAG,CAAC,cAAA+sB,kBAAA,cAAAA,kBAAA,GAAI/pB,OAAO,CAACC,OAAO,CAAC,CAAC,EAAEiqB,IAAI,CAACD,WAAW,CAAC;QAC3EJ,aAAa,CAAC7b,GAAG,CACfhR,GAAG,EACHgU,GAAG,CAACxB,KAAK,CAAC,MAAM,CAAC,CAAC,CACpB,CAAC;QACD,OAAOwB,GAAG;MACZ;IACF,CAAC;IACDmZ,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAEM,MAAMC,2BAA2B,GAAGA,CAAA,KAA8B;EACvE,MAAMC,kBAAkB,GAAG,IAAI9Z,GAAG,CAAoC,CAAC;EAEvE,OAAO;IACLuZ,MAAM,EAAE;MACNvzB,IAAI,EAAE,sBAAsB;MAC5B,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;QAAA,IAAAgB,qBAAA;QAC/B,IAAIjB,OAAO,CAACkB,MAAM,KAAK,KAAK,EAAE,OAAOjB,IAAI,CAACD,OAAO,CAAC;QAClD,MAAMrsB,GAAG,GAAGwtB,IAAI,CAACC,SAAS,CAAC,CAACpB,OAAO,CAACqB,GAAG,EAAErB,OAAO,CAACsB,IAAI,CAAC,CAAC;QACvD,MAAMpM,QAAQ,IAAA+L,qBAAA,GAAGD,kBAAkB,CAAC1c,GAAG,CAAC3Q,GAAG,CAAC,cAAAstB,qBAAA,cAAAA,qBAAA,GAAIhB,IAAI,CAACD,OAAO,CAAC;QAC7DgB,kBAAkB,CAACrc,GAAG,CAAChR,GAAG,EAAEuhB,QAAQ,CAAC;QACrC,IAAI;UACF,OAAO,MAAMA,QAAQ;QACvB,CAAC,SAAS;UACR8L,kBAAkB,CAAC3Z,MAAM,CAAC1T,GAAG,CAAC;QAChC;MACF;IACF,CAAC;IACDmtB,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAEM,MAAMS,oCAAoC,GAAGA,CAAA,KAA8B;EAChF,MAAMC,WAAW,GAAG,IAAIta,GAAG,CAAoC,CAAC;EAEhE,OAAO;IACLuZ,MAAM,EAAE;MACNvzB,IAAI,EAAE,gCAAgC;MACtC,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;QAAA,IAAAwB,gBAAA;QAC/B,IAAIzB,OAAO,CAACkB,MAAM,KAAK,KAAK,EAAE,OAAOjB,IAAI,CAACD,OAAO,CAAC;QAClD,MAAMrsB,GAAG,GAAGwtB,IAAI,CAACC,SAAS,CAAC,CAACpB,OAAO,CAACqB,GAAG,EAAErB,OAAO,CAACsB,IAAI,CAAC,CAAC;QACvD,MAAMpM,QAAQ,IAAAuM,gBAAA,GAAGD,WAAW,CAACld,GAAG,CAAC3Q,GAAG,CAAC,cAAA8tB,gBAAA,cAAAA,gBAAA,GAAIxB,IAAI,CAACD,OAAO,CAAC;QACtDwB,WAAW,CAAC7c,GAAG,CAAChR,GAAG,EAAEuhB,QAAQ,CAAC;QAC9B,OAAOA,QAAQ;MACjB;IACF,CAAC;IACD4L,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAEM,MAAMY,uBAAuB,GAClCC,UAA8B,KACF;EAC5BlB,MAAM,EAAE;IACNvzB,IAAI,EAAE,iBAAiB;IACvB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAC/B,IAAI;QACF,OAAO,MAAMA,IAAI,CAACD,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOxoB,KAAK,EAAE;QACd,IACE,EAAEA,KAAK,YAAYhB,6BAAS,CAAC,IAC7BgB,KAAK,CAACwoB,OAAO,IAAI,IAAI,IACrBxoB,KAAK,CAACvK,OAAO,CAACgZ,UAAU,CAAC,QAAQ,CAAC,EAElC,MAAMzO,KAAK;QACb,MAAM1H,MAAM,GAAG,GAAG,IAAIsR,GAAG,CAAC5J,KAAK,CAACwoB,OAAO,CAACqB,GAAG,CAAC,CAAC5f,QAAQ,CAAC9F,KAAK,CAAC,CAAC,CAAC,QAAQ;QAEtE,IAAInE,KAAK,CAAC0d,QAAQ,EAAEgL,UAAU,IAAI,IAAI,EAAE;UACtC,IAAI1oB,KAAK,CAACvK,OAAO,KAAK,EAAE,EAAEuK,KAAK,CAACvK,OAAO,GAAG,GAAG6C,MAAM,KAAK0H,KAAK,CAAC2c,IAAI,EAAE;UACpE,MAAM3c,KAAK;QACb;QAEA,MAAM8pB,IAAI,GAAI9pB,KAAK,CAAC0d,QAAQ,CAA2B0M,UAAU;QACjEpqB,KAAK,CAACvK,OAAO,GAAG6C,MAAM;QACtB,MAAM7C,OAAO,GAAGq0B,IAAI,IAAI,IAAI,GAAG,IAAI9pB,KAAK,CAAC0d,QAAQ,CAACsG,MAAM,cAAc,GAAGmG,UAAU,CAACL,IAAI,CAAC;QACzF,IAAIr0B,OAAO,KAAK,EAAE,EAAEuK,KAAK,CAACvK,OAAO,IAAI,IAAIA,OAAO,EAAE;QAClD,MAAMuK,KAAK;MACb;IACF;EACF,CAAC;EACDspB,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEK,MAAMe,qBAAqB,GAAGA,CACnC30B,IAAY,EACZ40B,SAAyD,EACzDzyB,SAAiB,EACjBC,SAAiB,MACW;EAC5BmxB,MAAM,EAAE;IACNvzB,IAAI,EAAE,eAAe;IACrB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAC/B,IAAID,OAAO,CAACW,OAAO,CAACoB,GAAG,CAAC,iBAAiB,CAAC,EAAE;QAC1C/B,OAAO,CAACW,OAAO,CAACtZ,MAAM,CAAC,iBAAiB,CAAC;QACzC,OAAO4Y,IAAI,CAACD,OAAO,CAAC;MACtB;MACA,MAAM5b,OAAO,GAAG;QAAE4d,cAAc,EAAE;UAAEC,aAAa,EAAE;YAAE,iBAAiB,EAAE;UAAO;QAAE;MAAE,CAAC;MACpF,MAAMzpB,IAAI,GAAG,CAAC,MAAMspB,SAAS,CAAC1d,OAAO,CAAC,EAAE/U,SAAS,EAAEC,SAAS,CAAU;MACtE,IAAI,CAACyvB,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAAE,MAAM,IAAItJ,uBAAuB,CAAChC,IAAI,EAAE,GAAGsL,IAAI,CAAC;MAC/E,OAAOynB,IAAI,CAACD,OAAO,CAAC;IACtB;EACF,CAAC;EACDc,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEK,MAAMoB,uBAAuB,GAAGA,CACrCC,UAAkB,EAClBC,iBAAyB,MACG;EAC5B3B,MAAM,EAAE;IACNvzB,IAAI,EAAE,kBAAkB;IACxB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAAA,IAAAoC,oBAAA;MAC/B,MAAMC,SAAS,IAAAD,oBAAA,GAAGrC,OAAO,CAACW,OAAO,CAACrc,GAAG,CAAC,cAAc,CAAC,cAAA+d,oBAAA,cAAAA,oBAAA,GAAIE,GAAG;MAC5DvC,OAAO,CAACW,OAAO,CAACtZ,MAAM,CAAC,cAAc,CAAC;MACtC,MAAMmb,kBAAkB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC1V,MAAM,CAAE9B,CAAC,IAAKA,CAAC,KAAK,CAACsX,SAAS,CAAC;MAEpF,MAAMG,SAAS,GAAG,IAAI5a,KAAK,CAACsa,UAAU,CAAC,CACpCO,IAAI,CAAC,CAAC,CAAC,CACPlwB,GAAG,CAAC,CAACmwB,CAAC,EAAEra,GAAG,KAAK,CAAC,CAACA,GAAG,GAAG,CAAC,IAAI6Z,UAAU,KAAK,CAAC,CAAC;MACjD,MAAMS,WAAW,GAAGH,SAAS,CAACltB,MAAM,CAAC,CAAC+oB,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;MACxD,MAAMsE,aAAa,GAAGJ,SAAS,CAACjwB,GAAG,CAAE4D,CAAC,IAAKV,IAAI,CAACqO,KAAK,CAAE3N,CAAC,GAAGwsB,WAAW,GAAIR,iBAAiB,CAAC,CAAC;MAE7F,IAAI5qB,KAAK,GAAG,IAAIhB,6BAAS,CAAC,2BAA2B,CAAC;MACtD,KAAK,IAAIssB,OAAO,GAAG,CAAC,EAAEA,OAAO,IAAIX,UAAU,EAAEW,OAAO,IAAI,CAAC,EAAE;QACzD,IAAIA,OAAO,KAAK,CAAC,EAAE;UACjB,MAAMrsB,KAAK,CAACosB,aAAa,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;UACvC,MAAMC,SAAS,GAAG,IAAI3hB,GAAG,CAAC4e,OAAO,CAACqB,GAAG,CAAC;UACtC0B,SAAS,CAACC,YAAY,CAACre,GAAG,CAAC,aAAa,EAAEme,OAAO,CAAC5yB,QAAQ,CAAC,CAAC,CAAC;UAC7D8vB,OAAO,CAACqB,GAAG,GAAG0B,SAAS,CAAC7yB,QAAQ,CAAC,CAAC;QACpC;QACA,IAAI;UACF,OAAO,MAAM+vB,IAAI,CAACD,OAAO,CAAC;QAC5B,CAAC,CAAC,OAAO5pB,CAAC,EAAE;UAAA,IAAA6sB,kBAAA;UACV,IAAI,EAAE7sB,CAAC,YAAYI,6BAAS,CAAC,EAAE,MAAMJ,CAAC;UACtC,IAAIosB,kBAAkB,CAACl2B,QAAQ,EAAA22B,kBAAA,GAAC7sB,CAAC,CAAC8e,QAAQ,EAAEsG,MAAM,cAAAyH,kBAAA,cAAAA,kBAAA,GAAI,CAAC,CAAC,EAAE,MAAM7sB,CAAC;UACjEoB,KAAK,GAAGpB,CAAC;QACX;MACF;MACA,MAAMoB,KAAK;IACb;EACF,CAAC;EACDspB,QAAQ,EAAE;AACZ,CAAC,CAAC;;ACrPK,MAAMhG,OAAmC,GAAG;EACjDvf,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgZ,OAAO,EAAE;QACPmd,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs2B,OAAO,EAAE;QACPjE,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+d,IAAI,EAAE;QACJsU,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,MAAM;UACZu2B,aAAa,EAAE,CAAC,OAAO,EAAE,aAAa;QACxC;MACF,CAAC;MACDza,UAAU,EAAE;QACVuW,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACP2I,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw2B,UAAsC,GAAG;EACpDnoB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf/a,MAAM,EAAE;QACNmX,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDy2B,SAAS,EAAE;QACTpE,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM02B,iBAA6C,GAAG;EAC3DroB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfjS,SAAS,EAAE;QACTmS,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM22B,SAAqC,GAAG;EACnDtoB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfxc,YAAY,EAAE;QACZ4Y,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMjQ,QAAoC,GAAG;EAClD1X,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfne,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDhe,WAAW,EAAE;QACXme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE,CAAC;QACrB,CAAC;QACD/D,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD62B,SAAS,EAAE;QACTxE,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8Q,IAAI,EAAE;QACJuhB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoiB,SAAS,EAAE;QACTiQ,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsmB,UAAU,EAAE;QACV+L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM82B,EAA8B,GAAG;EAC5CzoB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,IAAI;IACfC,eAAe,EAAE;MACfzP,WAAW,EAAE;QACX6L,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,QAAQ,EAAE;QACRif,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+2B,WAAW,EAAE;QACX1E,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfgO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClChkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDg3B,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClChkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd6N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,iBAAiB;QACjChkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV4N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDpN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACL+M,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmM,MAAM,EAAE;QACNkmB,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDkB,aAAa,EAAE;QACb7E,cAAc,EAAE,gBAAgB;QAChChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,wBAAwB;QACxChkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBoN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,wBAAwB;QACxChkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwoB,oBAAoB,EAAE;QACpB6J,cAAc,EAAE,wBAAwB;QACxChkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDyoB,oBAAoB,EAAE;QACpB4J,cAAc,EAAE,wBAAwB;QACxChkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDqnB,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDykB,QAAQ,EAAE;QACR0R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDm3B,SAAS,EAAE;QACT9E,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDtP,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqT,QAAQ,EAAE;QACRgf,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,QAAQ,EAAE;QACR/E,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqB,WAAW,EAAE;QACXhF,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDjO,OAAO,EAAE;QACPsK,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2mB,YAAY,EAAE;QACZ0L,cAAc,EAAE,eAAe;QAC/BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDA,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6mB,QAAQ,EAAE;QACRsP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPqzB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDylB,MAAM,EAAE;QACN4M,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmmB,OAAO,EAAE;QACPgQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsc,QAAQ,EAAE;QACR+V,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD9P,SAAS,EAAE;QACTiQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgT,OAAO,EAAE;QACPqf,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDyc,SAAS,EAAE;QACT0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,OAAO,EAAE;QACPiP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDonB,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8b,UAAU,EAAE;QACVuW,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACPyM,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI9E,MAAM,CAAC,wBAAwB;QAC9C,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2pB,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD4pB,QAAQ,EAAE;QACRyI,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDnM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPi0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqO,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,MAAM;UACZu2B,aAAa,EAAE,CACb,SAAS,EACT,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,wBAAwB,EACxB,sBAAsB,EACtB,oBAAoB,EACpB,gBAAgB,EAChB,iBAAiB,EACjB,uBAAuB,EACvB,uBAAuB,EACvB,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,gBAAgB,EAChB,cAAc,EACd,kBAAkB,EAClB,gBAAgB,EAChB,YAAY,EACZ,UAAU,EACV,aAAa;QAEjB;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiB,SAAqC,GAAG;EACnDnpB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf/N,SAAS,EAAE;QACTmK,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDooB,SAAS,EAAE;QACTiK,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy3B,cAA0C,GAAG;EACxDppB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAE;MACxBtF,cAAc,EAAE,IAAI;MACpBuF,UAAU,EAAE;IACd,CAAC;IACD3B,eAAe,EAAE;MACf4B,EAAE,EAAE;QACFxF,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM83B,WAAuC,GAAG;EACrDzpB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ4W,YAAY,EAAE,OAAO;QACrB8S,UAAU,EAAE,IAAI;QAChB1F,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0H,KAAK,EAAE;QACLyuB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg4B,GAA+B,GAAG;EAC7C3pB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,MAAM;UACZu2B,aAAa,EAAE,CAAC,OAAO,EAAE,OAAO;QAClC;MACF,CAAC;MACD7uB,KAAK,EAAE;QACLyuB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi4B,WAAuC,GAAG;EACrD5pB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfxvB,GAAG,EAAE;QACH4rB,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDk4B,UAAU,EAAE;QACV7F,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoD,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm4B,YAAwC,GAAG;EACtD9pB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDo4B,SAAS,EAAE;QACTjC,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq4B,MAAM,EAAE;QACNlC,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs4B,aAAa,EAAE;QACbjG,cAAc,EAAE,gBAAgB;QAChC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDu4B,UAAU,EAAE;QACVpC,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuN,OAAmC,GAAG;EACjDc,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+2B,WAAW,EAAE;QACX1E,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDg3B,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8uB,aAAa,EAAE;QACbqH,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,gBAAgB;QAChC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfgO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd6N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,iBAAiB;QACjC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDtN,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACL+M,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+uB,SAAS,EAAE;QACToH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV4N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgvB,WAAW,EAAE;QACXmH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw4B,cAA0C,GAAG;EACxDnqB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgT,OAAO,EAAE;QACPqf,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDyc,SAAS,EAAE;QACT0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwuB,MAAM,EAAE;QACN6D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDy4B,WAAW,EAAE;QACXpG,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDknB,OAAO,EAAE;QACPiP,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM04B,QAAoC,GAAG;EAClDrqB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRtG,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM44B,GAA+B,GAAG;EAC7CvqB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE;MACfhN,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM64B,QAAoC,GAAG;EAClDxqB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfj2B,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD84B,MAAM,EAAE;QACNzG,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+4B,OAAO,EAAE;QACP1G,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDg5B,eAAe,EAAE;QACf7C,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,mBAAmB;QACnC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDi5B,kBAAkB,EAAE;QAClB5G,cAAc,EAAE,sBAAsB;QACtChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDk5B,iBAAiB,EAAE;QACjB7G,cAAc,EAAE,qBAAqB;QACrChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5B,IAAI,EAAE;QACJ9G,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoD,aAAa,EAAE;QACb/G,cAAc,EAAE,gBAAgB;QAChC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq5B,eAAe,EAAE;QACfhH,cAAc,EAAE,kBAAkB;QAClC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs5B,WAAW,EAAE;QACXjH,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu5B,KAAiC,GAAG;EAC/ClrB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoO,IAAI,EAAE;QACJikB,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw5B,WAAuC,GAAG;EACrDnrB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf5b,GAAG,EAAE;QACHgY,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0a,QAAQ,EAAE;QACR2X,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDxb,GAAG,EAAE;QACH6X,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDzb,QAAQ,EAAE;QACR0K,YAAY,EAAE,KAAK;QACnBoN,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy5B,aAAyC,GAAG;EACvDprB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfnb,MAAM,EAAE;QACNuX,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM05B,eAA2C,GAAG;EACzDrrB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfne,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNyrB,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD25B,OAAO,EAAE;QACPtH,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4D,aAAyC,GAAG;EACvDvrB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf4D,QAAQ,EAAE;QACRxH,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0vB,QAAQ,EAAE;QACR2C,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDyvB,MAAM,EAAE;QACN4C,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD85B,OAAO,EAAE;QACPzH,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+D,iBAA6C,GAAG;EAC3D1rB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfne,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNyrB,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDg6B,QAAQ,EAAE;QACR3H,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi6B,aAAyC,GAAG;EACvD5rB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfhb,OAAO,EAAE;QACPoX,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDzb,QAAQ,EAAE;QACR8X,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,YAAY;cAClB0H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAErO,IAAI,EAAE;gBAAM;cAAE;YACjC;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk6B,YAAwC,GAAG;EACtD7rB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqV,MAAM,EAAE;QACNgd,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkb,MAAM,EAAE;QACNmX,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDm6B,OAAO,EAAE;QACP9H,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMoE,kBAA8C,GAAG;EAC5D/rB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACf7O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0uB,WAAW,EAAE;QACXyH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN20B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8b,UAAU,EAAE;QACVuW,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACD2uB,OAAO,EAAE;QACPwH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuuB,GAAG,EAAE;QACH8D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDpH,WAAW,EAAE;QACXyD,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6uB,UAAU,EAAE;QACVwD,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,MAAM;UACZu2B,aAAa,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ;QACzC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8D,KAAiC,GAAG;EAC/ChsB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACfxzB,OAAO,EAAE;QACP4vB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs6B,MAAM,EAAE;QACNjI,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXC,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJ;cACArO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDoO,IAAI,EAAE;QACJikB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu6B,UAAsC,GAAG;EACpDlsB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfuE,QAAQ,EAAE;QACRnI,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDyE,WAAW,EAAE;QACXpI,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM06B,QAAoC,GAAG;EAClDrsB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfnlB,IAAI,EAAE;QACJuhB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN20B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD26B,QAAQ,EAAE;QACRtI,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,WAAW,EAAE;QACXvI,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,KAAK,EAAE;QACLxI,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD86B,WAAW,EAAE;QACXzI,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+6B,GAAG,EAAE;QACH5E,WAAW,EAAE;UACX6E,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ,CAAC;QACD5I,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXE,gBAAgB,EAAE,UAAU;cAC5BD,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqX,IAAI,EAAE;QACJgb,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPi0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDk7B,IAAI,EAAE;QACJ7I,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm7B,MAAkC,GAAG;EAChD9sB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfnlB,IAAI,EAAE;QACJuhB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN20B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD26B,QAAQ,EAAE;QACRtI,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,WAAW,EAAE;QACXvI,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,KAAK,EAAE;QACLxI,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD86B,WAAW,EAAE;QACXzI,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+6B,GAAG,EAAE;QACH5E,WAAW,EAAE;UACX6E,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ,CAAC;QACD5I,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXE,gBAAgB,EAAE,UAAU;cAC5BD,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqX,IAAI,EAAE;QACJgb,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPi0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDk7B,IAAI,EAAE;QACJ7I,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDo7B,OAAO,EAAE;QACP/I,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq7B,OAAO,EAAE;QACPhJ,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqR,SAAS,EAAE;QACTghB,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs7B,YAAwC,GAAG;EACtDjtB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfnlB,IAAI,EAAE;QACJuhB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu7B,cAA0C,GAAG;EACxDltB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfz0B,MAAM,EAAE;QACN20B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw7B,gBAA4C,GAAG;EAC1DntB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfnlB,IAAI,EAAE;QACJuhB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN20B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDo7B,OAAO,EAAE;QACP/I,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD26B,QAAQ,EAAE;QACRtI,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,WAAW,EAAE;QACXvI,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq7B,OAAO,EAAE;QACPhJ,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqR,SAAS,EAAE;QACTghB,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqX,IAAI,EAAE;QACJgb,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPi0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy7B,aAAyC,GAAG;EACvDptB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfyF,KAAK,EAAE;QACLvF,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM27B,SAAqC,GAAG;EACnDttB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,KAAK,EAAE;QACLohB,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsc,QAAQ,EAAE;QACR+V,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4F,gBAA4C,GAAG;EAC1DvtB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqnB,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDykB,QAAQ,EAAE;QACR0R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM67B,aAAyC,GAAG;EACvDxtB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf6F,aAAa,EAAE;QACbzJ,cAAc,EAAE,gBAAgB;QAChC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMtpB,WAAuC,GAAG;EACrD2B,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf7yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,QAAQ,EAAE;QACRif,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+7B,WAAW,EAAE;QACX5F,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqT,QAAQ,EAAE;QACRgf,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,WAAW,EAAE;QACXhF,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDzT,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg8B,UAAsC,GAAG;EACpD3tB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfgG,MAAM,EAAE;QACN5J,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk8B,aAAyC,GAAG;EACvD7tB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf/V,WAAW,EAAE;QACXiW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDmgB,WAAW,EAAE;QACXgW,WAAW,EAAE;UACXE,gBAAgB,EAAE,GAAG;UACrBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDm8B,OAAO,EAAE;QACPhG,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo8B,MAAkC,GAAG;EAChD/tB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfoG,mBAAmB,EAAE;QACnBhK,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs8B,SAAS,EAAE;QACTnG,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDu8B,UAAU,EAAE;QACVpG,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDw8B,QAAQ,EAAE;QACRrG,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDy8B,OAAO,EAAE;QACPpK,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD08B,YAAY,EAAE;QACZvG,WAAW,EAAE;UACXE,gBAAgB,EAAE,GAAG;UACrBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,eAAe;QAC/BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD28B,MAAM,EAAE;QACNtK,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD48B,SAAS,EAAE;QACTvK,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD68B,SAAS,EAAE;QACTxK,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD8G,WAAW,EAAE;QACXzK,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+8B,YAAY,EAAE;QACZ1K,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDg9B,SAAS,EAAE;QACT7G,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDi9B,eAAe,EAAE;QACf5K,cAAc,EAAE,kBAAkB;QAClChkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDkH,wBAAwB,EAAE;QACxB/G,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,4BAA4B;QAC5C6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDm9B,SAAS,EAAE;QACT9K,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDo9B,UAAU,EAAE;QACV/K,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq9B,eAAe,EAAE;QACfhL,cAAc,EAAE,oBAAoB;QACpC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs9B,cAAc,EAAE;QACdnH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu9B,QAAoC,GAAG;EAClDlvB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf/zB,OAAO,EAAE;QACPi0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDw9B,iBAAiB,EAAE;QACjBrH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,qBAAqB;QACrC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy9B,eAA2C,GAAG;EACzDpvB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfyH,OAAO,EAAE;QACPvH,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD29B,QAAQ,EAAE;QACRxH,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM49B,UAAsC,GAAG;EACpDvvB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf4H,QAAQ,EAAE;QACRxL,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD89B,KAAK,EAAE;QACLzL,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+9B,QAAQ,EAAE;QACR5H,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg+B,SAAqC,GAAG;EACnD3vB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfne,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi+B,cAA0C,GAAG;EACxD5vB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfrvB,MAAM,EAAE;QACNyrB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk+B,YAAwC,GAAG;EACtD7vB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfkI,QAAQ,EAAE;QACR9L,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoI,MAAM,EAAE;QACN/L,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqI,MAAM,EAAE;QACNhM,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs+B,QAAoC,GAAG;EAClDjwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf7O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN20B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACD2uB,OAAO,EAAE;QACPwH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD4uB,WAAW,EAAE;QACXyD,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6uB,UAAU,EAAE;QACVwD,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,MAAM;UACZu2B,aAAa,EAAE,CAAC,IAAI,EAAE,OAAO;QAC/B;MACF,CAAC;MACDgI,WAAW,EAAE;QACXlM,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMrN,oBAAgD,GAAG;EAC9Dta,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBoN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMgpB,kBAA8C,GAAG;EAC5D3a,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMioB,eAA2C,GAAG;EACzD5Z,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfc,WAAW,EAAE;QACX1E,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfgO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDg3B,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd6N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,iBAAiB;QACjC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV4N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM7M,gBAA4C,GAAG;EAC1D9a,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACL+M,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+gB,sBAAkD,GAAG;EAChE1S,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,wBAAwB;IACnCC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACL+M,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmM,MAAM,EAAE;QACNkmB,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDtN,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,aAAa,EAAE;QACb7E,cAAc,EAAE,gBAAgB;QAChChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw+B,qBAAiD,GAAG;EAC/DnwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwoB,oBAAoB,EAAE;QACpB6J,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDyoB,oBAAoB,EAAE;QACpB4J,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACL+M,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMupB,eAA2C,GAAG;EACzDlb,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBoN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,wBAAwB;QACxC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkpB,cAA0C,GAAG;EACxD7a,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMypB,qBAAiD,GAAG;EAC/Dpb,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqpB,iBAA6C,GAAG;EAC3Dhb,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACL+M,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy+B,qBAAiD,GAAG;EAC/DpwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACf3H,MAAM,EAAE;QACN+D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0+B,YAAwC,GAAG;EACtDrwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACftP,YAAY,EAAE;QACZ0L,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMge,cAA0C,GAAG;EACxD3P,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf7O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8b,UAAU,EAAE;QACVuW,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMihB,gBAA4C,GAAG;EAC1D5S,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfjjB,OAAO,EAAE;QACPqf,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDyc,SAAS,EAAE;QACT0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,OAAO,EAAE;QACPiP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2+B,UAAsC,GAAG;EACpDtwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfne,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4+B,UAAsC,GAAG;EACpDvwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfjjB,OAAO,EAAE;QACPqf,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDyc,SAAS,EAAE;QACT0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACPyM,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI9E,MAAM,CAAC,wBAAwB;QAC9C,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6+B,QAAoC,GAAG;EAClDxwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACftM,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD4pB,QAAQ,EAAE;QACRyI,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMpP,WAAuC,GAAG;EACrDvY,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfj2B,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD6mB,QAAQ,EAAE;QACRsP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPqzB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8+B,QAAoC,GAAG;EAClDzwB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfxQ,MAAM,EAAE;QACN4M,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMymB,cAA0C,GAAG;EACxDpY,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACftP,YAAY,EAAE;QACZ0L,cAAc,EAAE,eAAe;QAC/B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMgnB,YAAwC,GAAG;EACtD3Y,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfxQ,MAAM,EAAE;QACN4M,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+mB,cAA0C,GAAG;EACxD1Y,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfxQ,MAAM,EAAE;QACN4M,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwmB,WAAW,EAAE;QACX6L,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8mB,YAAwC,GAAG;EACtDzY,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfxQ,MAAM,EAAE;QACN4M,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmmB,OAAO,EAAE;QACPgQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsc,QAAQ,EAAE;QACR+V,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD9P,SAAS,EAAE;QACTiQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM++B,WAAuC,GAAG;EACrD1wB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfzhB,IAAI,EAAE;QACJ6d,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqU,IAAI,EAAE;QACJ8hB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDg/B,SAAS,EAAE;QACT7I,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDi/B,QAAQ,EAAE;QACR9I,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDk/B,WAAW,EAAE;QACX7M,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDm/B,OAAO,EAAE;QACP9M,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDo/B,aAAa,EAAE;QACbjJ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,gBAAgB;QAChC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDm9B,SAAS,EAAE;QACT9K,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD88B,WAAW,EAAE;QACXzK,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+8B,YAAY,EAAE;QACZ1K,cAAc,EAAE,eAAe;QAC/BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq/B,UAAU,EAAE;QACVhN,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDs/B,MAAM,EAAE;QACNjN,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0hB,cAA0C,GAAG;EACxDrT,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf1T,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDm3B,SAAS,EAAE;QACT9E,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACD3iB,QAAQ,EAAE;QACRgf,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2hB,aAAyC,GAAG;EACvDtT,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf5iB,QAAQ,EAAE;QACRgf,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDykB,QAAQ,EAAE;QACR0R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,QAAQ,EAAE;QACR/E,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqB,WAAW,EAAE;QACXhF,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDzT,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,QAAQ,EAAE;QACRif,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyhB,gBAA4C,GAAG;EAC1DpT,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf5O,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDykB,QAAQ,EAAE;QACR0R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDm3B,SAAS,EAAE;QACT9E,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDtP,SAAS,EAAE;QACT2L,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu/B,eAA2C,GAAG;EACzDlxB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACflO,OAAO,EAAE;QACPsK,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,WAAW,EAAE;QACXhF,cAAc,EAAE,cAAc;QAC9BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDzT,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqT,QAAQ,EAAE;QACRgf,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmhB,WAAuC,GAAG;EACrD9S,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfpM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwJ,SAAqC,GAAG;EACnDnxB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfwJ,SAAS,EAAE;QACTpN,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACD0J,SAAS,EAAE;QACTrN,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACD2J,OAAO,EAAE;QACPxJ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4/B,kBAA8C,GAAG;EAC5DvxB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACfyH,OAAO,EAAE;QACPvH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD29B,QAAQ,EAAE;QACRxH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6/B,kBAA8C,GAAG;EAC5DxxB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACf6J,QAAQ,EAAE;QACR3J,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+/B,UAAU,EAAE;QACV5J,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMggC,KAAiC,GAAG;EAC/C3xB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACfgK,KAAK,EAAE;QACL5N,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD2/B,OAAO,EAAE;QACPtN,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkgC,MAAkC,GAAG;EAChD7xB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfnb,MAAM,EAAE;QACNuX,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMumB,OAAmC,GAAG;EACjDlY,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACfzP,WAAW,EAAE;QACX6L,cAAc,EAAE,cAAc;QAC9B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDuiB,GAAG,EAAE;QACH4T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHke,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,QAAQ,EAAE;QACRif,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkR,KAAK,EAAE;QACLilB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwO,OAAO,EAAE;QACP6jB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmgC,WAAuC,GAAG;EACrD9xB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfvb,QAAQ,EAAE;QACRyb,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD8vB,SAAS,EAAE;QACTqG,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDogC,eAAe,EAAE;QACfjK,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,kBAAkB;QAClChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqgC,MAAM,EAAE;QACNlK,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgwB,OAAO,EAAE;QACPmG,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD87B,aAAa,EAAE;QACb3F,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,gBAAgB;QAChChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDsgC,cAAc,EAAE;QACdnK,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,iBAAiB;QACjChkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDugC,KAAK,EAAE;QACLpK,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,OAAO;QACvBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwgC,oBAAgD,GAAG;EAC9DnO,cAAc,EAAE,sBAAsB;EACtChkB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,sBAAsB;IACjC0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtCxG,MAAM,EAAE;QACN4C,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD0vB,QAAQ,EAAE;QACR2C,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,QAAQ,EAAE;QACRkW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMygC,eAA2C,GAAG;EACzDpO,cAAc,EAAE,iBAAiB;EACjChkB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC5rB,IAAI,EAAE;QACJgoB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0gC,mBAA+C,GAAG;EAC7DrO,cAAc,EAAE,qBAAqB;EACrChkB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,qBAAqB;IAChC0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtChlB,KAAK,EAAE;QACLohB,cAAc,EAAE,OAAO;QACvB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDyc,SAAS,EAAE;QACT0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2c,UAAU,EAAE;QACVwZ,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACD9O,OAAO,EAAE;QACPiP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2gC,gBAA4C,GAAG;EAC1DtO,cAAc,EAAE,kBAAkB;EAClChkB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC5rB,IAAI,EAAE;QACJgoB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDovB,EAAE,EAAE;QACFiD,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4gC,kBAA8C,GAAG;EAC5DvO,cAAc,EAAE,oBAAoB;EACpChkB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,oBAAoB;IAC/B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC7G,EAAE,EAAE;QACFiD,cAAc,EAAE,IAAI;QACpB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACD/D,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACArO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6gC,wBAAoD,GAAG;EAClExyB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,0BAA0B;IACrCC,eAAe,EAAE;MACf,GAAG0I,UAAU,CAACtwB,IAAI,CAAC4nB,eAAe;MAClCna,UAAU,EAAE;QACVuW,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,IAAI8gC,cAAc,GAAG;EAC1BrJ,cAAc,EAAEA,cAAc;EAC9B,qCAAqC,EAAE+I,oBAAoB;EAC3D,gCAAgC,EAAEC,eAAe;EACjD,oCAAoC,EAAEC,mBAAmB;EACzD,iCAAiC,EAAEC,gBAAgB;EACnD,mCAAmC,EAAEC;AACvC,CAAC;;AClzK6B;AAEvB,MAAMK,MAA0B,GAAG;EACxCC,aAAa,EAAE,QAAQ;EACvBhP,MAAM,EAAE;IACNjN,YAAY,EAAE,kBAAkB;IAChC8S,UAAU,EAAE,IAAI;IAChB1F,cAAc,EAAE,QAAQ;IACxBhkB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMmhC,KAA4B,GAAG;EAC1CD,aAAa,EAAE,OAAO;EACtBhP,MAAM,EAAE;IACNG,cAAc,EAAE,OAAO;IACvB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF,CAAC;EACDohC,YAAY,EAAE;AAChB,CAAC;AAEM,MAAMnF,MAA6B,GAAG;EAC3CiF,aAAa,EAAE,QAAQ;EACvBhP,MAAM,EAAE;IACNG,cAAc,EAAE,QAAQ;IACxB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM8Q,eAA2B,GAAG;EACzCowB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAE;IACNG,cAAc,EAAE,MAAM;IACtB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMwB,MAA6B,GAAG;EAC3C0/B,aAAa,EAAE,QAAQ;EACvBhP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXE,gBAAgB,EAAE,oBAAoB;MACtCD,gBAAgB,EAAE;IACpB,CAAC;IACD/D,cAAc,EAAE,QAAQ;IACxB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM8jB,QAAiC,GAAG;EAC/Cod,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtChP,MAAM,EAAE;IACNjN,YAAY,EAAE,KAAK;IACnBoN,cAAc,EAAE,UAAU;IAC1BhkB,IAAI,EAAE;MACJrO,IAAI,EAAE,MAAM;MACZu2B,aAAa,EAAE,CAAC,KAAK,EAAE,YAAY;IACrC;EACF;AACF,CAAC;AAEM,MAAMv2B,eAA2B,GAAG;EACzCkhC,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAE;IACNG,cAAc,EAAE,MAAM;IACtB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMqhC,WAA+B,GAAG;EAC7CH,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;EACzChP,MAAM,EAAE;IACNjN,YAAY,EAAE,kBAAkB;IAChC8S,UAAU,EAAE,IAAI;IAChB1F,cAAc,EAAE,cAAc;IAC9BhkB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMo0B,IAAwB,GAAG;EACtC8M,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAE6O,WAAiBA;AAC3B,CAAC;AAEM,MAAMpW,KAA4B,GAAG;EAC1CuW,aAAa,EAAE,OAAO;EACtBhP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXC,gBAAgB,EAAE;IACpB,CAAC;IACD/D,cAAc,EAAE,OAAO;IACvB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMshC,QAA+B,GAAG;EAC7CJ,aAAa,EAAE,UAAU;EACzBhP,MAAM,EAAE;IACNG,cAAc,EAAE,WAAW;IAC3B6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMuhC,SAAkC,GAAG;EAChDL,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClChP,MAAM,EAAE;IACNG,cAAc,EAAE,MAAM;IACtBhkB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMwhC,KAA8B,GAAG;EAC5CN,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnChP,MAAM,EAAE;IACNjN,YAAY,EAAE,EAAE;IAChBkR,WAAW,EAAE;MACXE,gBAAgB,EAAE,IAAI;MACtBD,gBAAgB,EAAE;IACpB,CAAC;IACD/D,cAAc,EAAE,OAAO;IACvBhkB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMyhC,SAAkC,GAAG;EAChDP,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClChP,MAAM,EAAE;IACNjN,YAAY,EAAE,KAAK;IACnBoN,cAAc,EAAE,MAAM;IACtBhkB,IAAI,EAAE;MACJrO,IAAI,EAAE,MAAM;MACZu2B,aAAa,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK;IACzC;EACF;AACF,CAAC;AAEM,MAAMxO,OAA8B,GAAG;EAC5CmZ,aAAa,EAAE,SAAS;EACxBhP,MAAM,EAAE;IACNG,cAAc,EAAE,UAAU;IAC1B6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM0hC,KAAyB,GAAG;EACvCR,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAE8O,SAAeA;AACzB,CAAC;;AC3L0D;AACV;AACI;AACN;AAqFxC,MAAMc,SAAI,SAASH,0BAAwB,CAAC;EAGjD;AACF;AACA;AACA;AACA;EACE7hC,WAAWA,CAACqhC,KAAa,EAAEjqB,OAA4B,EAAE;IAAA,IAAApB,IAAA,EAAAksB,iBAAA;IACvD,IAAIb,KAAK,KAAKpwB,SAAS,EAAE;MACvB,MAAM,IAAIlR,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACqX,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAM+qB,QAA4B,GAAG;MACnCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAG,4BAA4B;IACnD,MAAMC,eAAe,GACnBlrB,OAAO,CAACmrB,gBAAgB,IAAInrB,OAAO,CAACmrB,gBAAgB,CAACD,eAAe,GAChE,GAAGlrB,OAAO,CAACmrB,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAG/qB,OAAO;MACVmrB,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAzsB,IAAA,IAAAksB,iBAAA,GAAE9qB,OAAO,CAACqrB,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI9qB,OAAO,CAACsrB,OAAO,cAAA1sB,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAACwsB,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACnB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACExoB,kBAAkBA,CAChBsjB,MAAc,EACd/kB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBwrB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEhqB,yBAAyBA,CACvBujB,MAAc,EACdnrB,IAAY,EACZoG,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAEnrB,IAAI;MAAEoG;IAAQ,CAAC,EACzByrB,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACElqB,2BAA2BA,CACzBwjB,MAAc,EACdz6B,MAAc,EACd0V,OAAmD,EACL;IAC9C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAEz6B,MAAM;MAAE0V;IAAQ,CAAC,EAC3B0rB,wCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE7e,mBAAmBA,CACjBkY,MAAc,EACd/kB,OAA2C,EACL;IACtC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnB2rB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,qCAAqCA,CACnC7G,MAAc,EACd/kB,OAA6D,EACL;IACxD,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnB6rB,kDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,qBAAqBA,CACnBhjC,IAAY,EACZkX,OAA6C,EACL;IACxC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEziC,IAAI;MAAEkX;IAAQ,CAAC,EACjB+rB,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChBjH,MAAc,EACd/kB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBisB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEnnB,WAAWA,CACTigB,MAAc,EACd/kB,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBksB,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACErnB,eAAeA,CACbkgB,MAAc,EACd/kB,OAAuC,EACL;IAClC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBmsB,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZrH,MAAc,EACd/kB,OAAsC,EACL;IACjC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBqsB,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTtsB,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACurB,oBAAoB,CAAC;MAAEvrB;IAAQ,CAAC,EAAEusB,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEnpB,kBAAkBA,CAChB8Z,IAAiB,EACjBld,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjBwsB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACExqB,oBAAoBA,CAClBhC,OAA4C,EACL;IACvC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEvrB;IAAQ,CAAC,EACXysB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACErqB,mBAAmBA,CACjBxI,IAAY,EACZoG,OAA2C,EACL;IACtC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjB0sB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEvqB,qBAAqBA,CACnB7X,MAAc,EACd0V,OAA6C,EACL;IACxC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEjhC,MAAM;MAAE0V;IAAQ,CAAC,EACnB2sB,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV5sB,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACurB,oBAAoB,CAAC;MAAEvrB;IAAQ,CAAC,EAAE6sB,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChB9sB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEvrB;IAAQ,CAAC,EACX+sB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,sBAAsBA,CACpBhtB,OAA8C,EACL;IACzC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEvrB;IAAQ,CAAC,EACXitB,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACE3sB,wBAAwBA,CACtBN,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEvrB;IAAQ,CAAC,EACXktB,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACExqB,iBAAiBA,CACf9I,IAAY,EACZoG,OAAyC,EACL;IACpC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjBmtB,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE1qB,mBAAmBA,CACjBnY,MAAc,EACd0V,OAA2C,EACL;IACtC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEjhC,MAAM;MAAE0V;IAAQ,CAAC,EACnBotB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBrtB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEvrB;IAAQ,CAAC,EACXstB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE1qB,yBAAyBA,CACvBhJ,IAAY,EACZoG,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjButB,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEjrB,+BAA+BA,CAC7B1I,IAAY,EACZoG,OAAuD,EACL;IAClD,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjBwtB,4CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oCAAoCA,CAClC7zB,IAAY,EACZoG,OAA4D,EACL;IACvD,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjB0tB,iDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,sCAAsCA,CACpC/zB,IAAY,EACZ6Z,KAAa,EACbzT,OAA8D,EACL;IACzD,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAE6Z,KAAK;MAAEzT;IAAQ,CAAC,EACxB4tB,mDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE5oB,kBAAkBA,CAChBlc,IAAY,EACZkX,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEziC,IAAI;MAAEkX;IAAQ,CAAC,EACjB6tB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpB1D,QAAgB,EAChBpqB,OAA8C,EACL;IACzC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEnB,QAAQ;MAAEpqB;IAAQ,CAAC,EACrB+tB,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEzgB,iBAAiBA,CACfyX,MAAc,EACd/kB,OAAyC,EACL;IACpC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBguB,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,wBAAwBA,CACtBlJ,MAAc,EACd/kB,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAE/kB;IAAQ,CAAC,EACnBkuB,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,gCAAgCA,CAC9BpJ,MAAc,EACdlU,OAAe,EACf7Q,OAAwD,EACL;IACnD,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAExG,MAAM;MAAElU,OAAO;MAAE7Q;IAAQ,CAAC,EAC5BouB,6CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXruB,OAAqC,EACL;IAChC,OAAO,IAAI,CAACurB,oBAAoB,CAAC;MAAEvrB;IAAQ,CAAC,EAAEsuB,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEplB,kBAAkBA,CAChBlJ,OAA0C,EACL;IACrC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAEvrB;IAAQ,CAAC,EACXuuB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAACxuB,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACurB,oBAAoB,CAAC;MAAEvrB;IAAQ,CAAC,EAAEyuB,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV1uB,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACurB,oBAAoB,CAAC;MAAEvrB;IAAQ,CAAC,EAAE2uB,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX5uB,OAAqC,EACL;IAChC,OAAO,IAAI,CAACurB,oBAAoB,CAAC;MAAEvrB;IAAQ,CAAC,EAAE6uB,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACb5R,IAAe,EACfld,OAAuC,EACL;IAClC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjB+uB,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEluB,oBAAoBA,CAClBjH,IAAY,EACZoG,OAA4C,EACL;IACvC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjBgvB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,wBAAwBA,CACtBr1B,IAAY,EACZoG,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAE3xB,IAAI;MAAEoG;IAAQ,CAAC,EACjBkvB,qCACF,CAAC;EACH;AACF;AACA;AACA,MAAMnU,UAAU,GAAGH,gBAAgB,CAAC+P,uBAAO,EAAE,WAAY,KAAK,CAAC;AAE/D,MAAMa,+BAAyD,GAAG;EAChE3V,IAAI,EAAE,uBAAuB;EAC7BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,OAAejU;IAC7B,CAAC;IACD,GAAG,EAAE;MACH2Y,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM0Q,sCAAgE,GAAG;EACvE5V,IAAI,EAAE,mCAAmC;EACzCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,OAAejU;IAC7B,CAAC;IACD,GAAG,EAAE;MACH2Y,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,EAAEA,eAAe,CAAC;EACrE8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM2Q,wCAAkE,GAAG;EACzE7V,IAAI,EAAE,uCAAuC;EAC7CsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,OAAejU;IAC7B,CAAC;IACD,GAAG,EAAE;MACH2Y,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,EAAEA,MAAiB,CAAC;EACvE8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM4Q,gCAA0D,GAAG;EACjE9V,IAAI,EAAE,kCAAkC;EACxCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,iBAAyBnL;IACvC,CAAC;IACD,GAAG,EAAE;MACH6P,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAAC/E,QAAmB,CAAC;EACtC6E,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM8Q,kDAA4E,GAChF;EACEhW,IAAI,EAAE,4CAA4C;EAClDsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,SAAiBlL;IAC/B,CAAC;IACD,GAAG,EAAE;MACH4P,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACH,MAAMgR,kCAA4D,GAAG;EACnElW,IAAI,EAAE,qBAAqB;EAC3BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,YAAoB1J;IAClC,CAAC;IACD,GAAG,EAAE;MACHoO,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMkR,+BAAyD,GAAG;EAChEpW,IAAI,EAAE,uBAAuB;EAC7BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,OAAet0B;IAC7B,CAAC;IACD,GAAG,EAAE;MACHg5B,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMmR,wBAAkD,GAAG;EACzDrW,IAAI,EAAE,wBAAwB;EAC9BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,cAAsBrJ;IACpC,CAAC;IACD,GAAG,EAAE;MACH+N,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMoR,4BAAsD,GAAG;EAC7DtW,IAAI,EAAE,6BAA6B;EACnCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgBnJ;IAC9B,CAAC;IACD,GAAG,EAAE;MACH6N,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMsR,2BAAqD,GAAG;EAC5DxW,IAAI,EAAE,4BAA4B;EAClCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,GAAWjJ;IACzB,CAAC;IACD,GAAG,EAAE;MACH2N,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMwR,wBAAkD,GAAG;EACzD1W,IAAI,EAAE,cAAc;EACpBsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgBhJ;IAC9B;EACF,CAAC;EACD4N,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMyR,+BAAyD,GAAG;EAChE3W,IAAI,EAAE,aAAa;EACnBsZ,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,aAAqB5H;IACnC,CAAC;IACD,GAAG,EAAE;MACHsM,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEhF,IAAe;EAC5B6E,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,EAAEA,WAAsB,CAAC;EAC7DiF,SAAS,EAAE,MAAM;EACjB5U;AACF,CAAC;AACD,MAAM0R,iCAA2D,GAAG;EAClE5W,IAAI,EAAE,yBAAyB;EAC/BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,UAAkBtH;IAChC,CAAC;IACD,GAAG,EAAE;MACHgM,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM2R,gCAA0D,GAAG;EACjE7W,IAAI,EAAE,6BAA6B;EACnCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,UAAkBtH;IAChC,CAAC;IACD,GAAG,EAAE;MACHgM,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM4R,kCAA4D,GAAG;EACnE9W,IAAI,EAAE,iCAAiC;EACvCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,UAAkBtH;IAChC,CAAC;IACD,GAAG,EAAE;MACHgM,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM8R,yBAAmD,GAAG;EAC1DhX,IAAI,EAAE,iBAAiB;EACvBsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,MAAc1G;IAC5B,CAAC;IACD,GAAG,EAAE;MACHoL,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMgS,+BAAyD,GAAG;EAChElX,IAAI,EAAE,wBAAwB;EAC9BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgBnH;IAC9B,CAAC;IACD,GAAG,EAAE;MACH6L,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMkS,mCAA6D,GAAG;EACpEpX,IAAI,EAAE,6BAA6B;EACnCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,YAAoBvG;IAClC,CAAC;IACD,GAAG,EAAE;MACHiL,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMmS,qCAA+D,GAAG;EACtErX,IAAI,EAAE,+BAA+B;EACrCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,cAAsBtG;IACpC,CAAC;IACD,GAAG,EAAE;MACHgL,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMoS,8BAAwD,GAAG;EAC/DtX,IAAI,EAAE,4BAA4B;EAClCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgBnH;IAC9B,CAAC;IACD,GAAG,EAAE;MACH6L,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMqS,gCAA0D,GAAG;EACjEvX,IAAI,EAAE,gCAAgC;EACtCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgBnH;IAC9B,CAAC;IACD,GAAG,EAAE;MACH6L,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMuS,+BAAyD,GAAG;EAChEzX,IAAI,EAAE,wBAAwB;EAC9BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgBnH;IAC9B,CAAC;IACD,GAAG,EAAE;MACH6L,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMwS,sCAAgE,GAAG;EACvE1X,IAAI,EAAE,qCAAqC;EAC3CsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,gBAAwBrG;IACtC,CAAC;IACD,GAAG,EAAE;MACH+K,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMyS,4CAAsE,GAAG;EAC7E3X,IAAI,EAAE,2CAA2C;EACjDsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,SAAiBlL;IAC/B,CAAC;IACD,GAAG,EAAE;MACH4P,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM2S,iDAA2E,GAC/E;EACE7X,IAAI,EAAE,iDAAiD;EACvDsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,aAAqBpG;IACnC,CAAC;IACD,GAAG,EAAE;MACH8K,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACH,MAAM6S,mDAA6E,GACjF;EACE/X,IAAI,EAAE,yDAAyD;EAC/DsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgB9b;IAC9B,CAAC;IACD,GAAG,EAAE;MACHwgB,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,EAAEA,KAAgB,CAAC;EACpE8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACH,MAAM8S,+BAAyD,GAAG;EAChEhY,IAAI,EAAE,kBAAkB;EACxBsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,SAAiBlG;IAC/B,CAAC;IACD,GAAG,EAAE;MACH4K,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMgT,mCAA6D,GAAG;EACpElY,IAAI,EAAE,4BAA4B;EAClCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,SAAiBlG;IAC/B,CAAC;IACD,GAAG,EAAE;MACH4K,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,QAAmB,CAAC;EACtD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMiT,8BAAwD,GAAG;EAC/DnY,IAAI,EAAE,sBAAsB;EAC5BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,gBAAwBjG;IACtC,CAAC;IACD,GAAG,EAAE;MACH2K,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMmT,qCAA+D,GAAG;EACtErY,IAAI,EAAE,8BAA8B;EACpCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,aAAqBhG;IACnC,CAAC;IACD,GAAG,EAAE;MACH0K,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACf/E,SAAoB,EACpBA,KAAgB,EAChBA,SAAoB,CACrB;EACD6E,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,CAAC;EACpD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMqT,6CAAuE,GAC3E;EACEvY,IAAI,EAAE,yCAAyC;EAC/CsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,WAAmBn1B;IACjC,CAAC;IACD,GAAG,EAAE;MACH65B,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,MAAiB,EAAEA,OAAkB,CAAC;EACxE8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACH,MAAMuT,0BAAoD,GAAG;EAC3DzY,IAAI,EAAE,kBAAkB;EACxBsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,UAAkB7F;IAChC;EACF,CAAC;EACDyK,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMwT,+BAAyD,GAAG;EAChE1Y,IAAI,EAAE,uBAAuB;EAC7BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACVl4B,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAErO,IAAI,EAAE,WAAW;cAAEg2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF;IACF,CAAC;IACD,GAAG,EAAE;MACHuQ,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM0T,sBAAgD,GAAG;EACvD5Y,IAAI,EAAE,YAAY;EAClBsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,MAAczF;IAC5B;EACF,CAAC;EACDqK,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM4T,yBAAmD,GAAG;EAC1D9Y,IAAI,EAAE,uBAAuB;EAC7BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACVl4B,IAAI,EAAE;UAAErO,IAAI,EAAE,UAAU;UAAE42B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAErO,IAAI,EAAE;YAAS;UAAE;QAAE;MAClE;IACF;EACF,CAAC;EACDymC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAM8T,0BAAoD,GAAG;EAC3DhZ,IAAI,EAAE,iBAAiB;EACvBsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,UAAkBjE;IAChC,CAAC;IACD,GAAG,EAAE;MACH2I,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMgU,4BAAsD,GAAG;EAC7DlZ,IAAI,EAAE,kBAAkB;EACxBsZ,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,cAAsB5D;IACpC,CAAC;IACD,GAAG,EAAE;MACHsI,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEhF,KAAgB;EAC7B6E,aAAa,EAAE,CAAC7E,KAAgB,CAAC;EACjC8E,gBAAgB,EAAE,CAAC9E,MAAiB,EAAEA,WAAsB,CAAC;EAC7DiF,SAAS,EAAE,MAAM;EACjB5U;AACF,CAAC;AACD,MAAMiU,iCAA2D,GAAG;EAClEnZ,IAAI,EAAE,yBAAyB;EAC/BsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,QAAgB9b;IAC9B,CAAC;IACD,GAAG,EAAE;MACHwgB,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;AACD,MAAMmU,qCAA+D,GAAG;EACtErZ,IAAI,EAAE,8BAA8B;EACpCsZ,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1E,YAAoB3D;IAClC,CAAC;IACD,GAAG,EAAE;MACHqI,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1E,UAAkB;MAC9B2E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAAC7E,KAAgB,EAAEA,eAAe,CAAC;EAClD8E,gBAAgB,EAAE,CAAC9E,MAAiB,CAAC;EACrC3P;AACF,CAAC;;;;;;;AC54CD;;AAE8F;AAQjE;AAC0D;AAC3B;AACS;AAAA,IAAAgV,oBAAA,oBAAAlwB,OAAA;AAStD,MAAM+qB,IAAI,SAASkF,SAAO,CAAC;EACxC;AACF;AACA;AACA;AACA;AACA;AACA;EACElnC,WAAWA,CACTq0B,GAAW,EACX;IACE+S,aAAa,GAAG,KAAK;IACrBjS,UAAU,GAAG,CAAC;IACdC,iBAAiB,GAAG,GAAG;IACvB,GAAGhe;EAKL,CAAC,GAAG,CAAC,CAAC,EACN;IACA,MAAMiwB,UAAU,GAAG,MAAOC,IAAsB,IAC9C,CAAC,MAAM,IAAI,CAACC,gBAAgB,CAACD,IAAI,CAAC,EAAEtK,WAAW;IACjD;IACA,KAAK,CAAC3I,GAAG,EAAE;MACTmT,uBAAuB,EAAE,IAAI;MAC7BC,kBAAkB,EAAE,CAClB,IAAIL,aAAa,GAAG,EAAE,GAAG,CAACvS,qBAAqB,CAAC,MAAM,EAAEwS,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,EACvF9T,sBAAsB,CAAC,CAAC,EACxBQ,2BAA2B,CAAC,CAAC,EAC7BmB,uBAAuB,CAACC,UAAU,EAAEC,iBAAiB,CAAC,EACtDV,uBAAuB,CAAEJ,IAAgB,IACvC,CAAC,GAAG,EAAEA,IAAI,CAAClZ,MAAM,EAAEkZ,IAAI,CAACqC,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,KAAKrC,IAAI,CAACqC,SAAS,GAAG,CAAC,CAAClxB,IAAI,CAAC,EAAE,CAClF,CAAC,CACF;MACD,GAAG2R;IACL,CAAC,CAAC;IAQJ4U,8BAAA,OAAAmb,oBAAoB;IAPlB,IAAI,CAACO,QAAQ,CAACC,SAAS,CAAC7U,iBAAiB,EAAE;MAAE8U,KAAK,EAAE;IAAc,CAAC,CAAC;IACpE,IAAI,CAACF,QAAQ,CAACG,YAAY,CAAC;MAAE3nC,IAAI,EAAE8mC,uCAAmBA;IAAC,CAAC,CAAC;IACzD,IAAI,CAACU,QAAQ,CAACG,YAAY,CAAC;MAAE3nC,IAAI,EAAE+mC,gDAA4BA;IAAC,CAAC,CAAC;IAClE;IACA,IAAI,CAACS,QAAQ,CAACG,YAAY,CAAC;MAAE3nC,IAAI,EAAE;IAAqB,CAAC,CAAC;EAC5D;EAIA,MAAMqnC,gBAAgBA,CAACnwB,OAA0B,EAAoC;IACnF,IAAIyU,yBAAA,CAAKsb,oBAAoB,EAAzB,IAAwB,CAAC,IAAI,IAAI,EAAE,OAAOtb,yBAAA,CAAKsb,oBAAoB,EAAzB,IAAwB,CAAC;IACvE,OAAO,IAAI,CAACvB,SAAS,CAACxuB,OAAO,CAAC;EAChC;EAEA,MAAewuB,SAASA,CACtB,GAAGp6B,IAAsC,EACP;IAClC,MAAMs8B,OAAO,GAAG,KAAK,CAAClC,SAAS,CAAC,GAAGp6B,IAAI,CAAC;IACxCs8B,OAAO,CAACjU,IAAI,CACV,MAAM;MACJ5H,yBAAA,CAAKkb,oBAAoB,EAAzB,IAAI,EAAwBW,OAAJ,CAAC;IAC3B,CAAC,EACD,MAAM,CAAC,CACT,CAAC;IACD,OAAOA,OAAO;EAChB;;EAEA;AACF;AACA;AACA;EACE,MAAMjxB,YAAYA,CAAA,EAAoB;IACpC,OAAO,CAAC,MAAM,IAAI,CAAC0wB,gBAAgB,CAAC,CAAC,EAAElK,SAAS;EAClD;EAEA,MAAM1f,WAAWA,CAAA,EAAsB;IACrC,MAAM;MACJqf,WAAW;MACXK,SAAS,EAAE0K,aAAa;MACxBhL,SAAS;MACTS;IACF,CAAC,GAAG,MAAM,IAAI,CAACoI,SAAS,CAAC,CAAC;IAE1B,MAAMroB,wBAAwB,GAAGwf,SAAS,CACvCjd,MAAM,CAAC,CAAC;MAAE4d;IAAkB,CAAC,KAAKF,cAAc,IAAIE,iBAAiB,CAAC,CACtEn1B,MAAM,CAAC,CAACupB,GAAG,EAAEtpB,CAAC,KAAMA,CAAC,CAACk1B,iBAAiB,GAAG5L,GAAG,CAAC4L,iBAAiB,GAAGl1B,CAAC,GAAGspB,GAAI,EAAE;MAC3E4L,iBAAiB,EAAE,CAAC,CAAC;MACrBt7B,OAAO,EAAE;IACX,CAAC,CAAC,CAACA,OAAO;IACZ,IAAIyQ,wBAAwB,CAAC0K,wBAAwB,CAAC,IAAI,IAAI,EAAE;MAC9D,MAAMnb,OAAO,GAAGmb,wBAAwB,CAACra,QAAQ,CAAC,CAAC;MACnD,MAAM8kC,QAAQ,GAAGh+B,MAAM,CAAC6V,MAAM,CAAChN,wBAAwB,CAAC,CACrDiN,MAAM,CAAElV,EAAE,IAAK,OAAOA,EAAE,KAAK,QAAQ,CAAC,CACtCpF,GAAG,CAAEoF,EAAE,IAAK,CAACA,EAAE,CAAC;MACnB,MAAMvI,SAAS,GAAGqG,IAAI,CAACa,GAAG,CAAC,GAAGy+B,QAAQ,CAAC,CAAC9kC,QAAQ,CAAC,CAAC;MAClD,MAAMZ,SAAS,GAAG,CAACoG,IAAI,CAACqP,GAAG,CAAC,GAAGiwB,QAAQ,CAAC,GAAG,CAAC,EAAE9kC,QAAQ,CAAC,CAAC;MACxD,MAAM,IAAIhB,uBAAuB,CAAC,oBAAoB,EAAEE,OAAO,EAAEC,SAAS,EAAEC,SAAS,CAAC;IACxF;IAEA,OAAO;MACL+xB,GAAG,EAAE,IAAI,CAACgN,KAAK;MACf0G,aAAa;MACb3lC,OAAO,EAAE46B,WAAW;MACpBzf;IACF,CAAC;EACH;AACF;;AC5HkE;AACrB;AAC4B;;AAEzE;AACA;AACA;AACA;AACe,SAAS0qB,2BAA2BA,CACjDnjC,WAAgC,EACR;EACxB,MAAMwY,MAAM,GAAG6E,QAAQ,CAACrd,WAAW,CAAC;EACpC,QAAQwY,MAAM,CAAC7W,GAAG;IAChB,KAAKuM,GAAG,CAACiT,QAAQ;MACf,OAAOgiB,2BAA2B,CAAC7lB,OAAO,CAAC9E,MAAM,CAACgF,SAAS,CAAC,CAAC;IAC/D,KAAKtP,GAAG,CAACmL,QAAQ;MACf,OAAOb,MAAM,CAACuM,IAAI;IACpB;EACF;EAEA,MAAMzY,KAAK,GAAG8Y,iBAAS,CAAC5M,MAAM,CAAC7W,GAAG,EAAE6W,MAAM,CAAClb,OAAO,CAAC,CAAC0G,IAAI,CAAC,CAAC,CAAC5I,IAAI,CAAC,KAAKA,IAAI,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;EAC3F,IAAIkR,KAAK,IAAI,IAAI,EACf,MAAM,IAAIzQ,gBAAgB,CAAC,mCAAmCqS,GAAG,CAACsK,MAAM,CAAC7W,GAAG,CAAC,EAAE,CAAC;EAClF,IAAI,EAAE,WAAW,IAAI2K,KAAK,CAAC,EAAE,MAAM,IAAI3O,iBAAiB,CAAC,CAAC;EAC1D,MAAME,OAAO,GAAG2a,MAAM,CAAClM,KAAK,CAAC2S,SAAS,CAA6C;EACnF,OAAOphB,OAAO,CAACsgB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC;AACvC;;ACZA;AACA;AACA;AACA;AACe,MAAeilB,WAAW,CAAC;;;;;;;ACnBwC;AAC1C;AACO;AACS;AACb;;AAE3C;AACA;AACA;AACO,SAASI,QAAQA,CAACh6B,IAAa,EAAU;EAAA,IAAAi6B,aAAA;EAC9C,OAAOv3B,IAAI,EAAAu3B,aAAA,GAACF,+BAAY,CAAC/5B,IAAI,CAAC,cAAAi6B,aAAA,cAAAA,aAAA,GAAI,EAAE,CAAC;AACvC;;AAEA;AACA;;AAsCA;AACA;AACA;AACO,SAASC,UAAUA,CAACC,MAAc,EAAU;EACjD,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,CACN;MACEzoC,IAAI,EAAE,MAAM;MACZqO,IAAI,EAAE;QAAEq6B,MAAM,EAAE,CAAC,QAAQ;MAAE;IAC7B,CAAC,EACD;MACE1oC,IAAI,EAAE,SAAS;MACfqO,IAAI,EAAE;QAAEq6B,MAAM,EAAE,CAAC,KAAK;MAAE;IAC1B,CAAC,EACD;MACE1oC,IAAI,EAAE,WAAW;MACjBqO,IAAI,EAAE;QAAEq6B,MAAM,EAAE,CAAC,QAAQ;MAAE;IAC7B,CAAC,EACD;MACE1oC,IAAI,EAAE,iBAAiB;MACvBqO,IAAI,EAAE;QAAEq6B,MAAM,EAAE,CAAC,iBAAiB;MAAE;IACtC,CAAC;EAEL,CAAU;EACV,MAAMC,UAAU,GAAG,IAAIV,2BAAY,CAAC,CAAC,CAACW,WAAW,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;EAChE,MAAMK,SAAS,GAAG,IAAIX,uCAAwB,CAAC,CAAC,CAACY,cAAc,CAACP,MAAM,EAAEI,UAAU,CAAC;EACnF,OAAO73B,IAAI,CAAC9B,MAAM,CAAC65B,SAAS,CAAC,CAAC;AAChC;AAEO,SAASE,aAAaA,CAC3B36B,IAA+B,EAC/B46B,GAAa,EACbT,MAAc,EACN;EACR,OAAOz3B,IAAI,CACTvG,aAAa,CAAC,CACZkH,mBAAmB,EACnB,IAAIrH,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EACnBk+B,UAAU,CAACC,MAAM,CAAC,EAClBH,QAAQ,CAACY,GAAG,CAAC,EACbl4B,IAAI,CAAC9B,MAAM,CAACZ,IAAI,CAAC,CAAC,CACnB,CACH,CAAC;AACH;;;;;;;AC/F6B;AACO;AAC0C;AAC3B;AACqB;AACtB;AACe;AAChB;AACA;AAE1C,SAAS66B,eAAeA,CAC7BrkC,WAAgC,EAChCu4B,SAAiB,EACjB+L,OAAgB,EACJ;EACZ,MAAMjhC,QAAQ,GAAG,CAACk1B,SAAS,CAAC;EAC5B,IAAI+L,OAAO,EAAEjhC,QAAQ,CAAC0T,IAAI,CAAC,UAAU,CAAC;EACtC,MAAMwtB,WAAW,GAAGn6B,MAAM,CAACpK,WAAW,CAAC;EACvC,OAAO2F,aAAa,CAAC,CAACL,MAAM,CAACG,IAAI,CAACpC,QAAQ,CAAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEuL,IAAI,CAACq4B,WAAW,CAAC,CAAC,CAAC;AAC5E;;AAEA;AACA;AACA;AAFA,IAAAC,iBAAA,oBAAAryB,OAAA;AAGe,MAAMsyB,aAAa,SAASrB,WAAW,CAAC;EAKrD;AACF;AACA;EACEloC,WAAWA,CAAiBwpC,SAAmC,EAAE;IAC/D,KAAK,CAAC,CAAC;IANTxd,gCAAA,OAASsd,iBAAiB;IAAa,KAKXE,SAAmC,GAAnCA,SAAmC;IAE7D,MAAMC,OAAO,GAAG55B,iCAAS,CAAC45B,OAAO,CAACC,QAAQ,CAACx6B,MAAM,CAACs6B,SAAS,CAAC,CAAC;IAC7Dvd,2BAAA,CAAKqd,iBAAiB,EAAtB,IAAI,EAAqBG,OAAO,CAACD,SAAZ,CAAC;IACtB,IAAI,CAAC7mC,OAAO,GAAGsM,MAAM,CAACw6B,OAAO,CAACp4B,SAAS,EAAEtF,QAAQ,CAAC+B,cAAc,CAAC;EACnE;;EAEA;AACF;AACA;EACE,OAAO67B,QAAQA,CAAA,EAAkB;IAC/B,MAAMH,SAAS,GAAGv6B,MAAM,CAACY,wCAAgB,CAAC,EAAE,CAAC,EAAE9D,QAAQ,CAACgC,gBAAgB,CAAC;IACzE,OAAO,IAAIw7B,aAAa,CAACC,SAAS,CAAC;EACrC;;EAEA;EACA,MAAeh4B,IAAIA,CAAClD,IAAyB,EAAE8I,OAAa,EAAuB;IACjF,OAAOvH,iCAAS,CAAC4B,QAAQ,CAACrH,MAAM,CAACG,IAAI,CAAC+D,IAAI,CAAC,EAAEud,2BAAA,CAAKyd,iBAAiB,EAAtB,IAAqB,CAAC,CAAC;EACtE;EAEA,MAAeM,eAAeA,CAC5B9kC,WAAgC,EAChC;IAAEskC,OAAO;IAAE/L,SAAS;IAAE,GAAGjmB;EAAmD,CAAC,GAAG,CAAC,CAAC,EACpD;IAC9B,IAAIimB,SAAS,IAAI,IAAI,EAAE;MACrB,MAAM,IAAIx8B,aAAa,CAAC,WAAW,EAAE,UAAU,EAAEw8B,SAAS,CAAC;IAC7D;IACA,MAAMgM,WAAW,GAAGn6B,MAAM,CAACpK,WAAW,CAAC;IACvC,MAAM+kC,eAAe,GAAGV,eAAe,CAACrkC,WAAW,EAAEu4B,SAAS,EAAE+L,OAAO,KAAK,IAAI,CAAC;IAEjF,MAAM5iB,UAAU,GAAG,CAAC,MAAM,IAAI,CAAChV,IAAI,CAACq4B,eAAe,EAAEzyB,OAAO,CAAC,CAAC;IAC9D,OAAOgL,OAAO,CAAC;MAAE3b,GAAG,EAAEuM,GAAG,CAACiT,QAAQ;MAAE3D,SAAS,EAAE+mB,WAAW;MAAE7iB;IAAW,CAAC,CAAC;EAC3E;EAEA,MAAesjB,WAAWA,CAAC7pC,OAAe,EAAEmX,OAAa,EAAuB;IAC9E,OAAO,IAAI,CAAC5F,IAAI,CAACI,aAAa,CAAC3R,OAAO,CAAC,EAAEmX,OAAO,CAAC;EACnD;EAEA,MAAe2yB,aAAaA,CAC1Bz7B,IAA+B,EAC/B46B,GAAa,EACb;IACEhpC,IAAI;IACJkC,OAAO;IACPi7B,SAAS;IACT74B,eAAe;IACf,GAAG4S;EACwC,CAAC,GAAG,CAAC,CAAC,EACvB;IAC5B,MAAM4yB,KAAK,GAAGf,aAAa,CAAC36B,IAAI,EAAE46B,GAAG,EAAE;MACrChpC,IAAI;MACJkC,OAAO;MACPi7B,SAAS;MACT74B;IACF,CAAC,CAAC;IACF,MAAM+M,SAAS,GAAG,MAAM,IAAI,CAACC,IAAI,CAACw4B,KAAK,EAAE5yB,OAAO,CAAC;IACjD,OAAOnI,MAAM,CAACsC,SAAS,EAAExF,QAAQ,CAACiC,SAAS,CAAC;EAC9C;EAEA,MAAei8B,cAAcA,CAC3BC,UAA6B,EAC7B;IAAE7M;EAAkC,CAAC,GAAG,CAAC,CAAC,EACd;IAC5B,IAAIA,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIx8B,aAAa,CAAC,WAAW,EAAE,UAAU,EAAEw8B,SAAS,CAAC;IAClF,MAAM3uB,OAAO,GAAGjE,aAAa,CAAC,CAC5BkH,mBAAmB,EACnB,IAAIrH,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EACnBF,MAAM,CAACG,IAAI,CAAC8yB,SAAS,CAAC,EACtBnuB,MAAM,CAACg7B,UAAU,CAAC,CACnB,CAAC;IACF,MAAM34B,SAAS,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC9C,OAAO,CAAC;IAC1C,OAAOO,MAAM,CAACsC,SAAS,EAAExF,QAAQ,CAACiC,SAAS,CAAC;EAC9C;AACF;;ACxGoE;AACvB;AACD;AACW;AACoC;AAEzB;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASm8B,gBAAgBA,CAC9BrlC,WAAgC,EAChC;EACEskC,OAAO;EACPva,OAAO;EACPlK,QAAQ;EACRylB;AAMF,CAAC,GAAG,CAAC,CAAC,EACE;EACR,MAAM9sB,MAAM,GAAG6E,QAAQ,CAACrd,WAAW,CAAC;EACpC,IAAIwY,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACiT,QAAQ,EAAE;IAC/B,MAAM,IAAIhlB,oBAAoB,CAC5B,+EACF,CAAC;EACH;EAEA,IAAIyK,GAAG,GAAG,EAAE;EACZ,IAAI,KAAK,IAAI4R,MAAM,IAAI8rB,OAAO,KAAK,YAAY,EAAE;IAC/C19B,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAACmF,GAAG,CAAC;EAC3B;EACA,IAAInF,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAAC8T,WAAW,EAAE;IAClCpb,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAACta,OAAO,CAAC;EAC/B;EACA,IAAIsa,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAAC6O,aAAa,EAAE;IACpCnW,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAACqH,QAAQ,CAAC;EAChC;EACA,IAAIrH,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAAC8O,gBAAgB,EAAE;IACvCpW,GAAG,IAAI8E,MAAM,CAACmU,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,CAAC,CAAC;EAC9B;EACA,IAAIrH,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACyW,eAAe,EAAE;IACtC,IAAI2gB,WAAW,KAAK,IAAI,EAAE1+B,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAAC0L,oBAAoB,CAAC;IACpE,IAAIohB,WAAW,KAAK,KAAK,EAAE1+B,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAAC2L,oBAAoB,CAAC;EACvE;EACA,IACE,CAAC3L,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACyT,OAAO,IACzBnJ,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACmO,gBAAgB,IACnC7D,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACkL,cAAc,IACjCZ,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACqW,gBAAgB,KACrC+f,OAAO,KAAK,WAAW,EACvB;IACA19B,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAACrY,MAAM,CAAC;EAC9B;EACA,IAAIqY,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACmO,gBAAgB,EAAEzV,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAAC8J,OAAO,CAAC;EACtE,IACE,CAAC9J,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACmO,gBAAgB,IAClC7D,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACkL,cAAc,IACjCZ,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACoO,UAAU,IAC7B9D,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,KAC7BirB,OAAO,KAAK,YAAY,EACxB;IACA19B,GAAG,IAAI8E,MAAM,CAAC8M,MAAM,CAAC6C,QAAQ,CAAC,GAAG3P,MAAM,CAACqe,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIvR,MAAM,CAACmG,QAAQ,CAAC;EACrE;EACA,IAAInG,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,IAAIb,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACqO,WAAW,EAAE;IACjE3V,GAAG,IAAIy+B,gBAAgB,CACrB/nB,OAAO,CAAC9E,MAAM,CAACtF,EAAE,CAACsK,SAAS,CAAC,EAC5BhF,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACqO,WAAW,GAAG;MAAE+nB,OAAO,EAAE;IAAY,CAAC,GAAG,CAAC,CAC/D,CAAC;EACH;EACA,OAAO19B,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2+B,0BAA0BA,CACxCvlC,WAAgC,EAChCu4B,SAAiB,EACjBjmB,OAAiE,EACzD;EACR,MAAMkG,MAAM,GAAG6E,QAAQ,CAACrd,WAAW,EAAEkO,GAAG,CAACiT,QAAQ,CAAC;EAClD,IAAI3I,MAAM,CAACgF,SAAS,CAAC7b,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,EAAE;IACzC,OAAOgsB,gBAAgB,CAAC/nB,OAAO,CAAC9E,MAAM,CAACgF,SAAS,CAAC,EAAElL,OAAO,CAAC;EAC7D;EAEA,MAAMY,EAAE,GAAGoK,OAAO,CAAC9E,MAAM,CAACgF,SAAS,CAAC;EACpC,MAAM3f,OAAO,GAAGslC,2BAA2B,CAACjwB,EAAE,CAAC;EAC/C,MAAM,CAACsyB,SAAS,EAAEC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC/kC,GAAG,CAAEglC,CAAC,IACpDl5B,MAAM,CAAC63B,eAAe,CAACnxB,EAAE,EAAEqlB,SAAS,EAAEmN,CAAC,CAAC,EAAEltB,MAAM,CAACkJ,UAAU,CAAC,CAAC,CAAC,EAAE7jB,OAAO,CACzE,CAAC;EACD,IAAI,CAAC2nC,SAAS,IAAI,CAACC,YAAY,EAAE,MAAM,IAAI5pC,gBAAgB,CAAC,wBAAwB,CAAC;EACrF,OAAOwpC,gBAAgB,CAAC/nB,OAAO,CAAC9E,MAAM,CAACgF,SAAS,CAAC,EAAE;IACjD,IAAIgoB,SAAS,IAAI;MAAElB,OAAO,EAAE;IAAa,CAAC,CAAC;IAC3C,GAAGhyB;EACL,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeqzB,yBAAyBA,CAC7C3lC,WAAgC,EAChCob,IAAU,EACV;EAAEwqB,OAAO;EAAE,GAAGtzB;AAAwE,CAAC,GAAG,CAAC,CAAC,EAC3E;EACjB,IAAIkG,MAAM,GAAG6E,QAAQ,CAACrd,WAAW,CAAC;EAClC,MAAM6lC,UAAU,GAAGrtB,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACiT,QAAQ;EAC9C,MAAMnf,MAAM,GAAG6jC,UAAU,IAAID,OAAO,KAAK,IAAI,IAAIzZ,WAAW,CAACnsB,WAAW,CAAC;EACzE,IAAIwY,MAAM,CAAC7W,GAAG,KAAKuM,GAAG,CAACiT,QAAQ,EAAE3I,MAAM,GAAGA,MAAM,CAACgF,SAAS;;EAE1D;EACA,IACElL,OAAO,CAACyX,OAAO,IAAI,IAAI,IACvB/nB,MAAM,KAAK,KAAK,IAChB,CAACkM,GAAG,CAACmO,gBAAgB,EAAEnO,GAAG,CAACkL,cAAc,EAAElL,GAAG,CAACoO,UAAU,EAAEpO,GAAG,CAACmL,QAAQ,CAAC,CAAC7e,QAAQ,CAACge,MAAM,CAAC7W,GAAG,CAAC,EAC7F;IACA,MAAM;MAAE43B,QAAQ;MAAEC;IAAO,CAAC,GAAG,MAAMpe,IAAI,CAACmmB,wBAAwB,CAACv/B,MAAM,CAAC;IACxE,MAAM8jC,YAAY,GAAGvM,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIC,MAAM;IACvC,IAAIsM,YAAY,IAAI,IAAI,EAAE;MACxB,MAAM,IAAIpoC,aAAa,CAAC,wDAAwDsE,MAAM,EAAE,CAAC;IAC3F;IACAsQ,OAAO,CAACyX,OAAO,GAAG+b,YAAY,CAAC/b,OAAO;EACxC;EAEA,IAAIzX,OAAO,CAACuN,QAAQ,IAAI,IAAI,IAAI3R,GAAG,CAAC8O,gBAAgB,KAAKxE,MAAM,CAAC7W,GAAG,EAAE;IACnE2Q,OAAO,CAACuN,QAAQ,GAAG,CAAC,MAAMzE,IAAI,CAACwE,iBAAiB,CAACpH,MAAM,CAAC/J,QAAQ,CAAC,EAAEoR,QAAQ,CAACzhB,QAAQ,CAAC,CAAC;EACxF;EAEA,IAAIkU,OAAO,CAACgzB,WAAW,IAAI,IAAI,IAAIp3B,GAAG,CAACyW,eAAe,KAAKnM,MAAM,CAAC7W,GAAG,IAAIikC,OAAO,KAAK,IAAI,EAAE;IACzF,MAAM;MAAEzT;IAAY,CAAC,GAAG,MAAM/W,IAAI,CAACkjB,kBAAkB,CAAC9lB,MAAM,CAACwL,SAAS,CAAC;IACvE1R,OAAO,CAACgzB,WAAW,GAAG9sB,MAAM,CAACyL,MAAM,KAAKkO,WAAW;EACrD;EAEA,OAAO0T,UAAU,GACbN,0BAA0B,CAACvlC,WAAW,EAAE,MAAMob,IAAI,CAACrJ,YAAY,CAAC,CAAC,EAAEO,OAAO,CAAC,GAC3E+yB,gBAAgB,CAACrlC,WAAW,EAAEsS,OAAO,CAAC;AAC5C;;AC9KsD;AACY;AAEe;AACV;AAChB;AACmB;AACV;AAClC;AAE8C;AACrB;AACW;AACF;AAqBhE,MAAMyzB,UAAuB,GAAG,EAAE;AAElC,eAAeC,yBAAyBA,CACtC9yB,EAAc,EACdkI,IAAU,EACV6qB,aAAoB,EACQ;EAC5B,MAAMpoC,OAAO,GAAGslC,2BAA2B,CAAC7lB,OAAO,CAACpK,EAAE,CAAC,CAAC;EACxD,MAAM,CAACgzB,OAAO,EAAE;IAAEtpC;EAAO,CAAC,EAAE;IAAE6b,wBAAwB;IAAEwqB;EAAc,CAAC,CAAC,GAAG,MAAMp+B,OAAO,CAACqnB,GAAG,CAAC,CAC3F9Q,IAAI,CACDrH,kBAAkB,CAAClW,OAAO,CAAC,CAC3BwW,KAAK,CAAE3O,KAAK,IAAK;IAChB,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;IAC/C,OAAO;MAAElH,EAAE,EAAEX,OAAO;MAAEuW,OAAO,EAAE,EAAE;MAAE9H,KAAK,EAAE;IAAE,CAAC;EAC/C,CAAC;EACD;EAAA,CACCyiB,IAAI,CAAE/B,GAAG,KAAM;IAAE,GAAGA,GAAG;IAAExuB,EAAE,EAAEwuB,GAAG,CAACxuB;EAA6B,CAAC,CAAC,CAAC,EACpE4c,IAAI,CAACxI,wBAAwB,CAAC,CAAC;EAAE;EACjCwI,IAAI,CAACvC,WAAW,CAAC,CAAC,CACnB,CAAC;EAEF,OAAO,CACL,MAAMhU,OAAO,CAACqnB,GAAG,CACf6Z,UAAU,CAACrlC,GAAG,CAAC,MAAO6D,CAAC,IACrBA,CAAC,CAAC2O,EAAE,EAAE;IACJkI,IAAI;IACJ8qB,OAAO;IACPtpC,MAAM;IACN6b,wBAAwB;IACxBwqB,aAAa;IACbgD;EACF,CAAC,CACH,CACF,CAAC,EACDE,IAAI,CAAC,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,eAAeC,iBAAiBA,CAC7CpmC,WAA2C,EAC3CqmC,aAAmB,EACS;EAC5B,MAAMzD,QAAQ,GAAGyD,aAAa,CAACzD,QAAQ,CAAC0D,KAAK,CAAC,CAAC;EAC/C1D,QAAQ,CAACG,YAAY,CAAC;IAAE3nC,IAAI,EAAE;EAAgB,CAAC,CAAC;EAChD,MAAMggB,IAAI,GAAG,IAAI8hB,IAAI,CAACmJ,aAAa,CAAC9J,KAAK,EAAE;IACzC+F,aAAa,EAAE,IAAI;IACnBM,QAAQ;IACRD,kBAAkB,EAAE,CAAClT,oCAAoC,CAAC,CAAC;EAC7D,CAAC,CAAC;EACF,OAAOuW,yBAAyB,CAAC3oB,QAAQ,CAACrd,WAAW,CAAC,EAAEob,IAAI,EAAE,EAAE,CAAC;AACnE;AAEA2qB,UAAU,CAAChvB,IAAI,CACb,CAAC7D,EAAE,EAAE;EAAEgzB,OAAO;EAAEjD,aAAa;EAAEgD;AAAc,CAAC,KAAK;EACjD,IAAI/yB,EAAE,CAACvR,GAAG,KAAKuM,GAAG,CAACiT,QAAQ,EAAE,OAAO,EAAE;EACtC,MAAM;IAAE3D,SAAS;IAAEkE;EAAW,CAAC,GAAGxO,EAAE;EACpC,IAAI,CAACsK,SAAS,aAATA,SAAS,cAATA,SAAS,GAAIkE,UAAU,KAAK,IAAI,EAAE,OAAO,EAAE;EAChD,IAAIA,UAAU,CAACzd,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;EACxC,MAAMjG,MAAM,GAAGsH,MAAM,CAACG,IAAI,CACxB,CAACw9B,aAAa,EAAE,IAAIgD,aAAa,CAACzrC,QAAQ,CAAC0T,GAAG,CAACqO,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC5b,IAAI,CAAC,GAAG,CAC5F,CAAC;EACD,MAAM4lC,QAAQ,GAAGn8B,MAAM,CAACkT,OAAO,CAACE,SAAS,CAAC,CAAC;EAC3C,MAAMunB,eAAe,GAAGp/B,aAAa,CAAC,CAAC3H,MAAM,EAAEuoC,QAAQ,CAAC,CAAC;EACzD,MAAMC,mBAAmB,GAAG7gC,aAAa,CAAC,CAAC3H,MAAM,EAAEkO,IAAI,CAACq6B,QAAQ,CAAC,CAAC,CAAC;EACnE,IACE/5B,MAAM,CAACu4B,eAAe,EAAErjB,UAAU,CAAC,CAAC,CAAC,EAAEwkB,OAAO,CAAC1nC,EAAE,CAAC,IAClDgO,MAAM,CAACg6B,mBAAmB,EAAE9kB,UAAU,CAAC,CAAC,CAAC,EAAEwkB,OAAO,CAAC1nC,EAAE,CAAC,EAEtD,OAAO,EAAE;EACX,OAAO,CACL;IACErD,OAAO,EACL,uEAAuE,GACvE,wEAAwE;IAC1E0G,GAAG,EAAE,kBAAkB;IACvB4kC,WAAW,EAAE,CAAC,WAAW,EAAE,YAAY;EACzC,CAAC,CACF;AACH,CAAC,EACD,OAAOvzB,EAAE,EAAE;EAAEkI,IAAI;EAAE6qB;AAAc,CAAC,KAAK;EACrC,IAAIS,QAAQ;EACZ,IAAI,WAAW,IAAIxzB,EAAE,EAAEwzB,QAAQ,GAAGxzB,EAAE,CAACsK,SAAS;EAC9C,IAAI,IAAI,IAAItK,EAAE,EAAEwzB,QAAQ,GAAGxzB,EAAE,CAACA,EAAE;EAChC,IAAIwzB,QAAQ,IAAI,IAAI,EAAE,OAAO,EAAE;EAC/B,OAAOV,yBAAyB,CAACU,QAAQ,EAAEtrB,IAAI,EAAE,CAAC,GAAG6qB,aAAa,EAAE/yB,EAAE,CAACvR,GAAG,CAAC,CAAC;AAC9E,CAAC,EACD,CAACuR,EAAE,EAAE;EAAEtW;AAAO,CAAC,KAAK;EAClB,IAAI,EAAE,KAAK,IAAIsW,EAAE,CAAC,EAAE,OAAO,EAAE;EAC7B,IAAIA,EAAE,CAACG,GAAG,KAAK,CAAC,IAAIH,EAAE,CAACG,GAAG,GAAGzW,MAAM,EAAE,OAAO,EAAE;EAC9C,OAAO,CACL;IACEzB,OAAO,EAAE,OAAO+X,EAAE,CAACG,GAAG,0CAA0CzW,MAAM,EAAE;IACxEiF,GAAG,EAAE,YAAY;IACjB4kC,WAAW,EAAE,CAAC,KAAK;EACrB,CAAC,CACF;AACH,CAAC,EACD,OAAOvzB,EAAE,EAAE;EAAEgzB,OAAO;EAAED,aAAa;EAAE7qB;AAAK,CAAC,KAAK;EAC9C,IAAI6qB,aAAa,CAAChiC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;EACzC,MAAM0iC,IAAI,GAAG,MAAMhB,yBAAyB,CAACroB,OAAO,CAACpK,EAAE,CAAC,EAAEkI,IAAI,CAAC,CAAC/G,KAAK,CAAC,MAAM,EAAE,CAAC;EAC/E,IAAIsyB,IAAI,IAAIT,OAAO,CAAC9xB,OAAO,EAAE,OAAO,EAAE;EACtC,OAAO,CACL;IACEjZ,OAAO,EAAE,mBAAmB+qC,OAAO,CAAC9xB,OAAO,wDAAwDuyB,IAAI,EAAE;IACzG9kC,GAAG,EAAE,qBAAqB;IAC1B4kC,WAAW,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;EAClE,CAAC,CACF;AACH,CAAC,EACD,OAAOvzB,EAAE,EAAE;EAAEkI;AAAK,CAAC,KAAK;EACtB,IAAIlI,EAAE,CAACvR,GAAG,KAAKuM,GAAG,CAACyT,OAAO,IAAIzW,cAAc,CAACgI,EAAE,CAAC0O,WAAW,EAAE3a,QAAQ,CAACoC,IAAI,CAAC,EAAE,OAAO,EAAE;EACtF,MAAMu9B,SAAS,GAAG,MAAMxrB,IAAI,CAACrH,kBAAkB,CAACb,EAAE,CAAC0O,WAAW,CAAC,CAACvN,KAAK,CAAE3O,KAAK,IAAK;IAC/E,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;IAC/C,OAAO,IAAI;EACb,CAAC,CAAC;EACF,IAAIkhC,SAAS,IAAI,IAAI,IAAIA,SAAS,CAAClV,OAAO,KAAK,IAAI,EAAE,OAAO,EAAE;EAC9D,OAAO,CACL;IACEv2B,OAAO,EAAE,kCAAkC;IAC3C0G,GAAG,EAAE,4BAA4B;IACjC4kC,WAAW,EAAE,CAAC,aAAa;EAC7B,CAAC,CACF;AACH,CAAC,EACD,CAACvzB,EAAE,EAAE;EAAEgzB;AAAQ,CAAC,KAAK;EACnB,IAAI/qC,OAAO;EACX,IAAI+X,EAAE,CAACvR,GAAG,KAAKuM,GAAG,CAACiT,QAAQ,IAAI+kB,OAAO,CAAC/sB,IAAI,KAAK,aAAa,IAAIjG,EAAE,CAACwO,UAAU,CAACzd,MAAM,KAAK,CAAC,EAAE;IAC3F9I,OAAO,GAAG,wEAAwE;EACpF;EACA,IAAI+X,EAAE,CAACvR,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,IAAI6sB,OAAO,CAAC/sB,IAAI,KAAK,OAAO,EAAE;IACvDhe,OAAO,GAAG,kDAAkD;EAC9D;EACA,IAAIA,OAAO,IAAI,IAAI,EAAE,OAAO,EAAE;EAC9B,OAAO,CAAC;IAAEA,OAAO;IAAE0G,GAAG,EAAE,oBAAoB;IAAE4kC,WAAW,EAAE,CAAC,KAAK;EAAE,CAAC,CAAC;AACvE,CAAC;AACD;AACA;AACA,CAACvzB,EAAE,EAAE;EAAEuF;AAAyB,CAAC,KAAK;EAAA,IAAAvH,IAAA,EAAAC,KAAA;EACpC,MAAM01B,UAAU,GAAG34B,GAAG,CAAC2O,gBAAgB,KAAK3J,EAAE,CAACvR,GAAG;EAClD,MAAMmlC,cAAc,GAAG54B,GAAG,CAACmO,gBAAgB,KAAKnJ,EAAE,CAACvR,GAAG,IAAIuM,GAAG,CAACoO,UAAU,KAAKpJ,EAAE,CAACvR,GAAG;EACnF,MAAMolC,YAAY,GAAG74B,GAAG,CAACkL,cAAc,KAAKlG,EAAE,CAACvR,GAAG,IAAIuM,GAAG,CAACmL,QAAQ,KAAKnG,EAAE,CAACvR,GAAG;EAC7E,MAAM8H,IAAI,IAAAyH,IAAA,IAAAC,KAAA,GACP01B,UAAU,GAAG,aAAa,GAAG,IAAI,cAAA11B,KAAA,cAAAA,KAAA,GACjC21B,cAAc,GAAG,iBAAiB,GAAG,IAAI,cAAA51B,IAAA,cAAAA,IAAA,GACzC61B,YAAY,GAAG,eAAe,GAAG,IAAK;EACzC,IAAIt9B,IAAI,IAAI,IAAI,EAAE,OAAO,EAAE;EAC3B,MAAM4O,QAAQ,GAAGV,eAAe,CAACc,wBAAwB,CAAC,CAAChP,IAAI,CAG9D;EAED,IAAIgX,SAAyC;EAC7C,IAAI,YAAY,IAAIvN,EAAE,EAAEuN,SAAS,GAAG;IAAE1I,UAAU,EAAE7E,EAAE,CAAC6E;EAAW,CAAC;EACjE,IAAI,WAAW,IAAI7E,EAAE,EAAEuN,SAAS,GAAGvN,EAAE,CAACuN,SAAS;EAC/C,IAAIA,SAAS,IAAI,IAAI,EAAE,MAAM,IAAI9iB,iBAAiB,CAAC,CAAC;EACpD,IACE,CAAC0a,QAAQ,CAACN,UAAU,CAACvd,QAAQ,CAACimB,SAAS,CAAC1I,UAAU,CAAC,IAClD+uB,cAAc,IAAI,CAACzuB,QAAQ,CAACR,SAAS,CAACrd,QAAQ,CAACimB,SAAS,CAAC5I,SAAS,CAAE,EACrE;IACA,OAAO,CACL;MACE1c,OAAO,EAAE,kBAAkBk0B,IAAI,CAACC,SAAS,CAAC7O,SAAS,CAAC,4BAA4B4O,IAAI,CAACC,SAAS,CAACjX,QAAQ,CAAC,EAAE;MAC1GxW,GAAG,EAAE,yBAAyB;MAC9B4kC,WAAW,EAAE,CAAC,WAAW,EAAE,YAAY;IACzC,CAAC,CACF;EACH;EACA,OAAO,EAAE;AACX,CAAC,EACD,OAAOvzB,EAAE,EAAE;EAAEkI;AAAK,CAAC,KAAK;EACtB,IAAIlN,GAAG,CAACkL,cAAc,KAAKlG,EAAE,CAACvR,GAAG,EAAE,OAAO,EAAE;EAC5C;EACA,IAAIuR,EAAE,CAACgE,UAAU,CAAC/C,UAAU,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE;EAC9C,IAAI;IACF,MAAM;MAAEyV;IAAO,CAAC,GAAG,MAAMxO,IAAI,CAAChE,WAAW,CAAClE,EAAE,CAACgE,UAAU,CAAC;IACxD,IAAI0S,MAAM,EAAE,OAAO,EAAE;IACrB,OAAO,CACL;MACEzuB,OAAO,EAAE,YAAY+X,EAAE,CAACgE,UAAU,gBAAgB;MAClDrV,GAAG,EAAE,mBAAmB;MACxB4kC,WAAW,EAAE,CAAC,YAAY;IAC5B,CAAC,CACF;EACH,CAAC,CAAC,OAAO/gC,KAAK,EAAE;IACd,IAAI,EAAEA,KAAK,YAAYhB,6BAAS,CAAC,IAAIgB,KAAK,CAAC0d,QAAQ,EAAEgL,UAAU,IAAI,IAAI,EAAE,MAAM1oB,KAAK;IACpF,OAAO,CACL;MACEvK,OAAO,EAAEk0B,IAAI,CAAC2X,KAAK,CAACthC,KAAK,CAAC0d,QAAQ,CAACgL,UAAU,CAAC,CAAC9X,MAAM;MAAE;MACvDzU,GAAG,EAAE,kBAAkB;MACvB4kC,WAAW,EAAE,CAAC,YAAY;IAC5B,CAAC,CACF;EACH;AACF,CACF,CAAC;;AC7OsE;AACxB;AACM;AAKD;AACA;;AAEpD;AACA;AACA;AACO,MAAMQ,cAAc,SAASprC,gBAAgB,CAAC;EAKnDX,WAAWA,CAACC,OAAe,EAAE+rC,UAA6B,EAAElnC,WAAgC,EAAE;IAC5F,KAAK,CAAC7E,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,gBAAgB;IAC5B,IAAI,CAAC8rC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAClnC,WAAW,GAAGA,WAAW;EAChC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemnC,eAAeA,CACnCC,UAA+B,EAC/B;EACE11B,MAAM;EACNhT,SAAS;EACT8N,MAAM,GAAG,IAAI;EACb66B,SAAS,GAAG,IAAI;EAChB3zB,OAAO;EACP4wB,OAAO;EACP,GAAGhyB;AACmB,CAAC,EACW;EACpC,MAAMY,EAAE,GAAG,MAAMxU,SAAS,CAAComC,eAAe,CAACsC,UAAU,EAAE;IACrD,GAAG90B,OAAO;IACVZ,MAAM;IACN4yB,OAAO;IACP/L,SAAS,EAAE,MAAM7mB,MAAM,CAACK,YAAY,CAAC;EACvC,CAAC,CAAC;EAEF,IAAIuyB,OAAO,KAAK,IAAI,EAAE,OAAO;IAAEp4B,IAAI,EAAEigB,WAAW,CAACjZ,EAAE,CAAC;IAAEkZ,KAAK,EAAElZ;EAAG,CAAC;EAEjE,IAAI1G,MAAM,EAAE;IACV,MAAM06B,UAAU,GAAG,MAAMd,iBAAiB,CAAClzB,EAAE,EAAExB,MAAM,CAAC;IACtD,IAAIw1B,UAAU,CAACjjC,MAAM,GAAG,CAAC,EAAE;MACzB,MAAM9I,OAAO,GAAG,oCAAoC+rC,UAAU,CAC3DxmC,GAAG,CAAE6D,CAAsB,IAAKA,CAAC,CAACpJ,OAAO,CAAC,CAC1CwF,IAAI,CAAC,IAAI,CAAC,EAAE;MACf,MAAM,IAAIsmC,cAAc,CAAC9rC,OAAO,EAAE+rC,UAAU,EAAEh0B,EAAE,CAAC;IACnD;EACF;EAEA,IAAI;IACF,IAAIo0B,OAAO;IACX,IAAI;MACFA,OAAO,GAAG5oC,SAAS,IAAI,IAAI,GAAG,MAAMA,SAAS,CAACb,OAAO,EAAE,GAAG,IAAI;IAChE,CAAC,CAAC,OAAO6H,KAAK,EAAE;MACd4hC,OAAO,GAAG,IAAI;IAChB;IACA,MAAM;MAAEtlC;IAAO,CAAC,GAAG,MAAM0P,MAAM,CAAC0vB,eAAe,CAC7C;MAAEluB;IAAG,CAAC,EACN;MACEgd,cAAc,EAAE;QACdC,aAAa,EAAE;UACb;UACA,cAAc,EAAE,KAAK;UACrB,IAAImX,OAAO,IAAI,IAAI,GAAG;YAAEA;UAAQ,CAAC,GAAG,CAAC,CAAC;QACxC;MACF;IACF,CACF,CAAC;IAED,IAAID,SAAS,EAAE;MACb,MAAME,UAAU,GAAG,MAAMz0B,IAAI,CAAC9Q,MAAM,EAAE;QAAE0P,MAAM;QAAE,GAAGY;MAAQ,CAAC,CAAC;MAC7D,MAAMk1B,MAAM,GAAG;QACb,GAAGD,UAAU;QACbr7B,IAAI,EAAEq7B,UAAU,CAACr7B,IAAsB;QACvCkgB,KAAK,EAAElZ;MACT,CAAC;MACD;MACA,IAAIQ,OAAO,IAAI,IAAI,IAAI,CAACA,OAAO,GAAG,CAAC,EAAE;QACnC,MAAMwF,CAAC,GAAG,OAAOxF,OAAO,KAAK,SAAS,GAAGvH,SAAS,GAAGuH,OAAO;QAC5D,OAAO;UACL,GAAG8zB,MAAM;UACTC,kBAAkB,EAAE,MAAMh0B,gBAAgB,CAACzR,MAAM,EAAE;YAAE0P,MAAM;YAAEgC,OAAO,EAAEwF,CAAC;YAAE,GAAG5G;UAAQ,CAAC;QACvF,CAAC;MACH;MACA,OAAOk1B,MAAM;IACf;IACA,OAAO;MAAEt7B,IAAI,EAAElK,MAAM;MAAEoqB,KAAK,EAAElZ;IAAG,CAAC;EACpC,CAAC,CAAC,OAAOxN,KAAK,EAAE;IACdW,WAAW,CAACX,KAAK,CAAC;IAClB,MAAMR,MAAM,CAACuR,MAAM,CAAC/Q,KAAK,EAAE;MACzB0mB,KAAK,EAAElZ,EAAE;MACTw0B,QAAQ,EAAE,MAAAA,CAAA,KAAYtB,iBAAiB,CAAClzB,EAAE,EAAExB,MAAM;IACpD,CAAC,CAAC;EACJ;AACF;;AC7GwC;AAEyB;AAC5B;AAC8B;;AAEnE;AACA,MAAMi2B,WAAW,GAAIn+B,IAAkC,IACrDlE,MAAM,CAACG,IAAI,CAAC+D,IAAI,CAAC,CAACpL,QAAQ,CAAC,QAAQ,CAAC,CAACiwB,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAClQ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAEnG,MAAMypB,aAAa,GAAIp+B,IAAY,IACjClE,MAAM,CAACG,IAAI,CAAC+D,IAAI,CAAC6kB,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC;AAEvE,MAAMwZ,iBAAiB,GAAIr+B,IAAS;EAAA,IAAAi6B,aAAA;EAAA,OAAakE,WAAW,EAAAlE,aAAA,GAACF,+BAAY,CAAC/5B,IAAI,CAAC,cAAAi6B,aAAA,cAAAA,aAAA,GAAI,EAAE,CAAC;AAAA;AAEtF,MAAMqE,MAAM,GAAG,sCAAsC,CAAC,CAAC;;AAEvD;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,OAAOA,CAACC,eAAoB,EAAE9B,OAAoB,EAAgB;EACtF,MAAMt8B,OAAO,GAAG;IAAE,GAAGo+B;EAAgB,CAAC;EACtC,IAAI,EAAE,SAAS,IAAIp+B,OAAO,CAAC,EAAE;IAC3BA,OAAO,CAACq+B,OAAO,GAAG;MAChBC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,SAAS;MACdC,CAAC,EAAET,WAAW,CAACv9B,MAAM,CAAC87B,OAAO,CAACroC,OAAO,CAAC;IACxC,CAAC;EACH;EACA,IAAI+L,OAAO,CAACq+B,OAAO,KAAK97B,SAAS,EAAE,OAAOvC,OAAO,CAACq+B,OAAO;EACzD,MAAMzY,IAAI,GAAG,GAAGsY,MAAM,IAAID,iBAAiB,CAACj+B,OAAO,CAAC,EAAW;EAC/D,MAAM6C,SAAS,GAAG,MAAMy5B,OAAO,CAACx5B,IAAI,CAAC8iB,IAAI,CAAC;EAC1C,OAAO,GAAGA,IAAI,IAAImY,WAAW,CAACl7B,SAAS,CAAC,EAAE;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS47B,SAASA,CACvBC,GAAQ,EACRzqC,OAAgC,EAUhC;EAAA,IAAA0qC,gBAAA;EACA,MAAMzb,UAAU,GAAGwb,GAAG,CAACz9B,KAAK,CAAC,GAAG,CAAC;EACjC,IAAIiiB,UAAU,CAAC7oB,MAAM,KAAK,CAAC,EACzB,MAAM,IAAIlI,aAAa,CAAC,sBAAsB,EAAE,CAAC,EAAE+wB,UAAU,CAAC7oB,MAAM,CAAC;EACvE,MAAM,CAACoN,CAAC,EAAEm3B,cAAc,EAAE/7B,SAAS,CAAC,GAAGqgB,UAAU;EACjD,IAAIzb,CAAC,KAAKy2B,MAAM,EAAE,MAAM,IAAI/rC,aAAa,CAAC,YAAY,EAAE+rC,MAAM,EAAEz2B,CAAC,CAAC;EAClE,MAAMzH,OAAO,GAAGylB,IAAI,CAAC2X,KAAK,CAACY,aAAa,CAACY,cAAc,CAAC,CAACpqC,QAAQ,CAAC,CAAC,CAAC;EACpE,MAAMqqC,GAAG,IAAAF,gBAAA,GAAG3+B,OAAO,CAACq+B,OAAO,cAAAM,gBAAA,cAAAA,gBAAA,GAAI,CAAC,CAAC;EACjC,MAAMG,MAAM,GACVD,GAAG,CAACL,CAAC,IAAI,IAAI,IAAIK,GAAG,CAACP,GAAG,KAAK,KAAK,IAAIO,GAAG,CAACN,GAAG,KAAK,SAAS,GACvDtqC,OAAO,GACPsM,MAAM,CAACy9B,aAAa,CAACa,GAAG,CAACL,CAAC,CAAC,EAAEnhC,QAAQ,CAAC+B,cAAc,CAAC;EAC3D,IAAInL,OAAO,IAAI,IAAI,IAAI6qC,MAAM,KAAK7qC,OAAO,EAAE;IACzC,MAAM,IAAI9B,aAAa,CAAC,SAAS,EAAE,GAAG2sC,MAAM,cAAc,EAAE7qC,OAAO,CAAC;EACtE;EACA,IACE6qC,MAAM,IAAI,IAAI,IACd,CAACl8B,MAAM,CAAClH,MAAM,CAACG,IAAI,CAAC,GAAG4L,CAAC,IAAIm3B,cAAc,EAAE,CAAC,EAAEZ,aAAa,CAACn7B,SAAS,CAAC,EAAEi8B,MAAM,CAAC,EAChF;IACA,MAAM,IAAIjnC,qBAAqB,CAAC,wBAAwBinC,MAAM,EAAE,CAAC;EACnE;EACA,OAAO;IAAE9+B,OAAO;IAAE8+B;EAAO,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,KAAKA,CAACC,QAAgB,EAAmB;EACvD,IAAI;IACFP,SAAS,CAACO,QAAe,CAAC;IAC1B,OAAO,IAAI;EACb,CAAC,CAAC,OAAOljC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmjC,SAASA,CAACD,QAAgB,EAA2B;EACnEP,SAAS,CAACO,QAAe,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,SAASA,CAACR,GAAQ,EAAEzqC,OAAgC,EAAW;EAC7E,IAAI;IACF,MAAM;MAAE6qC;IAAO,CAAC,GAAGL,SAAS,CAACC,GAAG,EAAEzqC,OAAO,CAAC;IAC1C,OAAO6qC,MAAM,IAAI,IAAI;EACvB,CAAC,CAAC,OAAOhjC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AC3HgD;AACD;AACkB;AACa;;AAE9E;AACA;AACA;AACO,IAAKqjC,aAAa,0BAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAuBzB,MAAMC,kBAAkB,GAAGnrC,eAAO,CAACoJ,QAAQ,CAAC6B,aAAa,CAAC;AAC1D;AACA;AACA;AACA,MAAMmgC,YAAY,GAAG;EACnB1wB,SAASA,CAACzV,KAA4B,EAAU;IAC9C,OAAOkmC,kBAAkB,CAACzwB,SAAS,CAACpO,MAAM,CAACC,MAAM,CAACtH,KAAK,CAAC,EAAEmE,QAAQ,CAAC6B,aAAa,CAAC,CAAC;EACpF,CAAC;EACDgQ,WAAWA,CAAChW,KAAa,EAAyB;IAChD,OAAOqH,MAAM,CAACC,MAAM,CAAC4+B,kBAAkB,CAAClwB,WAAW,CAAChW,KAAK,CAAC,CAAC,EAAEmE,QAAQ,CAAC8B,aAAa,CAAC;EACtF;AACF,CAAU;;AAEV;AACA;AACA;AACA,MAAMrJ,eAAe,GAAG7B,eAAO,CAACoJ,QAAQ,CAAC2B,eAAe,CAAC;;AAEzD;AACA;AACA;AACO,MAAMyc,cAAO,GAAG,CACrB;EACE1jB,GAAG,EAAEof,sBAAc,CAACgoB,aAAa,CAACG,YAAY,CAAC;EAC/C5rC,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEpY,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAChDtJ;AACF,CAAC,EACD;EACEiC,GAAG,EAAEof,sBAAc,CAACgoB,aAAa,CAACI,QAAQ,CAAC;EAC3C7rC,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEpY,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAChD;AACJ;AACA;EACI6X,MAAM;EACNnhB;AACF,CAAC,EACD;EACEiC,GAAG,EAAEof,sBAAc,CAACgoB,aAAa,CAACK,YAAY,CAAC;EAC/C9rC,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEpY,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAChDtJ;AACF,CAAC,EACD;EACEiC,GAAG,EAAEof,sBAAc,CAACgoB,aAAa,CAACzf,MAAM,CAAC;EACzChsB,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEpY,eAAO,CAACoJ,QAAQ,CAAC+B,cAAc,CAAC;EAChDtJ;AACF,CAAC,EACD;EACEiC,GAAG,EAAEof,sBAAc,CAACgoB,aAAa,CAAChhC,cAAc,CAAC;EACjDzK,OAAO,EAAEyjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCoC,OAAO,EAAE8lB,YAAY;EACrBvpC;AACF,CAAC,CACO;;ACxFoD;AACN;AACH;AAGrD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2pC,cAAcA,CAAC7wB,MAAiB,EAAqB;EACnE,OAAOkN,UAAU,CAACL,cAAO,EAAE0jB,aAAa,EAAEvwB,MAAM,EAAE,CAAC,CAAC,EAAEvR,QAAQ,CAACmB,SAAS,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkhC,gBAAgBA,CAC9B5oB,OAA0B,EAC1BoF,WAAe,EACW;EAC1B,OAAOF,YAAY,CAACP,cAAO,EAAE0jB,aAAa,EAAEroB,OAAO,EAAEoF,WAAW,EAAE,CAAC,CAAC,CAAC;AACvE;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAG4D;AACY;AACd;AACH;AACR;AACV;AAC2C;AAEX;AAAA,IAAAyjB,KAAA,oBAAAp3B,OAAA;AAmCrE;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM9I,IAAI,CAAC;EAGxB;AACF;AACA;AACA;AACA;AACA;EACEnO,WAAWA,CACO4H,KAAe,EACxBwP,OAON,EACD;IAlBF4U,8BAAA,OAAAqiB,KAAK;IAAU,KASGzmC,KAAe,GAAfA,KAAe;IAAA,KACxBwP,OAON,GAPMA,OAON;IAED,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMk3B,MAAMA,CAACl3B,OAA0B,GAAG,CAAC,CAAC,EAAsC;IAChF,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMY,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAACkU,YAAY;MACrBvB,MAAM,EAAE,IAAI,CAAC/d,KAAK;MAClBgf,SAAS,EAAE2nB,GAAG,CAAC/qC,SAAS,CAACb;IAC3B,CAAC,CAAC;IACF,OAAOspC,eAAe,CAACj0B,EAAE,EAAEu2B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMliC,MAAMA,CACVmQ,QAAqB,EACrBpF,OAA0B,GAAG,CAAC,CAAC,EACK;IACpC,MAAM;MAAEo3B,cAAc;MAAE,GAAGD;IAAI,CAAC,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAClE,MAAMq3B,WAAW,GAAG;MAClB,IAAID,cAAc,KAAK,IAAI,IACzBxkC,MAAM,CAACC,WAAW,CAChB,CAAC,MAAMkS,OAAO,CAAC,IAAI,CAACvU,KAAK,EAAE2mC,GAAG,CAAC,EAAE/xB,QAAQ,CAAChX,GAAG,CAAC,CAAC;QAAEmB,GAAG;QAAErD;MAAG,CAAC,KAAK,CAACqD,GAAG,EAAErD,EAAE,CAAC,CAC1E,CAAC,CAAC;MACJ,GAAGkZ;IACL,CAAC;IAED,MAAMkyB,cAAc,GAAG1kC,MAAM,CAAC6V,MAAM,CAAC4uB,WAAW,CAAC,CAACE,IAAI,CAAEtlC,CAAC,IACvD2G,cAAc,CAAC3G,CAAC,EAAE0C,QAAQ,CAACmB,SAAS,CACtC,CAAC;IAED,MAAM8K,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAACgU,YAAY;MACrB5kB,OAAO,EAAEssC,cAAc,GAAG,CAAC,GAAG,CAAC;MAC/B/oB,MAAM,EAAE,IAAI,CAAC/d,KAAK;MAClBgf,SAAS,EAAE2nB,GAAG,CAAC/qC,SAAS,CAACb,OAAO;MAChC6Z,QAAQ,EAAExS,MAAM,CAACE,OAAO,CAACukC,WAAW,CAAC,CAACjpC,GAAG,CACvC,CAAC,CAACmB,GAAG,EAAErD,EAAE,CAA8C,MAAM;QAAEqD,GAAG;QAAErD;MAAG,CAAC,CAC1E;IACF,CAAC,CAAC;IACF,OAAO2oC,eAAe,CAACj0B,EAAE,EAAEu2B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMK,QAAQA,CACZjsC,OAA+B,EAC/ByU,OAA4B,GAAG,CAAC,CAAC,EACG;IACpC,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMY,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAACiU,cAAc;MACvBtB,MAAM,EAAE,IAAI,CAAC/d,KAAK;MAClBgf,SAAS,EAAE2nB,GAAG,CAAC/qC,SAAS,CAACb,OAAO;MAChC+jB,WAAW,EAAE/jB;IACf,CAAC,CAAC;IACF,OAAOspC,eAAe,CAACj0B,EAAE,EAAEu2B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMM,QAAQA,CAACz3B,OAA0B,GAAG,CAAC,CAAC,EAK5C;IAAA,IAAA03B,oBAAA;IACA,MAAMt4B,MAAM,IAAAs4B,oBAAA,GAAG,IAAI,CAAC13B,OAAO,CAACZ,MAAM,cAAAs4B,oBAAA,cAAAA,oBAAA,GAAI13B,OAAO,CAACZ,MAAM;IACpD,MAAMu4B,SAAS,GAAG,MAAMv4B,MAAM,CAAC4F,kBAAkB,CAAC,IAAI,CAACxU,KAAK,CAAC;IAC7D,OAAO;MACL,GAAGmnC,SAAS;MACZzrC,EAAE,EAAEyrC,SAAS,CAACzrC,EAAkB;MAChC6N,KAAK,EAAE49B,SAAS,CAAC59B;IACnB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM69B,SAASA,CACb3oB,OAAgB,EAChBjP,OAA0E,GAAG,CAAC,CAAC,EACnD;IAC5B,OAAO,IAAI,CAAC/K,MAAM,CAAC,CAAC,CAAC,EAAE;MAAE,GAAG+K,OAAO;MAAEiP,OAAO;MAAEmoB,cAAc,EAAE;IAAK,CAAC,CAAC;EACvE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMS,KAAKA,CAAC73B,OAAyB,GAAG,CAAC,CAAC,EAAsC;IAC9E,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMY,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC8T,WAAW;MACpBF,SAAS,EAAE2nB,GAAG,CAAC/qC,SAAS,CAACb,OAAO;MAChCokB,QAAQ,EAAE8E,yBAAA,CAAKwiB,KAAK,EAAV,IAAS,CAAC;MACpBnuC,IAAI,EAAE,IAAI,CAAC0H;IACb,CAAC,CAAC;IACF,OAAOqkC,eAAe,CAACj0B,EAAE,EAAEu2B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMW,QAAQA,CAAC93B,OAA4B,GAAG,CAAC,CAAC,EAAsC;IACpF,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMvC,IAAI,GAAGzE,OAAO,CAAC,CAAC;IACtB,MAAM4H,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC2T,cAAc;MACvBC,SAAS,EAAE2nB,GAAG,CAAC/qC,SAAS,CAACb,OAAO;MAChCkkB,YAAY,EAAEjS,cAAc,CAAC,IAAI,CAAChN,KAAK,EAAEiN,IAAI;IAC/C,CAAC,CAAC;IACF,MAAMU,MAAM,GAAG,MAAM02B,eAAe,CAACj0B,EAAE,EAAEu2B,GAAG,CAAC;IAC7CtiB,yBAAA,CAAKoiB,KAAK,EAAV,IAAI,EAASx5B,IAAJ,CAAC;IACV,OAAOU,MAAM;EACf;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM45B,GAAGA,CACPnsC,OAAoC,EACpCoU,OAA0C,GAAG,CAAC,CAAC,EACX;IACpC,IAAI,CAAChB,aAAa,CAAC,IAAI,CAACxO,KAAK,CAAC,EAAE;MAC9B,MAAM,IAAIrF,UAAU,CAAC,+CAA+C,CAAC;IACvE;IACA,MAAMgsC,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMY,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC8T,WAAW;MACpBF,SAAS,EAAE2nB,GAAG,CAAC/qC,SAAS,CAACb,OAAO;MAChCokB,QAAQ,EAAE,CAAC;MACX7mB,IAAI,EAAE,IAAI,CAAC0H,KAAK;MAChB5E;IACF,CAAC,CAAC;IACF,OAAOipC,eAAe,CAACj0B,EAAE,EAAEu2B,GAAG,CAAC;EACjC;AACF;;;;;;;;;ACjSA;AACA;AACA;AACA;AACA;AACA;;AAE+D;AACa;AAO5C;AACsB;AAoB1B;AAC0B;AAO4C;AACjB;AAEZ;AACC;AAAA,IAAAgB,eAAA,oBAAA7jB,OAAA;AAAA,IAAA8jB,YAAA,oBAAAv4B,OAAA;AA2EtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM2W,QAAQ,CAAgC;EAC5C;AACF;AACA;AACA;EACE,MAAM6hB,QAAQA,CAAA,EAAuC;IACnD,IAAI,IAAI,CAACC,QAAQ,CAAC7W,QAAQ,IAAI,IAAI,EAAE,OAAO,IAAI,CAAC6W,QAAQ,CAAC7W,QAAQ;IACjE,IAAI,IAAI,CAAC6W,QAAQ,CAACC,UAAU,IAAI,IAAI,EAClC,MAAM,IAAI1uC,oBAAoB,CAAC,gCAAgC,CAAC;IAClE,IAAI,IAAI,CAACyuC,QAAQ,CAACE,UAAU,IAAI,IAAI,EAAE;MACpC,MAAM;QAAE/W;MAAS,CAAC,GAAG,MAAM,IAAI,CAAC6W,QAAQ,CAACC,UAAU,CAACE,mBAAmB,CACrE,IAAI,CAACH,QAAQ,CAACE,UAAU,EACxB,IAAI,CAACF,QAAQ,CAACI,UAChB,CAAC;MACD,IAAI,CAACJ,QAAQ,CAAC7W,QAAQ,GAAGA,QAAQ;IACnC;IACA,IAAI,IAAI,CAAC6W,QAAQ,CAACK,cAAc,IAAI,IAAI,EAAE;MACxC,MAAM;QAAElX;MAAS,CAAC,GAAG,MAAM,IAAI,CAAC6W,QAAQ,CAACC,UAAU,CAACK,OAAO,CAAC,IAAI,CAACN,QAAQ,CAACK,cAAc,CAAC;MACzF,IAAI,CAACL,QAAQ,CAAC7W,QAAQ,GAAGA,QAAQ;IACnC;IACA,IAAI,IAAI,CAAC6W,QAAQ,CAAC7W,QAAQ,IAAI,IAAI,EAAE;MAClC,MAAM,IAAI53B,oBAAoB,CAAC,qDAAqD,CAAC;IACvF;IACA,OAAO,IAAI,CAACyuC,QAAQ,CAAC7W,QAAQ;EAC/B;EAkDA,MAAMoX,sBAAsBA,CAC1Bj/B,IAAoB,EACpBk/B,MAAU,EACV94B,OAAqD,EAC2B;IAChF,MAAM;MAAEinB;IAAS,CAAC,GAAG,MAAM,IAAI,CAACqR,QAAQ,CAACl5B,MAAM,CAAC6vB,wBAAwB,CAACr1B,IAAI,CAAC;IAC9E,IAAIqtB,QAAQ,IAAI,IAAI,EAAE;MACpB,MAAM,IAAI79B,aAAa,CAAC,6CAA6CwQ,IAAI,EAAE,CAAC;IAC9E;IACA,MAAMm/B,aAAa,GAAG9R,QAA8B;IACpD,OAAO;MACL,GAAG1R,yBAAA,CAAA4iB,eAAA,MAAI,EAACa,cAAa,CAAC,CAAAjtB,IAAA,CAAnB,IAAI,EAAgBgtB,aAAa,EAAED,MAAM,EAAEj/B,SAAS,EAAEmG,OAAO,CAAC;MACjE7B,MAAM,EAAE46B;IACV,CAAC;EACH;EAEA,MAAME,YAAYA,CAChBnwC,IAAQ,EACRod,MAA+B,EAC/BlG,OAAgE,GAAG,CAAC,CAAC,EACpD;IACjB,MAAM;MAAE7B;IAAO,CAAC,GAAG,MAAM,IAAI,CAAC+6B,KAAK,CAACpwC,IAAI,EAAEod,MAAM,EAAE;MAAE,GAAGlG,OAAO;MAAEm5B,UAAU,EAAE;IAAK,CAAC,CAAC;IACnF,IAAIh7B,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI9S,iBAAiB,CAAC,CAAC;IACjD,MAAM;MAAEosB;IAAQ,CAAC,GAAGtZ,MAAM;IAC1B;IACA,OAAO7M,IAAI,CAACqO,KAAK,CAAC8X,OAAO,GAAG,IAAI,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM2hB,OAAOA,CACXlzB,MAAmC,EACnClG,OACgF,EAQhF;IAAA,IAAAq5B,aAAA;IACA,MAAM;MAAEF,UAAU;MAAE,GAAGhC;IAAI,CAAC,GAAG;MAAE,GAAG,IAAI,CAACmB,QAAQ;MAAE,GAAGt4B;IAAQ,CAAC;IAC/D,IAAI,IAAI,CAACs4B,QAAQ,CAAC7W,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI,CAAC4W,QAAQ,CAAC,CAAC;IACzD,IAAIc,UAAU,KAAK,IAAI,EAAE,OAAO,IAAI,CAACD,KAAK,CAAC,MAAM,EAAEhzB,MAAM,EAAE;MAAE,GAAGixB,GAAG;MAAEgC;IAAW,CAAC,CAAC;IAClF,IAAI,IAAI,CAACb,QAAQ,CAAC/sC,OAAO,IAAI,IAAI,EAAE,MAAM,IAAI2B,sBAAsB,CAAC,CAAC;IAErE,IAAIiqC,GAAG,CAAC/qC,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIvC,oBAAoB,CAAC,8BAA8B,CAAC;IACzF,MAAMiS,OAAO,GAAGq7B,GAAG,CAAC/qC,SAAS,CAACb,OAAO;IACrC,IAAI,IAAI,CAAC+sC,QAAQ,CAAC7W,QAAQ,IAAI,IAAI,EAChC,MAAM,IAAI53B,oBAAoB,CAAC,+BAA+B,CAAC;IACjE,MAAM+W,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAACmO,gBAAgB;MACzBsC,QAAQ,GAAAgtB,aAAA,GAAElC,GAAG,CAAC9qB,QAAQ,cAAAgtB,aAAA,cAAAA,aAAA,GAAK,MAAM,IAAI,CAACJ,YAAY,CAAC,MAAM,EAAE/yB,MAAM,EAAEixB,GAAG,CAAE;MACxElnB,QAAQ,EAAE,IAAI,CAACqpB,SAAS,CAACzhC,MAAM,CAAC,IAAI,CAAC0hC,KAAK,EAAE,MAAM,EAAErzB,MAAM,CAAC;MAC3D6J,IAAI,EAAE,IAAI,CAACuoB,QAAQ,CAAC7W,QAAQ;MAC5B3lB;IACF,CAAC,CAAC;IACF,MAAM;MAAElC,IAAI;MAAE,GAAG+C;IAAM,CAAC,GAAG,MAAM4Y,yBAAA,CAAA4iB,eAAA,MAAI,EAACqB,eAAc,CAAC,CAAAztB,IAAA,CAApB,IAAI,EAAiBnL,EAAE,EAAE,MAAM,EAAE;MAChE,GAAGu2B,GAAG;MACN/qC,SAAS,EAAE+qC,GAAG,CAAC/qC;IACjB,CAAC,CAAC;IACF,IAAI,CAACksC,QAAQ,CAAC/sC,OAAO,GAAGwuB,2BAA2B,CAACpd,KAAK,CAACmd,KAAK,CAAC;IAChE,OAAO;MACL,GAAGnd,KAAK;MACR,IAAIA,KAAK,CAACwB,MAAM,EAAEkZ,GAAG,IAAI,IAAI,IAAI;QAC/BoiB,aAAa,EAAE,IAAI,CAACC,aAAa,CAAC/8B,KAAK,CAACwB,MAAM,CAACkZ,GAAG,EAAE8f,GAAG;MACzD,CAAC,CAAC;MACFp9B,KAAK,EAAE+B,OAAO;MACdpO,WAAW,EAAEkM,IAAI;MACjBrO,OAAO,EAAE,IAAI,CAAC+sC,QAAQ,CAAC/sC;IACzB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;;EAkBE;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAM2tC,KAAKA,CACTprC,EAAM,EACNoY,MAA+B,EAC/BlG,OAG2E,GAAG,CAAC,CAAC,EACG;IAAA,IAAA25B,cAAA;IACnF,MAAM;MAAER,UAAU;MAAEh2B,GAAG;MAAE,GAAGg0B;IAAI,CAAC,GAAG;MAAE,GAAG,IAAI,CAACmB,QAAQ;MAAE,GAAGt4B;IAAQ,CAAC;IACpE,MAAM45B,KAAK,GAAGrkB,yBAAA,CAAA4iB,eAAA,MAAI,EAAC0B,eAAc,CAAC,CAAA9tB,IAAA,CAApB,IAAI,EAAiBje,EAAE,CAAC;IACtC,MAAM;MAAEvC,OAAO;MAAEzC;IAAK,CAAC,GAAG,IAAI,CAACwvC,QAAQ;IACvC;IACA,MAAM1zB,UAAU,GAAG9b,IAAI,IAAI,IAAI,GAAGyU,aAAa,CAACzU,IAAI,CAAC,GAAGyC,OAAO;IAC/D,MAAM;MAAE6T;IAAO,CAAC,GAAG+3B,GAAG;IAEtB,IAAIrpC,EAAE,IAAI,IAAI,EAAE,MAAM,IAAIN,wBAAwB,CAAC,CAAC;IACpD,IAAIM,EAAE,KAAK,MAAM,IAAIqrC,UAAU,KAAK,IAAI,EACtC,MAAM,IAAI9rC,4BAA4B,CAAC,sCAAsC,CAAC;IAChF,IAAIS,EAAE,KAAK,MAAM,IAAIqpC,GAAG,CAACtpC,MAAM,IAAI,IAAI,IAAIzF,MAAM,CAAC+uC,GAAG,CAACtpC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC+rC,KAAK,CAACxa,OAAO,EAAE;MACnF,MAAM,IAAIxxB,uBAAuB,CAACupC,GAAG,CAACtpC,MAAM,EAAEC,EAAE,CAAC;IACnD;IAEA,IAAIoiB,QAAQ;IACZ,IAAI;MACF,IAAIinB,GAAG,CAAC/qC,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIhB,aAAa,CAAC,sBAAsB,CAAC;MAC1E8kB,QAAQ,GAAGinB,GAAG,CAAC/qC,SAAS,CAACb,OAAO;IAClC,CAAC,CAAC,OAAO6H,KAAK,EAAE;MACd,MAAM0mC,kBAAkB,GACtBX,UAAU,KAAK,IAAI,KACjB/lC,KAAK,YAAY1I,gBAAS,IAC1B0I,KAAK,CAACvK,OAAO,KACX,sGAAsG,IACxGuK,KAAK,YAAYxD,sBAAsB,IACtCwD,KAAK,YAAYhI,aAAa,IAAIgI,KAAK,CAACvK,OAAO,KAAK,sBAAuB,CAAC;MACjF,IAAI,CAACixC,kBAAkB,EAAE,MAAM1mC,KAAK;MACpC8c,QAAQ,GAAGnV,eAAe,CAACC,GAAG;IAChC;IACA,MAAMiV,QAAQ,GAAG,IAAI,CAACqpB,SAAS,CAACzhC,MAAM,CAAC,IAAI,CAAC0hC,KAAK,EAAEzrC,EAAE,EAAEoY,MAAM,CAAC;IAE9D,IAAIizB,UAAU,KAAK,IAAI,EAAE;MACvB,IAAIhC,GAAG,CAACn9B,KAAK,IAAI,IAAI,EAAE;QACrB,MAAM+/B,SAAS,GAAG52B,GAAG,IAAI,IAAI,IAAI;UAAE,CAAC,OAAOA,GAAG,KAAK,QAAQ,GAAG,QAAQ,GAAG,MAAM,GAAGA;QAAI,CAAC;QACvF,MAAMywB,OAAO,GAAG,MAAMtyB,UAAU,CAAC4O,QAAQ,EAAE;UAAE,GAAG6pB,SAAS;UAAE36B;QAAO,CAAC,CAAC,CAAC2C,KAAK,CAAE3O,KAAK,IAAK;UACpF,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;UAC/C,OAAO;YAAEyT,IAAI,EAAE,OAAO;YAAE7M,KAAK,EAAE;UAAE,CAAC;QACpC,CAAC,CAAC;QACFm9B,GAAG,CAACn9B,KAAK,GAAG45B,OAAO,CAAC/sB,IAAI,KAAK,aAAa,GAAG,CAAC,GAAG+sB,OAAO,CAAC55B,KAAK,GAAG,CAAC;MACpE;MAEA,MAAMggC,KAAK,GAAG;QAAE,GAAG7C,GAAG;QAAE/3B,MAAM;QAAE6Q;MAAS,CAAC;MAC1C,IAAIrP,EAAE;MACN,IAAI9S,EAAE,KAAK,MAAM,EAAE;QACjB,IAAI,IAAI,CAACwqC,QAAQ,CAAC7W,QAAQ,IAAI,IAAI,EAChC,MAAM,IAAI53B,oBAAoB,CAAC,wCAAwC,CAAC;QAC1E+W,EAAE,GAAG,MAAM+Y,YAAY,CAAC;UACtB,GAAGqgB,KAAK;UACR3qC,GAAG,EAAEuM,GAAG,CAACmO,gBAAgB;UACzBgG,IAAI,EAAE,IAAI,CAACuoB,QAAQ,CAAC7W,QAAQ;UAC5B3lB,OAAO,EAAEoU;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAItL,UAAU,IAAI,IAAI,EACpB,MAAM,IAAItX,2BAA2B,CAAC,wCAAwC,CAAC;QACjFsT,EAAE,GAAG,MAAM+Y,YAAY,CAAC;UACtB,GAAGqgB,KAAK;UACR3qC,GAAG,EAAEuM,GAAG,CAACkL,cAAc;UACvBoJ,QAAQ;UACRtL;QACF,CAAC,CAAC;MACJ;MAEA,MAAM;QAAEqe,OAAO;QAAE,GAAGgX;MAAY,CAAC,GAAG,MAAM71B,QAAQ,CAACxD,EAAE,EAAEsP,QAAQ,EAAE;QAAE,GAAGinB,GAAG;QAAEh0B;MAAI,CAAC,CAAC;MACjF,IAAI8f,OAAO,IAAI,IAAI,EAAE;QACnB,MAAM,IAAI73B,aAAa,CAAC,4CAA4CwV,EAAE,EAAE,CAAC;MAC3E;MACA,MAAMm4B,aAAa,GAAG9V,OAA6B;MACnD,OAAO;QACL,GAAGgX,WAAW;QACd,GAAG1kB,yBAAA,CAAA4iB,eAAA,MAAI,EAACa,cAAa,CAAC,CAAAjtB,IAAA,CAAnB,IAAI,EAAgBgtB,aAAa,EAAEjrC,EAAE,EAAE8S,EAAE,EAAEu2B,GAAG,CAAC;QAClDv2B,EAAE,EAAEmK,QAAQ,CAACnK,EAAE,CAAC;QAChBzC,MAAM,EAAE46B,aAAa;QACrBjf,KAAK,EAAElZ,EAAE;QACThH,IAAI,EAAEigB,WAAW,CAACjZ,EAAE,CAAC;QACrBs0B,MAAM,EAAEr7B;MACV,CAAC;IACH;IAEA,IAAIsJ,GAAG,IAAI,IAAI,EACb,MAAM,IAAItZ,oBAAoB,CAAC,qDAAqD,CAAC;IACvF,IAAI+a,UAAU,IAAI,IAAI,EACpB,MAAM,IAAItX,2BAA2B,CAAC,qCAAqC,CAAC;IAC9E,MAAMsT,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAACkL,cAAc;MACvBuF,QAAQ,GAAAstB,cAAA,GAAExC,GAAG,CAAC9qB,QAAQ,cAAAstB,cAAA,cAAAA,cAAA,GAAK,MAAM,IAAI,CAACV,YAAY,CAACnrC,EAAE,EAAEoY,MAAM,EAAEixB,GAAG,CAAE;MACpEjnB,QAAQ;MACRtL,UAAU;MACVqL;IACF,CAAC,CAAC;IACF,IAAIknB,GAAG,CAAC/qC,SAAS,IAAI,IAAI,EACvB,MAAM,IAAIvC,oBAAoB,CAAC,8CAA8C,CAAC;IAChF,OAAO0rB,yBAAA,CAAA4iB,eAAA,MAAI,EAACqB,eAAc,CAAC,CAAAztB,IAAA,CAApB,IAAI,EAAiBnL,EAAE,EAAE9S,EAAE,EAAE;MAAE,GAAGqpC,GAAG;MAAE/qC,SAAS,EAAE+qC,GAAG,CAAC/qC;IAAU,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAiCE;AACF;AACA;AACA;AACA;AACA;EACEstC,aAAaA,CACXQ,MAAe,EACf;IAAEC,WAAW;IAAE,GAAGhD;EAA+D,CAAC,GAAG,CAAC,CAAC,EACvE;IAChB,OAAO+C,MAAM,CACV9rC,GAAG,CAAEgsC,KAAK,IAAK;MACd,IAAIC,YAAY;MAChB,IAAI;QACFA,YAAY,GAAG9kB,yBAAA,CAAA4iB,eAAA,MAAI,EAACmC,uBAAsB,CAAC,CAAAvuB,IAAA,CAA5B,IAAI,EAAyBquB,KAAK,CAAC7uC,OAAO,EAAE6uC,KAAK,CAAChX,MAAM,CAAC,CAAC,CAAC,EAAE+T,GAAG,CAAC;MAClF,CAAC,CAAC,OAAO/jC,KAAK,EAAE;QACd,IAAI,CAAC+mC,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,KAAK,KAAK/mC,KAAK,YAAYrF,2BAA2B,EAAE,OAAO,IAAI;QACvF,MAAMqF,KAAK;MACb;MACA,MAAMmnC,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACkB,WAAW,CAACH,YAAY,EAAED,KAAK,CAACljC,IAAI,EAAEkjC,KAAK,CAAChX,MAAM,CAAC;MAClF,MAAM,CAACt6B,IAAI,EAAEsL,IAAI,CAAC,GAAGxB,MAAM,CAACE,OAAO,CAACynC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/C,OAAO;QACLzxC,IAAI;QACJsL,IAAI;QACJokB,QAAQ,EAAE;UACR1vB,IAAI,EAAEuxC,YAAY;UAClB9uC,OAAO,EAAE6uC,KAAK,CAAC7uC;QACjB;MACF,CAAC;IACH,CAAC,CAAC,CACDmd,MAAM,CAAE1W,CAAsB,IAAwBA,CAAC,IAAI,IAAI,CAAC;EACrE;EAEA,aAAayoC,UAAUA,CAAgC;IACrDlC,UAAU;IACVn5B,MAAM;IACNqiB,QAAQ;IACRqQ,GAAG;IACHvmC,OAAO;IACPotC,cAAc;IACdH,UAAU;IACVE,UAAU;IACVgC,gBAAgB;IAChB,GAAGC;EAKL,CAAC,EAAmC;IAClC,IAAI7I,GAAG,IAAI,IAAI,IAAIyG,UAAU,IAAI,IAAI,EAAE;MACrC,IAAIjkC,GAAG;MACP,IAAIqkC,cAAc,IAAI,IAAI,EAAErkC,GAAG,GAAG,MAAMikC,UAAU,CAACK,OAAO,CAACD,cAAc,CAAC;MAC1E,IAAIH,UAAU,IAAI,IAAI,EAAElkC,GAAG,GAAG,MAAMikC,UAAU,CAACE,mBAAmB,CAACD,UAAU,EAAEE,UAAU,CAAC;MAC1F,IAAIpkC,GAAG,IAAI,IAAI,EAAE;QAAA,IAAAsmC,SAAA;QACf9I,GAAG,GAAGx9B,GAAG,CAACw9B,GAAG;QACb,CAAA8I,SAAA,GAAAnZ,QAAQ,cAAAmZ,SAAA,cAAAA,SAAA,GAARnZ,QAAQ,GAAKntB,GAAG,CAACmtB,QAAQ;MAC3B;IACF;IACA,IAAIqQ,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIvkC,uBAAuB,CAAC,CAAC;IAEpD,IAAIzE,IAAI;IACR,IAAIyC,OAAO,IAAI,IAAI,EAAE;MACnBA,OAAO,GAAI,MAAM0Z,WAAW,CAAC1Z,OAAO,EAAE,iBAAiB,EAAE;QACvD2Z,aAAa,EAAE,IAAI;QACnB9F;MACF,CAAC,CAA6B;MAC9B,IAAItB,WAAW,CAACvS,OAAO,CAAC,EAAEzC,IAAI,GAAGyC,OAAO;IAC1C;IAEA,IAAIA,OAAO,IAAI,IAAI,IAAIitC,UAAU,IAAI,IAAI,IAAIG,cAAc,IAAI,IAAI,IAAIlX,QAAQ,IAAI,IAAI,EAAE;MACvF,MAAM,IAAIn0B,2BAA2B,CAAC,8CAA8C,CAAC;IACvF;IAEA,IAAI/B,OAAO,IAAI,IAAI,EAAE;MACnB,MAAMitB,QAAQ,GAAG,MAAM1T,WAAW,CAACvZ,OAAO,EAAE;QAAE6T;MAAO,CAAC,CAAC;MACvD,IAAIoZ,QAAQ,CAAClB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAInqB,qBAAqB,CAAC5B,OAAO,CAAC;IACvE;IAEA,IAAImvC,gBAAgB,KAAK,IAAI,EAAE;MAC7B,IAAInvC,OAAO,IAAI,IAAI,EACjB,MAAM,IAAI+B,2BAA2B,CAAC,kDAAkD,CAAC;MAC3F,MAAMutC,cAAc,GAAG,CAAC,MAAMl2B,mBAAmB,CAACpZ,OAAO,EAAE;QAAE6T;MAAO,CAAC,CAAC,EAAEqiB,QAAQ;MAChF,IAAIqZ,OAAO,GAAG,KAAK;MACnB,IAAIrZ,QAAQ,IAAI,IAAI,EAAEqZ,OAAO,GAAGrZ,QAAQ,KAAKoZ,cAAc,CAAC,KACvD,IAAIrC,UAAU,IAAI,IAAI,EAAE;QAC3B,IAAID,UAAU,IAAI,IAAI,EACpB,MAAM,IAAI1uC,oBAAoB,CAAC,0CAA0C,CAAC;QAC5EixC,OAAO,GAAG,MAAMvC,UAAU,CAACwC,oBAAoB,CAACF,cAAc,EAAErC,UAAU,EAAEE,UAAU,CAAC;MACzF,CAAC,MAAM,IAAIC,cAAc,IAAI,IAAI,EAAE;QACjC,IAAIJ,UAAU,IAAI,IAAI,EACpB,MAAM,IAAI1uC,oBAAoB,CAAC,0CAA0C,CAAC;QAC5EixC,OAAO,GAAG,MAAMvC,UAAU,CAACyC,QAAQ,CAACH,cAAc,EAAElC,cAAc,CAAC;MACrE;MACA,IAAI,CAACmC,OAAO,EAAE;QACZ,MAAM,IAAI9tC,qBAAqB,CAC7B,CAACwrC,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAIG,cAAc,KAAK,IAAI,GAAG,aAAa,GAAG,UAC3D,CAAC;MACH;IACF;IAEA,OAAO,IAAIsC,mBAAmB,CAAI;MAChC1C,UAAU;MACVn5B,MAAM;MACNo5B,UAAU;MACVG,cAAc;MACdlX,QAAQ;MACRqQ,GAAG;MACHvmC,OAAO;MACPzC,IAAI;MACJ4vC,UAAU;MACV,GAAGiC;IACL,CAAC,CAAC;EACJ;EAYA;AACF;AACA;EACE/xC,WAAWA,CAAC;IACVkpC,GAAG;IACH,GAAG6I;EAcmC,CAAC,EAAE;IAAAhmB,mCAAA,OAAAwjB,eAAA;IA3B3CvjB,kCAAA,OAASwjB,YAAY;IA4BnB,IAAI,CAAC8C,IAAI,GAAGpJ,GAAG;IACf,MAAMqJ,OAAO,GAAGrJ,GAAG,CAACA,GAAG,CAACngC,MAAM,GAAG,CAAC,CAAC;IACnC,IAAIwpC,OAAO,CAAC3iB,QAAQ,IAAI,IAAI,EAAE;MAC5B,MAAM,IAAI3uB,oBAAoB,CAC5B,uDAAuD+I,MAAM,CAAC0T,IAAI,CAAC60B,OAAO,CAAC,eAC7E,CAAC;IACH;IACAtmB,6BAAA,CAAKujB,YAAY,EAAjB,IAAI,EAAgB+C,OAAO,CAAC3iB,QAAZ,CAAC;IACjB,IAAI,CAAC+gB,KAAK,GAAG9kB,6BAAA,CAAK2jB,YAAY,EAAjB,IAAgB,CAAC,CAACtvC,IAAI;IACnC,IAAI,CAACwwC,SAAS,GAAG,IAAIrB,sBAAQ,CAACnG,GAAG,CAAC;IAClC,IAAI,CAACwG,QAAQ,GAAGqC,YAAY;;IAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI/nC,MAAM,CAACuR,MAAM,CACX,IAAI,EACJvR,MAAM,CAACC,WAAW,CAChB4hB,6BAAA,CAAK2jB,YAAY,EAAjB,IAAgB,CAAC,CAACgD,SAAS,CAAChtC,GAAG,CAAC,CAAC;MAAEtF,IAAI;MAAEuyC,SAAS,EAAEC,OAAO;MAAExY;IAAsB,CAAC,KAAK;MACvF,MAAMqW,UAAU,GAAGrwC,IAAI,KAAK,MAAM,IAAI,CAACg6B,QAAQ;MAC/C,OAAO,CACLh6B,IAAI,EACJ,OAAO,GAAGsL,IAAS,KAAK;QACtB,MAAM4L,OAAO,GAAG5L,IAAI,CAACzC,MAAM,KAAK2pC,OAAO,CAAC3pC,MAAM,GAAG,CAAC,GAAGyC,IAAI,CAACmnC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACpE,IAAI,OAAOv7B,OAAO,KAAK,QAAQ,EAC7B,MAAM,IAAItV,gBAAS,CAAC,gCAAgCsV,OAAO,EAAE,CAAC;QAChE,IAAIlX,IAAI,KAAK,MAAM,EAAE,OAAO,IAAI,CAACswC,OAAO,CAAChlC,IAAI,EAAE;UAAE+kC,UAAU;UAAE,GAAGn5B;QAAQ,CAAC,CAAC;QAC1E,OAAO,IAAI,CAACk5B,KAAK,CAACpwC,IAAI,EAAEsL,IAAI,EAAE;UAAE+kC,UAAU;UAAE,GAAGn5B;QAAQ,CAAC,CAAC;MAC3D,CAAC,CACF;IACH,CAAC,CACH,CACF,CAAC;EACH;AACF;AAACw7B,SAAA,GArgBKhlB,QAAQ;AAAA,SAAAwiB,eA2BV;EAAErhB,UAAU;EAAED,WAAW;EAAEL;AAAwB,CAAC,EACpDyhB,MAAU,EACVprC,WAA4C,EAC5CsS,OAAoD,EACd;EACtC,IAAInX,OAAe;EACnB,QAAQ8uB,UAAU;IAChB,KAAK,IAAI;MAAE;QACT,MAAMiiB,KAAK,GAAGrkB,yBAAA,CAAA4iB,eAAA,MAAI,EAAC0B,eAAc,CAAC,CAAA9tB,IAAA,CAApB,IAAI,EAAiB+sB,MAAM,CAAC;QAC1C,OAAO;UACL2C,aAAa,EAAE,IAAI,CAACnC,SAAS,CAACxhC,MAAM,CAAC,IAAI,CAACyhC,KAAK,EAAEK,KAAK,CAAC9wC,IAAI,EAAE4uB,WAAW,CAAC;UACzE+hB,aAAa,EAAE,IAAI,CAACC,aAAa,CAACriB,GAAG,EAAErX,OAAO;QAChD,CAAC;MACH;IACA,KAAK,QAAQ;MACXnX,OAAO,GAAG,IAAI,CAACywC,SAAS,CAACoC,gBAAgB,CAAChkB,WAAW,CAAC;MACtD;IACF,KAAK,OAAO;MACV7uB,OAAO,GAAGiP,MAAM,CAAC4f,WAAW,CAAC,CAAC5rB,QAAQ,CAAC,CAAC;MACxC,IAAI,iCAAiC,CAAC8Q,IAAI,CAAC/T,OAAO,CAAC,EAAE;QACnD,MAAM,IAAIO,aAAa,CACrB,8DAA8DP,OAAO,EACvE,CAAC;MACH;MACA;IACF;MACE,MAAM,IAAIuC,aAAa,CAAC,wBAAwBusB,UAAU,EAAE,CAAC;EACjE;EACA,MAAM,IAAIlqB,mBAAmB,CAAC5E,OAAO,EAAE6E,WAAW,CAAC;AACrD;AAAC,eAAA8rC,gBAGC54B,EAAuB,EACvBk4B,MAAU,EACV94B,OAAsF,EACH;EACnF,MAAMk1B,MAAM,GAAG,MAAML,eAAe,CAACj0B,EAAE,EAAE;IAAE,GAAG,IAAI,CAAC03B,QAAQ;IAAE,GAAGt4B;EAAQ,CAAC,CAAC;EAC1E,OAAO;IACLpG,IAAI,EAAEs7B,MAAM,CAACt7B,IAAI;IACjBgH,EAAE,EAAEmK,QAAQ,CAA4CmqB,MAAM,CAACpb,KAAK,CAAC;IACrEob,MAAM;IACNpb,KAAK,EAAEob,MAAM,CAACpb,KAAK;IACnB,IAAIob,MAAM,CAACp0B,WAAW,IAAI,IAAI,KAC3B,MAAM,IAAI,CAAC+3B,sBAAsB,CAAC3D,MAAM,CAACt7B,IAAI,EAAEk/B,MAAM,EAAE94B,OAAO,CAAC,CAAC;EACrE,CAAC;AACH;AAAC,SAAA65B,gBAuFe/wC,IAAY,EAAe;EACzC,MAAMgF,EAAE,GAAG2mB,6BAAA,CAAK2jB,YAAY,EAAjB,IAAgB,CAAC,CAACgD,SAAS,CAAC1pC,IAAI,CAAE0hC,CAAmB,IAAKA,CAAC,CAACtqC,IAAI,KAAKA,IAAI,CAAC;EACrF,IAAIgF,EAAE,IAAI,IAAI,EAAE;IACd,OAAOA,EAAE;EACX;EACA,IAAIhF,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACLuyC,SAAS,EAAE,EAAE;MACbvyC,IAAI,EAAE,MAAM;MACZs2B,OAAO,EAAE,KAAK;MACduc,OAAO,EAAE,MAAM;MACf7Y,QAAQ,EAAE;IACZ,CAAC;EACH;EACA,MAAM,IAAIn1B,2BAA2B,CAAC7E,IAAI,CAAC;AAC7C;AAAC,SAAAwxC,wBA2HCsB,SAAkC,EAClCxR,QAAgB,EAChB;EAAEyR;AAAqD,CAAC,EAChD;EACR,MAAMC,aAAa,GAAG;IAAE,GAAG,IAAI,CAACxD,QAAQ,CAACuD,qBAAqB;IAAE,GAAGA;EAAsB,CAAC;EAC1F,IAAIC,aAAa,CAACF,SAAS,CAAC,IAAI,IAAI,EAAE,OAAOE,aAAa,CAACF,SAAS,CAAC;;EAErE;EACA,MAAMzmB,OAAO,GAAGA,CAAC+E,CAAM,EAAEC,CAAM,KAAc4C,IAAI,CAACC,SAAS,CAAC9C,CAAC,CAAC,KAAK6C,IAAI,CAACC,SAAS,CAAC7C,CAAC,CAAC;EAEpF,MAAMvB,SAAS,GAAG,IAAI,CAACsiB,IAAI,CACxB9sC,GAAG,CAAC,CAAC;IAAEoqB;EAAS,CAAC,KAAKA,QAAQ,CAAC,CAC/B9P,MAAM,CAAE8P,QAAQ,IAAKA,QAAQ,EAAE4hB,KAAK,CAAkB;EACzD,MAAMjsC,aAAa,GAAGyqB,SAAS,CAC5BxqB,GAAG,CAAEoqB,QAAQ,IAAK,CAACA,QAAQ,CAAC1vB,IAAI,EAAE0vB,QAAQ,CAAC4hB,KAAK,CAAC2B,OAAO,CAAC,CAAC,CAC1D3tC,GAAG,CAAC,CAAC,CAACtF,IAAI,EAAEoxC,MAAM,CAAC,KAClBA,MAAM,CAAC9rC,GAAG,CAAEgsC,KAAS,IAAK,CAACtxC,IAAI,EAAE8J,MAAM,CAAC0T,IAAI,CAAC8zB,KAAK,CAAC,CAAC,CAAC,CAAC,EAAExnC,MAAM,CAAC6V,MAAM,CAAC2xB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAClF,CAAC,CACAvG,IAAI,CAAC,CAAC,CACNnrB,MAAM,CAAC,CAAC,GAAGszB,SAAS,CAAC,KAAK5iC,MAAM,CAAC,KAAK8+B,IAAQ,CAAC8D,SAAS,CAAC,CAAClwC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAKs+B,QAAQ,CAAC,CAC1F1hB,MAAM,CAAC,CAAC,IAAKvR,IAAI,CAAC,EAAE+M,GAAG,EAAE+3B,GAAG,KAAK,CAACA,GAAG,CAAC1kC,KAAK,CAAC,CAAC,EAAE2M,GAAG,CAAC,CAACqzB,IAAI,CAAE/jC,EAAE,IAAK2hB,OAAO,CAAC3hB,EAAE,CAAC,CAAC,CAAC,EAAE2D,IAAI,CAAC,CAAC,CAAC;EAC1F,QAAQhJ,aAAa,CAACwD,MAAM;IAC1B,KAAK,CAAC;MACJ,MAAM,IAAI5D,2BAA2B,CAACq8B,QAAQ,CAACt+B,QAAQ,CAAC,CAAC,EAAE8vC,SAAS,CAAC;IACvE,KAAK,CAAC;MACJ,OAAOztC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B;MACE,MAAM,IAAID,6BAA6B,CAAC0tC,SAAS,EAAEztC,aAAa,CAAC;EACrE;AACF;AAwMF;AACA,MAAM8sC,mBAA6C,GAAGzkB,QAAe;AAErE,wDAAeykB,mBAAmB;;AC7pBoB;AAa/C,SAASiB,WAAWA,CAACC,UAA2B,EAAe;EACpE,OAAO;IACL,GAAGA,UAAU;IACbjwC,EAAE,EAAEiwC,UAAU,CAACjwC,EAA2B;IAC1CkwC,YAAY,EAAEtkC,MAAM,CAACqkC,UAAU,CAAC3rB,KAA4B,CAAC,CAAC1kB,QAAQ,CAAC,CAAC;IACxEuwC,eAAe,EAAEvkC,MAAM,CAACqkC,UAAU,CAACrrB,QAAkC,CAAC,CAAChlB,QAAQ,CAAC;EAClF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACe,MAAMwwC,UAAU,CAAC;EAC9B;AACF;AACA;EACE1zC,WAAWA,CACO2C,OAA8B,EACvCyU,OAAyB,EAChC;IAAA,KAFgBzU,OAA8B,GAA9BA,OAA8B;IAAA,KACvCyU,OAAyB,GAAzBA,OAAyB;EAC/B;;EAEH;AACF;AACA;AACA;EACE,MAAMy3B,QAAQA,CAACz3B,OAA0B,GAAG,CAAC,CAAC,EAAyC;IACrF,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,OAAOm3B,GAAG,CAAC/3B,MAAM,CAACkO,iBAAiB,CAAC,IAAI,CAAC/hB,OAAO,CAAC;EACnD;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMgxC,QAAQA,CACZ1rB,OAA8B,EAC9B7Q,OAA0B,GAAG,CAAC,CAAC,EACT;IACtB,MAAM;MAAEZ;IAAO,CAAC,GAAG;MAAE,GAAG,IAAI,CAACY,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAClD,MAAMm8B,UAAU,GAAG,MAAM/8B,MAAM,CAAC+uB,gCAAgC,CAAC,IAAI,CAAC5iC,OAAO,EAAEslB,OAAO,CAAC;IACvF,OAAOqrB,WAAW,CAACC,UAAU,CAAC;EAChC;AACF;;;;;;;ACzDsE;AACrB;AACkB;AACK;AACzB;AACkC;AAGV;AAAA,IAAAK,qBAAA,oBAAA38B,OAAA;AAcvE;AACA;AACA;AACe,MAAMmX,MAAM,SAASslB,UAAU,CAAC;EAC7C;AACF;AACA;AACA;EACE1zC,WAAWA,CACOgrC,OAAoB,EACpB5zB,OAE2C,EAC3D;IACA,KAAK,CAACnI,MAAM,CAACC,MAAM,CAAC87B,OAAO,CAACroC,OAAO,CAAC,EAAEoJ,QAAQ,CAAC6B,aAAa,CAAC,EAAEwJ,OAAO,CAAC;IA2GzE4U,gCAAA,OAAA4nB,qBAAqB;IAAiB,KAhHpB5I,OAAoB,GAApBA,OAAoB;IAAA,KACpB5zB,OAE2C,GAF3CA,OAE2C;EAG7D;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMy8B,QAAQA,CACZtsB,WAAmB,EACnBC,cAAsB,EACtBpQ,OAA8B,GAAG,CAAC,CAAC,EACC;IACpC,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAM08B,gBAAgB,GAAG,MAAM/iB,YAAY,CAAC;MAC1C9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC2O,gBAAgB;MACzBiF,SAAS,EAAE,IAAI,CAACokB,OAAO,CAACroC,OAAO;MAC/B4kB,WAAW;MACXC;IACF,CAAC,CAAC;IACF,OAAOykB,eAAe,CAAC6H,gBAAgB,EAAE;MAAE,GAAGvF,GAAG;MAAE/qC,SAAS,EAAE,IAAI,CAACwnC;IAAQ,CAAC,CAAC;EAC/E;;EAEA;AACF;AACA;AACA;EACE,MAAMgE,SAASA,CAAC53B,OAA+B,GAAG,CAAC,CAAC,EAAsC;IACxF,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAM28B,cAAc,GAAG,MAAMhjB,YAAY,CAAC;MACxC9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC4O,cAAc;MACvBrO,QAAQ,EAAE,IAAI,CAAC5Q;IACjB,CAAC,CAAC;IACF,OAAOspC,eAAe,CAAC8H,cAAc,EAAE;MAAE,GAAGxF,GAAG;MAAE/qC,SAAS,EAAE,IAAI,CAACwnC;IAAQ,CAAC,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEgJ,WAAWA,CACTC,OAAqC,EACrC78B,OAEC,GAAG,CAAC,CAAC,EACM;IACZ,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAM88B,aAAa,GAAG,IAAIp5B,GAAG,CAAC,CAAC;IAE/B,IAAIq5B,UAAU,GAAG,KAAK;IACtB,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAA2B;MAAA,IAAAC,qBAAA;MACjD,IAAIF,UAAU,EAAE;MAChBA,UAAU,GAAG,IAAI;MACjB,MAAMG,OAAO,IAAAD,qBAAA,GAAG,CAAC,MAAM9F,GAAG,CAAC/3B,MAAM,CAAC6uB,wBAAwB,CAAC,IAAI,CAAC1iC,OAAO,CAAC,EAAEq5B,aAAa,cAAAqY,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MAC7F,MAAME,QAAQ,GAAGD,OAAO,CACrBx0B,MAAM,CAAC,CAAC;QAAExc;MAAG,CAAC,KAAK,CAAC4wC,aAAa,CAACnf,GAAG,CAACzxB,EAAE,CAAC,CAAC,CAC1CkC,GAAG,CAAEoiB,KAAK,IAAK0rB,WAAW,CAAC1rB,KAAK,CAAC,CAAC,CAClC9H,MAAM,CAAE8H,KAAK,IAAKxQ,OAAO,CAACo9B,gBAAgB,KAAK,IAAI,IAAI5sB,KAAK,CAAC6rB,eAAe,KAAK,EAAE,CAAC;MACvFc,QAAQ,CAACt5B,OAAO,CAAE2M,KAAK,IAAKssB,aAAa,CAACO,GAAG,CAAC7sB,KAAK,CAACtkB,EAAE,CAAC,CAAC;MACxD6wC,UAAU,GAAG,KAAK;MAClB,MAAMxqC,OAAO,CAACqnB,GAAG,CAACujB,QAAQ,CAAC/uC,GAAG,CAAEoiB,KAAK,IAAKqsB,OAAO,CAACrsB,KAAK,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEDwsB,eAAe,CAAC,CAAC;IACjB,MAAMM,SAAS,GAAG,CAAC,MAAAC,aAAA,IAAY;MAC7B,MAAM98B,QAAQ,IAAA88B,aAAA,GAAGpG,GAAG,CAAC12B,QAAQ,cAAA88B,aAAA,cAAAA,aAAA,GAAK,MAAMt+B,gBAAgB,CAAC,aAAa,EAAEk4B,GAAG,CAAE;MAC7E,OAAOqG,WAAW,CAAC,YAAYR,eAAe,CAAC,CAAC,EAAEv8B,QAAQ,CAAC;IAC7D,CAAC,EAAE,CAAC;IAEJ,OAAO,YAAY;MACjB,MAAMvU,EAAE,GAAG,MAAMoxC,SAAS;MAC1BG,aAAa,CAACvxC,EAAE,CAAC;IACnB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMwxC,cAAcA,CAClB7sB,OAA8B,EAC9BC,QAAgB,EAChB9Q,OAAoC,GAAG,CAAC,CAAC,EACL;IACpC,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAM29B,eAAe,GAAG,MAAMhkB,YAAY,CAAC;MACzC9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC8O,gBAAgB;MACzBvO,QAAQ,EAAE,IAAI,CAAC5Q,OAAO;MACtBslB,OAAO;MACPC;IACF,CAAC,CAAC;IACF,OAAO+jB,eAAe,CAAC8I,eAAe,EAAE;MAAE,GAAGxG,GAAG;MAAE/qC,SAAS,EAAE,IAAI,CAACwnC;IAAQ,CAAC,CAAC;EAC9E;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;EACEgK,aAAaA,CACXphB,WAAyD,EACzDxc,OAA2E,GAAG,CAAC,CAAC,EACpE;IACZ,IAAIyU,2BAAA,CAAK+nB,qBAAqB,EAA1B,IAAyB,CAAC,IAAI,IAAI,EAAE;MACtC,MAAM,IAAIrxC,UAAU,CAClB,gFACF,CAAC;IACH;IACA,MAAMgsC,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAE3C,IAAI69B,YAAY,GAAGtrC,OAAO,CAACC,OAAO,CAAC,CAAC;IACpC,MAAMsrC,OAAO,GAAG,MAAOC,CAAc,IAAoB;MACvD,MAAMjtB,QAAQ,GAAG,MAAM0L,WAAW,CAACuhB,CAAC,CAAC;MACrC,MAAMC,cAAc,GAAGH,YAAY,CAACphB,IAAI,CAAC,YACvC,IAAI,CAACihB,cAAc,CAACK,CAAC,CAAC7xC,EAAE,EAAE4kB,QAAQ,EAAEqmB,GAAG,CACzC,CAAC;MACD0G,YAAY,GAAGG,cAAc,CAACvhB,IAAI,CAChC,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CACT,CAAC;MACD,MAAMuhB,cAAc;IACtB,CAAC;IAEDnpB,2BAAA,CAAK2nB,qBAAqB,EAA1B,IAAI,EAAyBjqC,OAAO,CAACC,OAAO,CAAC,CAApB,CAAC;IAC1B,MAAMyrC,QAAQ,GAAG,IAAI,CAACrB,WAAW,CAAC,MAAOpsB,KAAkB,IAAK;MAC9D,MAAMkgB,OAAO,GAAGoN,OAAO,CAACttB,KAAK,CAAC;MAC9B,IAAIiE,2BAAA,CAAK+nB,qBAAqB,EAA1B,IAAyB,CAAC,IAAI,IAAI,EAAE,MAAM,IAAInxC,iBAAiB,CAAC,CAAC;MACrEwpB,2BAAA,CAAK2nB,qBAAqB,EAA1B,IAAI,EAAyB/nB,2BAAA,CAAK+nB,qBAAqB,EAA1B,IAAyB,CAAC,CACpD/f,IAAI,CAAC,YAAYiU,OAAO,CAAC,CACzBjU,IAAI,CACH,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CACT,CALuB,CAAC;MAM1B,OAAOiU,OAAO;IAChB,CAAC,EAAEyG,GAAG,CAAC;IAEP,OAAO,YAAY;MACjB8G,QAAQ,CAAC,CAAC;MACV,MAAMxpB,2BAAA,CAAK+nB,qBAAqB,EAA1B,IAAyB,CAAC;MAChC3nB,2BAAA,CAAK2nB,qBAAqB,EAA1B,IAAI,EAAyB3iC,SAAJ,CAAC;IAC5B,CAAC;EACH;AACF;;ACnMoD;AACK;AACuB;AAC/B;AACS;AACJ;AACI;AACD;AAGhB;AAMzC;AACA;AACA;AACe,MAAMqkC,YAAY,SAAS5B,UAAU,CAAC;EACnD;AACF;AACA;AACA;AACA;AACA;EACE1zC,WAAWA,CACT2C,OAA8B,EACdyU,OAEZ,EACJ;IACA,KAAK,CAACzU,OAAO,EAAEyU,OAAO,CAAC;IAAC,KAJRA,OAEZ,GAFYA,OAEZ;EAGN;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMm+B,SAASA,CACb3tB,KAAa,EACbxQ,OAAqC,GAAG,CAAC,CAAC,EACiD;IAC3F,MAAMm3B,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAM9D,QAAQ,GAAGi7B,GAAG,CAAC/qC,SAAS,CAACb,OAAO;IAEtC,MAAM6yC,aAAa,GAAG,MAAMzkB,YAAY,CAAC;MACvC9L,gBAAgB,EAAE,IAAI;MACtB,GAAGspB,GAAG;MACN9nC,GAAG,EAAEuM,GAAG,CAAC6O,aAAa;MACtBtO,QAAQ,EAAE,IAAI,CAAC5Q,OAAO;MACtB2Q,QAAQ;MACRsU;IACF,CAAC,CAAC;IACF,MAAM;MAAExW;IAAM,CAAC,GAAG+Q,QAAQ,CAACqzB,aAAa,EAAExiC,GAAG,CAAC6O,aAAa,CAAC;IAC5D,OAAO;MACL,IAAI,MAAMoqB,eAAe,CAACuJ,aAAa,EAAEjH,GAAG,CAAC,CAAC;MAC9CtmB,OAAO,EAAE5U,aAAa,CAACC,QAAQ,EAAElC,KAAK,EAAE,IAAI,CAACzO,OAAO;IACtD,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAM8yC,eAAeA,CACnBxtB,OAA8B,EAC9B7Q,OAAgF,GAAG,CAAC,CAAC,EACpE;IAAA,IAAAu9B,aAAA;IACjB,MAAMpG,GAAG,GAAG;MAAE,GAAG,IAAI,CAACn3B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMS,QAAQ,IAAA88B,aAAA,GAAGpG,GAAG,CAAC12B,QAAQ,cAAA88B,aAAA,cAAAA,aAAA,GAAK,MAAMt+B,gBAAgB,CAAC,aAAa,EAAEk4B,GAAG,CAAE;IAC7E,IAAI7sC,MAAM;IACV,IAAIyW,GAAG;IACP,IAAI+P,QAAQ;IACZ,GAAG;MACD,CAAC;QAAEA,QAAQ;QAAE/P;MAAI,CAAC,GAAG,MAAMo2B,GAAG,CAAC/3B,MAAM,CAAC+uB,gCAAgC,CACpE,IAAI,CAAC5iC,OAAO,EACZslB,OACF,CAAC;MACD,MAAMytB,cAAc,GAAGxmC,MAAM,CAACgZ,QAAkC,CAAC;MACjE,IAAIwtB,cAAc,CAAC3sC,MAAM,GAAG,CAAC,EAAE,OAAO2sC,cAAc,CAACxyC,QAAQ,CAAC,CAAC;MAC/D,MAAMuG,KAAK,CAACoO,QAAQ,CAAC;MACrBnW,MAAM,GAAG,MAAMwV,SAAS,CAAC;QAAE,GAAGq3B,GAAG;QAAEp3B,MAAM,EAAE;MAAK,CAAC,CAAC;IACpD,CAAC,QAAQgB,GAAG,IAAIzW,MAAM;IACtB,MAAM,IAAID,oBAAoB,CAACC,MAAM,CAAC;EACxC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMkmB,KAAKA,CACTA,KAAa,EACbxQ,OAAsF,GAAG,CAAC,CAAC,EAC1E;IACjB,MAAM;MAAE6Q;IAAQ,CAAC,GAAG,MAAM,IAAI,CAACstB,SAAS,CAAC3tB,KAAK,EAAExQ,OAAO,CAAC;IACxD,OAAO,IAAI,CAACq+B,eAAe,CAACxtB,OAAO,EAAE7Q,OAAO,CAAC;EAC/C;AACF;;ACzGyC;AACY;AAC2B;AACD;AAC7B;AAEQ;;AAE1D;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeu+B,KAAKA,CACzB1wC,MAAuB,EACvB2wC,iBAA8E,EAC9Ex+B,OAAqB,EACe;EACpC,OAAO60B,eAAe,CACpB,MAAMlb,YAAY,CAAC;IACjB9L,gBAAgB,EAAE,IAAI;IACtB,GAAG7N,OAAO;IACV3Q,GAAG,EAAEuM,GAAG,CAACyT,OAAO;IAChBnT,QAAQ,EAAE8D,OAAO,CAAC5T,SAAS,CAACb,OAAO;IACnC+jB,WAAW,EAAE,MAAMrK,WAAW,CAACu5B,iBAAiB,EAAE,gBAAgB,EAAEx+B,OAAO,CAAC;IAC5EnS;EACF,CAAC,CAAC,EACFmS,OACF,CAAC;AACH;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAey+B,aAAaA,CACjCC,QAAyB;AAAE;AAC3BF,iBAA8E,EAC9Ex+B,OAA6B,EACO;EACpC,IAAI,CAAC0+B,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ,GAAG,CAAC,EAAE;IAClC,MAAM,IAAIj1C,aAAa,CAAC,UAAU,EAAE,0BAA0B,EAAEi1C,QAAQ,CAAC;EAC3E;EACA,MAAMpvB,WAAW,GAAG,MAAMrK,WAAW,CAACu5B,iBAAiB,EAAE,gBAAgB,EAAEx+B,OAAO,CAAC;EACnF,MAAM9D,QAAQ,GAAG8D,OAAO,CAAC5T,SAAS,CAACb,OAAO;EAC1C,MAAMuW,OAAO,GAAG,IAAI/Z,gCAAS,CAAC,MAAM2Z,UAAU,CAAClN,IAAI,CAACwL,OAAO,CAAC5T,SAAS,CAAC,CAAC8P,QAAQ,EAAE8D,OAAO,CAAC,CAAC;EAC1F,MAAM2+B,aAAa,GAAG78B,OAAO,CAACtG,KAAK,CAACkjC,QAAQ,CAAC,CAACl2C,YAAY,CAACT,gCAAS,CAAC62C,aAAa,CAAC;EACnF,MAAM;IAAEvzB;EAAI,CAAC,GAAGN,QAAQ,CACtB,MAAM4O,YAAY,CAAC;IACjB9L,gBAAgB,EAAE,IAAI;IACtB,GAAG7N,OAAO;IACV3Q,GAAG,EAAEuM,GAAG,CAACyT,OAAO;IAChBnT,QAAQ;IACRoT,WAAW;IACXzhB,MAAM,EAAE8wC;EACV,CAAC,CAAC,EACF/iC,GAAG,CAACyT,OACN,CAAC;EACD;EACA,MAAMxhB,MAAM,GAAG8wC,aAAa,CAAClgC,IAAI,CAAC4M,GAAG,CAAC,CAACS,EAAE,CAAChK,OAAO,CAAC,GAAGA,OAAO,CAAC+8B,KAAK,CAACxzB,GAAG,CAAC,GAAGszB,aAAa;EACvF,OAAO9J,eAAe,CACpB,MAAMlb,YAAY,CAAC;IACjB9L,gBAAgB,EAAE,IAAI;IACtB,GAAG7N,OAAO;IACV3Q,GAAG,EAAEuM,GAAG,CAACyT,OAAO;IAChBnT,QAAQ;IACRoT,WAAW;IACXzhB;EACF,CAAC,CAAC,EACFmS,OACF,CAAC;AACH;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe8+B,iBAAiBA,CACrCpxC,WAAgC,EAChCsS,OAAiC,EACG;EACpC,OAAO60B,eAAe,CACpB,MAAMlb,YAAY,CAAC;IACjB9L,gBAAgB,EAAE,IAAI;IACtB,GAAG7N,OAAO;IACV3Q,GAAG,EAAEuM,GAAG,CAACqO,WAAW;IACpB0I,OAAO,EAAE3S,OAAO,CAAC5T,SAAS,CAACb,OAAO;IAClCqV,EAAE,EAAElT;EACN,CAAC,CAAC,EACFsS,OACF,CAAC;AACH;;AClIA;AACA;AACA;;AAEgF;AAOhD;AACU;AAC8B;AACC;AACvB;AACb;AAEI;AACwC;AAExB;AACG;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe++B,wBAAwBA,CAC5CC,UAAkB,EAClB5qC,IAAW,EACX;EACEhI,SAAS;EACTmsC,UAAU;EACVn5B,MAAM;EACNqiB,QAAQ;EACRqQ,GAAG;EACH6G,cAAc;EACdH,UAAU;EACVE,UAAU;EACV,GAAG14B;AAC4B,CAAC,EAQlC;EAAA,IAAAi/B,iBAAA;EACA,MAAMnjC,OAAO,GAAG1P,SAAS,CAACb,OAAO;EACjC,IAAI,CAAC,MAAM+V,UAAU,CAACxF,OAAO,EAAE;IAAEsD;EAAO,CAAC,CAAC,EAAEyH,IAAI,KAAK,aAAa,EAAE;IAClE,MAAM,IAAIhd,oBAAoB,CAAC,WAAWiS,OAAO,gBAAgB,CAAC;EACpE;EAEA,MAAM0c,QAAQ,GAAG,MAAMhC,iBAAQ,CAACikB,UAAU,CAAkC;IAC1EruC,SAAS;IACTmsC,UAAU;IACVn5B,MAAM;IACNqiB,QAAQ;IACRqQ,GAAG;IACH6G,cAAc;IACdH,UAAU;IACVE;EACF,CAAC,CAAC;EAEF,MAAM93B,EAAE,GAAG,MAAM+Y,YAAY,CAAC;IAC5B9L,gBAAgB,EAAE,IAAI;IACtB,GAAG7N,OAAO;IACV3Q,GAAG,EAAEuM,GAAG,CAACoO,UAAU;IACnB5K,MAAM;IACN2Q,IAAI,EAAE,MAAMyI,QAAQ,CAAC6f,QAAQ,CAAC,CAAC;IAC/BhsB,QAAQ,GAAA4yB,iBAAA,GAAEj/B,OAAO,CAACqM,QAAQ,cAAA4yB,iBAAA,cAAAA,iBAAA,GAAK,MAAMzmB,QAAQ,CAACygB,YAAY,CAAC,MAAM,EAAE7kC,IAAI,EAAE4L,OAAO,CAAE;IAClFlE,OAAO;IACPmU,QAAQ,EAAEuI,QAAQ,CAAC8gB,SAAS,CAACzhC,MAAM,CAAC2gB,QAAQ,CAAC+gB,KAAK,EAAE,MAAM,EAAEnlC,IAAI,CAAC;IACjEoe,OAAO,EAAE5Y,IAAI,CAAColC,UAAU;EAC1B,CAAC,CAAC;EACF,MAAM;IAAEplC,IAAI,EAAElM,WAAW;IAAEosB;EAAM,CAAC,GAAG,MAAM+a,eAAe,CAACj0B,EAAE,EAAE;IAC7DxB,MAAM;IACNhT,SAAS;IACTmsC,UAAU;IACV,GAAGv4B;EACL,CAAC,CAAC;EACF,MAAM4E,UAAU,GAAGmV,2BAA2B,CAACD,KAAK,CAAC;EAErD,OAAOlnB,MAAM,CAACssC,MAAM,CAAC;IACnBnlC,KAAK,EAAE+B,OAAO;IACdpO,WAAW;IACXosB,KAAK;IACLqlB,YAAY,EAAEv6B;EAChB,CAAC,CAAC;AACJ;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAew6B,eAAeA,CACnC1xC,WAAgC,EAChC;EAAE2d,GAAG;EAAEtC,QAAQ;EAAE3J;AAAoD,CAAC,EACrD;EACjB,MAAM;IAAEuxB,aAAa;IAAExqB;EAAyB,CAAC,GAAG,MAAM/G,MAAM,CAACmH,WAAW,CAAC,CAAC;EAC9E,IAAIjP,OAAO,GAAGsC,IAAI,CAACvG,aAAa,CAAC,CAACL,MAAM,CAACG,IAAI,CAACw9B,aAAa,CAAC,EAAE74B,MAAM,CAACpK,WAAW,CAAC,CAAC,CAAC,CAAC;EACpF,IAAIyY,wBAAwB,KAAK1K,wBAAwB,CAAC6J,KAAK,EAAE;IAC/D,IAAI+F,GAAG,IAAI,IAAI,EAAE,MAAM,IAAI5hB,aAAa,CAAC,KAAK,EAAE,qBAAqB,EAAE4hB,GAAG,CAAC;IAC3E,IAAItC,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAItf,aAAa,CAAC,UAAU,EAAE,qBAAqB,EAAEsf,QAAQ,CAAC;IAC1FzR,OAAO,GAAGsC,IAAI,CACZ9B,MAAM,CACJqQ,SAAS,CAAC;MACR9Y,GAAG,EAAE6e,QAAQ,CAACmL,gBAAgB;MAC9BhO,GAAG;MACHtC,QAAQ;MACRrZ,MAAM,EAAEmI,MAAM,CAACP,OAAO,EAAE3C,QAAQ,CAAC4B,MAAM;IACzC,CAAC,CACH,CACF,CAAC;EACH;EACA,OAAOe,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe+nC,yBAAyBA,CAC7C3xC,WAAgC,EAChC;EAAE0R;AAAyB,CAAC,EACX;EACjB,MAAM8I,QAAQ,GAAG6C,QAAQ,CAACrd,WAAW,EAAEkO,GAAG,CAACiT,QAAQ,CAAC;EACpD,IAAI3G,QAAQ,CAACgD,SAAS,CAAC7b,GAAG,KAAKuM,GAAG,CAACmL,QAAQ,EAAE;IAC3C,MAAM,IAAItd,aAAa,CAAC,aAAa,EAAE,qBAAqB,EAAEmS,GAAG,CAACsM,QAAQ,CAACgD,SAAS,CAAC7b,GAAG,CAAC,CAAC;EAC5F;EACA,OAAO+vC,eAAe,CAACp0B,OAAO,CAAC9C,QAAQ,CAACgD,SAAS,CAACtK,EAAE,CAACsK,SAAS,CAAC,EAAE;IAC/DG,GAAG,EAAEnD,QAAQ,CAACgD,SAAS,CAACG,GAAG;IAC3BtC,QAAQ,EAAEb,QAAQ,CAACgD,SAAS,CAACnC,QAAQ;IACrC3J;EACF,CAAC,CAAC;AACJ;;;;;;;;;;;ACrK2C;AACa;AACb;AACW;AACD;AACa;AACZ;AAStD,MAAMqgC,OAAO,GAAG;EACd,GAAGH,qBAAY;EACfzK,eAAe;EACf,GAAG0K,qBAAY;EACf,GAAGC,kBAAiBA;AACtB,CAAU;AAAC,IAAAE,eAAA,oBAAA7/B,OAAA;AAkBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM8/B,YAAY,CAAC;EAKjB;AACF;AACA;EACE/2C,WAAWA,CAACoX,OAA4B,GAAG,CAAC,CAAC,EAAE;IAAA4/B,wBAAA,mBAPf,CAAC,CAAC;IAElChrB,sCAAA,OAAS8qB,eAAe;IAMtB9sC,MAAM,CAACuR,MAAM,CAAC,IAAI,CAAC07B,QAAQ,EAAE7/B,OAAO,CAAC;IACrC6U,iCAAA,CAAK6qB,eAAe,EAApB,IAAI,EAAmB;MACrBtzC,SAAS,EAAE4H,aAAa,CAAC,MAAM,IAAI,CAAC6rC,QAAQ,CAACzzC,SAAS,CAAC;MACvDgT,MAAM,EAAEpL,aAAa,CAAC,MAAM,IAAI,CAAC6rC,QAAQ,CAACzgC,MAAM,CAAC;MACjDm5B,UAAU,EAAEvkC,aAAa,CAAC,MAAM,IAAI,CAAC6rC,QAAQ,CAACtH,UAAU;IAC1D,CAJmB,CAAC;EAKtB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEuH,UAAUA,CAACC,SAA8B,GAAG,CAAC,CAAC,EAAwC;IACpF,OAAO;MACL,GAAG,IAAI,CAACF,QAAQ;MAChB,GAAGprB,iCAAA,CAAKirB,eAAe,EAApB,IAAmB,CAAC;MACvB,GAAGK;IACL,CAAC;EACH;;EAEA;EACA,MAAM/0B,OAAOA,CAAChL,OAAsB,EAAgC;IAClE;IACA,OAAO2Z,YAAY,CAAC;MAAE,GAAI,IAAI,CAACmmB,UAAU,CAAC,CAAS;MAAE,GAAG9/B;IAAQ,CAAC,CAAC;EACpE;AACF;AAgCApN,MAAM,CAACuR,MAAM,CACXw7B,YAAY,CAACK,SAAS,EACtBttC,SAAS,CAAqB+sC,OAAO,EAAE,CAAC,CAAC32C,IAAI,EAAEg1C,OAAO,CAAC,KAAK,CAC1Dh1C,IAAI,EACJ,SAASm3C,aAAaA,CAAqB,GAAG7rC,IAAW,EAAE;EACzDA,IAAI,CAACzC,MAAM,GAAGmsC,OAAO,CAACnsC,MAAM;EAC5B,MAAMqO,OAAO,GAAG5L,IAAI,CAACA,IAAI,CAACzC,MAAM,GAAG,CAAC,CAAC;EACrCyC,IAAI,CAACA,IAAI,CAACzC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAACmuC,UAAU,CAAC9/B,OAAO,CAAC;EAChD,OAAO89B,OAAO,CAAC,GAAG1pC,IAAI,CAAC;AACzB,CAAC,CACF,CACH,CAAC;AAGD;AACA,MAAM8rC,iBAAiB,GAAGP,YAAwE;AAClG,uDAAeO,iBAAiB;;;;;;;;AC/HL;AAE2B;AAE2C;AAAA,IAAAR,wBAAA,oBAAA7/B,OAAA;AAIjG;AACA;AACA;AACA;AACA;AACA;AACe,MAAMsgC,SAAS,SAASR,gBAAY,CAAC;EAOlD;AACF;AACA;AACA;EACE/2C,WAAWA,CAAC;IACVw3C,KAAK,GAAG,EAAE;IACV,GAAGpgC;EAGL,CAAC,GAAG,CAAC,CAAC,EAAE;IACN,KAAK,CAACA,OAAO,CAAC;IAAC4/B,wBAAA,eAhBS,IAAI98B,GAAG,CAAC,CAAC;IAInC8R,mCAAA,OAAS8qB,wBAAe;IActBU,KAAK,CAACv8B,OAAO,CAAC,CAAC;MAAE/a,IAAI;MAAEu3C;IAAS,CAAC,EAAE1mC,CAAC,KAAK,IAAI,CAAC2mC,OAAO,CAACx3C,IAAI,EAAEu3C,QAAQ,EAAE1mC,CAAC,KAAK,CAAC,CAAC,CAAC;IAE/Ekb,8BAAA,CAAK6qB,wBAAe,EAApB,IAAI,EAAmB;MACrBtgC,MAAM,EAAEpL,aAAa,CAAC,MAAM,IAAI,CAACusC,GAAG,CAAC;MACrChI,UAAU,EAAEvkC,aAAa,CAAC,MAAM,IAAI,CAACwsC,WAAW,CAAC;MACjDp0C,SAAS,EAAE4H,aAAa,CAAC,MAAM,IAAI,CAACysC,eAAe,CAAC,CAAC;IACvD,CAJmB,CAAC;EAKtB;;EAEA;EACA;EACA;EACA,IAAID,WAAWA,CAAA,EAAiB;IAC9B,IAAI,IAAI,CAACX,QAAQ,CAACtH,UAAU,IAAI,IAAI,EAAE;MACpC,MAAM,IAAIpvC,aAAa,CAAC,oDAAoD,CAAC;IAC/E;IACA,OAAO,IAAI,CAAC02C,QAAQ,CAACtH,UAAU;EACjC;EAEA,IAAIgI,GAAGA,CAAA,EAAS;IACd,IAAI,CAACG,mBAAmB,CAAC,CAAC;IAC1B,OAAO,IAAI,CAACC,IAAI,CAACzgC,GAAG,CAAC,IAAI,CAAC0gC,gBAAgB,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEN,OAAOA,CAACx3C,IAAY,EAAEggB,IAAU,EAAE+3B,MAAM,GAAG,KAAK,EAAQ;IACtD,IAAI,IAAI,CAACF,IAAI,CAAChjB,GAAG,CAAC70B,IAAI,CAAC,EAAE,MAAM,IAAI+F,kBAAkB,CAAC/F,IAAI,CAAC;IAE3D,IAAI,CAAC63C,IAAI,CAACpgC,GAAG,CAACzX,IAAI,EAAEggB,IAAI,CAAC;IACzB,IAAI+3B,MAAM,IAAI,IAAI,CAACD,gBAAgB,IAAI,IAAI,EAAE;MAC3C,IAAI,CAACE,UAAU,CAACh4C,IAAI,CAAC;IACvB;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEg4C,UAAUA,CAACh4C,IAAY,EAAQ;IAC7B,IAAI,CAAC,IAAI,CAAC63C,IAAI,CAAChjB,GAAG,CAAC70B,IAAI,CAAC,EAAE,MAAM,IAAIgG,iBAAiB,CAAC,kBAAkBhG,IAAI,cAAc,CAAC;IAC3F,IAAI,CAAC83C,gBAAgB,GAAG93C,IAAI;EAC9B;;EAEA;AACF;AACA;AACA;AACA;EACEi4C,eAAeA,CAAA,EAAqD;IAClE,OAAO,IAAI,CAACH,gBAAgB,IAAI,IAAI;EACtC;EAEUF,mBAAmBA,CAAA,EAA6D;IACxF,IAAI,CAAC,IAAI,CAACK,eAAe,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIjyC,iBAAiB,CAAC,+DAA+D,CAAC;IAC9F;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMyX,WAAWA,CAAA,EAAsB;IACrC,IAAI,CAACm6B,mBAAmB,CAAC,CAAC;IAC1B,OAAO;MACL53C,IAAI,EAAE,IAAI,CAAC83C,gBAAgB;MAC3B,IAAI,MAAM,IAAI,CAACL,GAAG,CAACh6B,WAAW,CAAC,CAAC;IAClC,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMy6B,cAAcA,CAAA,EAAwB;IAC1C,OAAOzuC,OAAO,CAACqnB,GAAG,CAChBnW,KAAK,CAACtQ,IAAI,CAAC,IAAI,CAACwtC,IAAI,CAAC7tC,OAAO,CAAC,CAAC,CAAC,CAAC1E,GAAG,CAAC,OAAO,CAACtF,IAAI,EAAEggB,IAAI,CAAC,MAAM;MAC3DhgB,IAAI;MACJ,IAAI,MAAMggB,IAAI,CAACvC,WAAW,CAAC,CAAC;IAC9B,CAAC,CAAC,CACJ,CAAC;EACH;;EAEA;EACA06B,SAASA,CAAA,EAA6B;IACpC,OAAO,EAAE;EACX;;EAEA;AACF;AACA;AACA;EACER,eAAeA,CAAC7M,OAAkB,GAAG,IAAI,CAACiM,QAAQ,CAACzzC,SAAS,EAAe;IACzE,IAAI,OAAOwnC,OAAO,KAAK,QAAQ,EAAE,MAAM,IAAI/oC,mBAAmB,CAAC,4BAA4B,CAAC;IAC5F,IAAI,OAAO+oC,OAAO,KAAK,QAAQ,EAAE,OAAOA,OAAO;IAC/C,MAAM,IAAIlpC,gBAAS,CACjB,qDAAqD,GACnD,mCAAmC8wB,MAAM,CAACoY,OAAO,CAAC,UACtD,CAAC;EACH;EAEA,IAAIroC,OAAOA,CAAA,EAA2B;IACpC,OAAO,IAAI,CAACk1C,eAAe,CAAC,CAAC,CAACl1C,OAAO;EACvC;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM6O,IAAIA,CACRlD,IAAyB,EACzB;IAAE9K,SAAS;IAAE,GAAG4T;EAAmC,CAAC,GAAG,CAAC,CAAC,EACpC;IACrB,OAAO,IAAI,CAACygC,eAAe,CAACr0C,SAAS,CAAC,CAACgO,IAAI,CAAClD,IAAI,EAAE8I,OAAO,CAAC;EAC5D;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMwyB,eAAeA,CACnB5xB,EAAuB,EACvB;IACExU,SAAS;IACT,GAAG4T;EACsE,CAAC,GAAG,CAAC,CAAC,EACnD;IAC9B,MAAMimB,SAAS,GAAG,IAAI,CAAC2a,gBAAgB,KAAK,IAAI,GAAG,MAAM,IAAI,CAACL,GAAG,CAAC9gC,YAAY,CAAC,CAAC,GAAG5F,SAAS;IAC5F,OAAO,IAAI,CAAC4mC,eAAe,CAACr0C,SAAS,CAAC,CAAComC,eAAe,CAAC5xB,EAAE,EAAE;MAAEqlB,SAAS;MAAE,GAAGjmB;IAAQ,CAAC,CAAC;EACvF;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM0yB,WAAWA,CACf7pC,OAAe,EACf;IACEuD,SAAS;IACT,GAAG4T;EACkE,CAAC,GAAG,CAAC,CAAC,EACxD;IACrB,OAAO,IAAI,CAACygC,eAAe,CAACr0C,SAAS,CAAC,CAACsmC,WAAW,CAAC7pC,OAAO,EAAEmX,OAAO,CAAC;EACtE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM2yB,aAAaA,CACjBz7B,IAA+B,EAC/B46B,GAAgD,EAChD;IACE1lC,SAAS;IACT,GAAG4T;EACoE,CAAC,GAAG,CAAC,CAAC,EACnD;IAC5B,OAAO,IAAI,CAACygC,eAAe,CAACr0C,SAAS,CAAC,CAACumC,aAAa,CAACz7B,IAAI,EAAE46B,GAAG,EAAE9xB,OAAO,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM6yB,cAAcA,CAClBC,UAA6B,EAC7B;IACE1mC,SAAS;IACT,GAAG4T;EACqE,CAAC,GAAG,CAAC,CAAC,EACpD;IAAA,IAAAkhC,kBAAA;IAC5B,CAAAA,kBAAA,GAAAlhC,OAAO,CAACimB,SAAS,cAAAib,kBAAA,cAAAA,kBAAA,GAAjBlhC,OAAO,CAACimB,SAAS,GACf,IAAI,CAAC2a,gBAAgB,KAAK,IAAI,GAAG,MAAM,IAAI,CAACL,GAAG,CAAC9gC,YAAY,CAAC,CAAC,GAAG5F,SAAS;IAC5E,OAAO,IAAI,CAAC4mC,eAAe,CAACr0C,SAAS,CAAC,CAACymC,cAAc,CAACC,UAAU,EAAE9yB,OAAO,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACW8/B,UAAUA,CAACC,SAA8B,GAAG,CAAC,CAAC,EAAwC;IAC7F,OAAO;MACL,GAAG,IAAI,CAACF,QAAQ;MAChB,GAAGprB,8BAAA,CAAKirB,wBAAe,EAApB,IAAmB,CAAC;MACvB,GAAGK,SAAS;MACZ,IAAIA,SAAS,CAAC3zC,SAAS,IAAI,IAAI,IAAI;QACjCA,SAAS,EAAE,IAAI,CAACq0C,eAAe,CAACV,SAAS,CAAC3zC,SAAS;MACrD,CAAC;IACH,CAAC;EACH;AACF;;;AC7PuC;AAGc;AACO;AAE7C,MAAM+0C,KAAK,SAAShB,SAAS,CAAC;EAK3C;AACF;AACA;EACEv3C,WAAWA,CAAC;IACV4a,QAAQ;IACR,GAAGxD;EACsE,CAAC,GAAG,CAAC,CAAC,EAAE;IACjF,KAAK,CAACA,OAAO,CAAC;IAAC4/B,wBAAA,mBAX0C,CAAC,CAAC;IAY3Dp8B,QAAQ,EAAEK,OAAO,CAAC,CAAC+vB,OAAO,EAAE1vB,GAAG,KAAK,IAAI,CAACk9B,UAAU,CAACxN,OAAO,EAAE;MAAEiN,MAAM,EAAE38B,GAAG,KAAK;IAAE,CAAC,CAAC,CAAC;EACtF;EAESu8B,eAAeA,CAAC7M,OAAkB,GAAG,IAAI,CAACyN,eAAe,EAAe;IAC/E,IAAI,OAAOzN,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAMroC,OAAO,GAAGqoC,OAAiC;MACjD97B,MAAM,CAACvM,OAAO,CAAC;MACf,IAAI,IAAI,CAACiY,QAAQ,CAACjY,OAAO,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,uBAAuB,CAACsoC,OAAO,CAAC;MAC9EA,OAAO,GAAG,IAAI,CAACpwB,QAAQ,CAACjY,OAAO,CAAC;IAClC;IACA,OAAO,KAAK,CAACk1C,eAAe,CAAC7M,OAAO,CAAC;EACvC;;EAEA;AACF;AACA;AACA;EACWqN,SAASA,CAAA,EAA6B;IAC7C,OAAOruC,MAAM,CAAC0T,IAAI,CAAC,IAAI,CAAC9C,QAAQ,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE49B,UAAUA,CAACxN,OAAoB,EAAE;IAAEiN;EAA6B,CAAC,GAAG,CAAC,CAAC,EAAQ;IAC5E,MAAM;MAAEt1C;IAAQ,CAAC,GAAGqoC,OAAO;IAC3B,IAAI,CAACpwB,QAAQ,CAACjY,OAAO,CAAC,GAAGqoC,OAAO;IAChC,IAAIiN,MAAM,KAAK,IAAI,EAAE,IAAI,CAACS,aAAa,CAAC/1C,OAAO,CAAC;EAClD;;EAEA;AACF;AACA;AACA;AACA;EACEg2C,aAAaA,CAACh2C,OAA+B,EAAQ;IACnD,IAAI,IAAI,CAACiY,QAAQ,CAACjY,OAAO,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,uBAAuB,CAACC,OAAO,CAAC;IAC9E,OAAO,IAAI,CAACiY,QAAQ,CAACjY,OAAO,CAAC,CAAC,CAAC;IAC/B,IAAI,IAAI,CAAC81C,eAAe,KAAK91C,OAAO,EAAE,OAAO,IAAI,CAAC81C,eAAe;EACnE;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CAAC/1C,OAA+B,EAAQ;IACnDuM,MAAM,CAACvM,OAAO,CAAC;IACf,IAAI,IAAI,CAACiY,QAAQ,CAACjY,OAAO,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,uBAAuB,CAACC,OAAO,CAAC;IAC9E,IAAI,CAAC81C,eAAe,GAAG91C,OAAO;EAChC;AACF;;;AC1EA;;AAE8D;;AAE9D;AACA;AACA;AACO,IAAWi2C,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;;AAKnC;AACA;AACA;AACO,IAAWC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;;AAK7B;AACA;AACA;AACO,IAAWC,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;;AAKpC;AACA;AACA;AACO,IAAWC,OAAO,0BAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAA,OAAPA,OAAO;AAAA;;AAezB;AACA;AACA;AACO,IAAWC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAY5B,MAAMC,SAAmE,GAAG,EAAE;;AAE9E;AACA;AACA;AACO,MAAeC,QAAQ,SAASp5C,SAAS,CAAC;EAO/Cq5C,MAAMA,CAAA,EAAmB;IACvB,OAAO;MACLhyB,IAAI,EAAE,IAAI,CAACA,IAAI;MACflnB,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBqO,IAAI,EAAE,IAAI,CAACA;IACb,CAAC;EACH;EAEA,OAAOsP,WAAWA,CAACw7B,IAAoB,EAAY;IACjD,MAAMC,MAAM,GAAGJ,SAAS,CAACnwC,IAAI,CAAEwwC,EAAE,IAAKA,EAAE,CAACnyB,IAAI,KAAKiyB,IAAI,CAACjyB,IAAI,CAAC;IAC5D,IAAIkyB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI72C,aAAa,CAAC,kCAAkC42C,IAAI,CAACjyB,IAAI,EAAE,CAAC;IAC1F,OAAO,IAAIkyB,MAAM,CAACD,IAAI,CAAC9qC,IAAI,CAAC;EAC9B;AACF;;AAEA;AACA;AACA;AACO,MAAMirC,0BAA0B,SAASL,QAAQ,CAAC;EAKvDl5C,WAAWA,CAACsO,IAAU,EAAE;IACtB,KAAK,CAAC,qBAAqB,CAAC;IAAC0oC,wBAAA,eAHf,CAAC;IAIf,IAAI,CAAC1oC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACpO,IAAI,GAAG,4BAA4B;EAC1C;AACF;AAAC82C,wBAAA,CAVYuC,0BAA0B,UACd,CAAC;AAU1BN,SAAS,CAACp9B,IAAI,CAAC09B,0BAA0B,CAAC;;AAE1C;AACA;AACA;AACO,MAAMC,sBAAsB,SAASN,QAAQ,CAAC;EAKnDl5C,WAAWA,CAACsO,IAAU,EAAE;IACtB,KAAK,CAAC,4BAA4B,CAAC;IAAC0oC,wBAAA,eAHtB,CAAC;IAIf,IAAI,CAAC1oC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACpO,IAAI,GAAG,wBAAwB;EACtC;AACF;AAAC82C,wBAAA,CAVYwC,sBAAsB,UACV,CAAC;AAU1BP,SAAS,CAACp9B,IAAI,CAAC29B,sBAAsB,CAAC;;AAEtC;AACA;AACA;AACO,MAAMC,2BAA2B,SAASP,QAAQ,CAAC;EAKxDl5C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,8BAA8B,CAAC;IAACg3C,wBAAA,eAHxB,CAAC;IAIf,IAAI,CAAC92C,IAAI,GAAG,6BAA6B;EAC3C;AACF;AAAC82C,wBAAA,CATYyC,2BAA2B,UACf,CAAC;AAS1BR,SAAS,CAACp9B,IAAI,CAAC49B,2BAA2B,CAAC;;AAE3C;AACA;AACA;AACO,MAAMC,sBAAsB,SAASR,QAAQ,CAAC;EAKnDl5C,WAAWA,CAACsO,IAAU,EAAE;IACtB,KAAK,CAAC,qCAAqC,CAAC;IAAC0oC,wBAAA,eAH/B,CAAC;IAIf,IAAI,CAAC1oC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACpO,IAAI,GAAG,wBAAwB;EACtC;AACF;AAAC82C,wBAAA,CAVY0C,sBAAsB,UACV,CAAC;AAU1BT,SAAS,CAACp9B,IAAI,CAAC69B,sBAAsB,CAAC;;AAEtC;AACA;AACA;AACO,MAAMC,oBAAoB,SAAST,QAAQ,CAAC;EAKjDl5C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,qCAAqC,CAAC;IAACg3C,wBAAA,eAH/B,EAAE;IAIhB,IAAI,CAAC92C,IAAI,GAAG,sBAAsB;EACpC;AACF;AAAC82C,wBAAA,CATY2C,oBAAoB,UACR,EAAE;AAS3BV,SAAS,CAACp9B,IAAI,CAAC89B,oBAAoB,CAAC;;AAEpC;AACA;AACA;AACO,MAAMC,sBAAsB,SAASV,QAAQ,CAAC;EAKnDl5C,WAAWA,CAAC2C,OAA+B,EAAE;IAC3C,KAAK,CAAC,sCAAsCA,OAAO,EAAE,CAAC;IAACq0C,wBAAA,eAHzC,EAAE;IAIhB,IAAI,CAAC1oC,IAAI,GAAG3L,OAAO;IACnB,IAAI,CAACzC,IAAI,GAAG,wBAAwB;EACtC;AACF;AAAC82C,wBAAA,CAVY4C,sBAAsB,UACV,EAAE;AAU3BX,SAAS,CAACp9B,IAAI,CAAC+9B,sBAAsB,CAAC;;AAEtC;AACA;AACA;AACO,MAAMC,gBAAgB,SAASX,QAAQ,CAAC;EAK7Cl5C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,8DAA8D,CAAC;IAACg3C,wBAAA,eAHxD,EAAE;IAIhB,IAAI,CAAC92C,IAAI,GAAG,kBAAkB;EAChC;AACF;AAAC82C,wBAAA,CATY6C,gBAAgB,UACJ,EAAE;AAS3BZ,SAAS,CAACp9B,IAAI,CAACg+B,gBAAgB,CAAC;;AAEhC;AACA;AACA;AACO,MAAMC,gBAAgB,SAASZ,QAAQ,CAAC;EAK7Cl5C,WAAWA,CAACq9B,SAAiB,EAAE;IAC7B,KAAK,CAAC,sCAAsCA,SAAS,GAAG,CAAC;IAAC2Z,wBAAA,eAH5C,EAAE;IAIhB,IAAI,CAAC1oC,IAAI,GAAG+uB,SAAS;IACrB,IAAI,CAACn9B,IAAI,GAAG,kBAAkB;EAChC;AACF;AAAC82C,wBAAA,CAVY8C,gBAAgB,UACJ,EAAE;AAU3Bb,SAAS,CAACp9B,IAAI,CAACi+B,gBAAgB,CAAC;;AAEhC;AACA;AACA;AACO,MAAMC,sBAAsB,SAASb,QAAQ,CAAC;EAKnDl5C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,kBAAkB,CAAC;IAACg3C,wBAAA,eAHZ,CAAC,KAAK;IAIpB,IAAI,CAAC92C,IAAI,GAAG,wBAAwB;EACtC;AACF;AAAC82C,wBAAA,CATY+C,sBAAsB,UACV,CAAC,KAAK;AAS/Bd,SAAS,CAACp9B,IAAI,CAACk+B,sBAAsB,CAAC;;AClOF;AAC6B;AACY;AACL;AAIxE;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,UAAU,SAAS9R,WAAW,CAAC;EAKlDloC,WAAWA,CAACi6C,SAAwC,EAAEt3C,OAA+B,EAAE;IACrF,KAAK,CAAC,CAAC;IACP,IAAI,CAACu3C,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACt3C,OAAO,GAAGA,OAAO;EACxB;EAEA,MAAM6O,IAAIA,CAAC2oC,OAA4B,EAAuB;IAC5D,MAAM7rC,IAAI,GAAGW,MAAM,CAAC7E,MAAM,CAACG,IAAI,CAAC4vC,OAAO,CAAC,EAAEpuC,QAAQ,CAACmB,SAAS,CAAC;IAC7D,MAAM;MAAEqE;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC2oC,UAAU,CAAClnB,OAAO,CAAC+lB,OAAO,CAACqB,UAAU,EAAE;MACtE52C,SAAS,EAAE,IAAI,CAACb,OAAO;MACvB2L;IACF,CAAC,CAAC;IACF,OAAOY,MAAM,CAACqC,SAAS,CAAC;EAC1B;EAEA,MAAeq4B,eAAeA,CAC5B5xB,EAAuB,EACvB;IAAEoxB,OAAO;IAAE/L;EAAyD,CAAC,GAAG,CAAC,CAAC,EAC5C;IAC9B,IAAIA,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIx8B,aAAa,CAAC,WAAW,EAAE,UAAU,EAAEw8B,SAAS,CAAC;IAClF,MAAM3xB,GAAG,GAAG,MAAM,IAAI,CAACwuC,UAAU,CAAClnB,OAAO,CAAC+lB,OAAO,CAACvnC,IAAI,EAAE;MACtDhO,SAAS,EAAE,IAAI,CAACb,OAAO;MACvBqV,EAAE;MACFqiC,YAAY,EAAE,IAAI;MAClBhd,SAAS;MACT+L;IACF,CAAC,CAAC;IACF,IAAI19B,GAAG,CAAC4uC,iBAAiB,IAAI,IAAI,EAAE;MACjC,MAAM,IAAIt4C,wBAAwB,CAAC,gDAAgD,CAAC;IACtF;IACA,OAAO0J,GAAG,CAAC4uC,iBAAiB;EAC9B;EAEA,MAAexQ,WAAWA,CAAC7pC,OAAe,EAAuB;IAC/D,MAAM;MAAEsR;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC2oC,UAAU,CAAClnB,OAAO,CAAC+lB,OAAO,CAACjP,WAAW,EAAE;MACvEtmC,SAAS,EAAE,IAAI,CAACb,OAAO;MACvB1C;IACF,CAAC,CAAC;IACF,OAAOmK,MAAM,CAACG,IAAI,CAACgH,SAAS,EAAE,KAAK,CAAC;EACtC;EAEA,MAAew4B,aAAaA,CAC1Bz7B,IAA+B,EAC/B46B,GAAgD,EAChD;IAAEhpC,IAAI;IAAEkC,OAAO;IAAEoC,eAAe;IAAE64B;EAAuD,CAAC,GAAG,CAAC,CAAC,EACnE;IAC5B,MAAM;MAAE9rB;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC2oC,UAAU,CAAClnB,OAAO,CAAC+lB,OAAO,CAAChP,aAAa,EAAE;MACzEvmC,SAAS,EAAE,IAAI,CAACb,OAAO;MACvB8lC,MAAM,EAAE;QACNvoC,IAAI;QACJkC,OAAO;QACPi7B,SAAS;QACT74B;MACF,CAAC;MACD0kC,GAAG;MACH56B;IACF,CAAC,CAAC;IACF,OAAOiD,SAAS;EAClB;EAEA,MAAe04B,cAAcA,CAACC,UAA6B,EAA8B;IACvF,MAAM;MAAE34B;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC2oC,UAAU,CAAClnB,OAAO,CAAC+lB,OAAO,CAAC9O,cAAc,EAAE;MAC1EC,UAAU;MACV1mC,SAAS,EAAE,IAAI,CAACb;IAClB,CAAC,CAAC;IACF,OAAO4O,SAAS;EAClB;AACF;;ACpFwE;AA6BjE,MAAMgpC,WAAW,GAAG,CAAC;;;;;;;;AC/BsD;AAEG;AAClC;AAAA,IAAAC,UAAA,oBAAAvjC,OAAA;AAAA,IAAAwjC,UAAA,oBAAAxjC,OAAA;AAAA,IAAAyjC,QAAA,oBAAAzjC,OAAA;AAAA,IAAA0jC,gBAAA,oBAAAjvB,OAAA;AA2BnD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkvB,SAAS,CAG5B;EAYA56C,WAAWA,CACT66C,UAA6B,EAC7BC,YAAwB,EACxBjE,OAA6B,EAC7B;IAAA9qB,oCAAA,OAAA4uB,gBAAA;IAbF3uB,mCAAA,OAASwuB,UAAU,EAAG,IAAItgC,GAAG,CAG3B,CAAC;IAEH8R,mCAAA,OAAAyuB,UAAU,EAAG,CAAC;IAEdzuB,mCAAA,OAAS0uB,QAAQ;IAOf,IAAI,CAACG,UAAU,GAAGA,UAAU;IAC5B5uB,8BAAA,CAAKyuB,QAAQ,EAAb,IAAI,EAAY7D,OAAJ,CAAC;IACbgE,UAAU,CAACE,OAAO,CAACpuB,0BAAA,CAAAguB,gBAAA,MAAI,EAACK,cAAa,CAAC,CAACpvC,IAAI,CAAC,IAAI,CAAC,EAAEkvC,YAAY,CAAC;EAClE;EA0DA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM9nB,OAAOA,CACX9yB,IAAU,EACVod,MAAsC,EACA;IACtCqP,0BAAA,CAAAguB,gBAAA,MAAI,EAACM,YAAW,CAAC,CAAA93B,IAAA,CAAjB,IAAI,EAAe8I,8BAAA,CAAKwuB,UAAU,EAAf,IAAI,EAAJ5uB,8BAAA,CAAK4uB,UAAU,EAAf,IAAc,CAAC,GAAI,CAAL,CAAC,EAAQv6C,IAAI,EAAEod,MAAM;IACtD,OAAO,IAAI3T,OAAO,CAAC,CAACC,OAAO,EAAEsR,MAAM,KAAK;MACtC2Q,8BAAA,CAAK2uB,UAAU,EAAf,IAAc,CAAC,CAAC7iC,GAAG,CAACkU,8BAAA,CAAK4uB,UAAU,EAAf,IAAc,CAAC,EAAE;QAAE7wC,OAAO;QAAEsR;MAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEggC,MAAMA,CAA+Bh7C,IAAU,EAAEod,MAAsC,EAAQ;IAC7FqP,0BAAA,CAAAguB,gBAAA,MAAI,EAACM,YAAW,CAAC,CAAA93B,IAAA,CAAjB,IAAI,EAAclS,SAAS,EAAE/Q,IAAI,EAAEod,MAAM;EAC3C;;EAEA;AACF;AACA;AACA;AAQA;AAAC,eAAA09B,eA5FsBnpC,GAAqC,EAAEspC,MAAc,EAAiB;EACzF,IAAItpC,GAAG,EAAEupC,OAAO,KAAK,KAAK,EAAE,MAAM,IAAIh4C,sBAAsB,CAAC+wB,IAAI,CAACC,SAAS,CAACviB,GAAG,CAAC,CAAC;EACjF,IAAI,QAAQ,IAAIA,GAAG,IAAI,OAAO,IAAIA,GAAG,EAAE;IACrC8a,0BAAA,CAAAguB,gBAAA,MAAI,EAACU,gBAAe,CAAC,CAAAl4B,IAAA,CAArB,IAAI,EAAkBtR,GAAG;IACzB;EACF;EAEA,MAAMmhB,OAAO,GAAGnhB,GAAqB;EACrC,IAAI0D,MAAM;EACV,IAAI/K,KAAwB;EAC5B,IAAI;IACF,IAAI,EAAEwoB,OAAO,CAACkB,MAAM,IAAIrI,8BAAA,CAAK6uB,QAAQ,EAAb,IAAY,CAAC,CAAC,EAAE,MAAM,IAAIX,sBAAsB,CAAC,CAAC;IAC1E,MAAMuB,UAAU,GAAGtoB,OAAO,CAACkB,MAAwB;IACnD3e,MAAM,GAAG,MAAMsW,8BAAA,CAAK6uB,QAAQ,EAAb,IAAY,CAAC,CAACY,UAAU,CAAC,CAACtoB,OAAO,CAAC1V,MAAM,EAAE69B,MAAM,CAAC;EAClE,CAAC,CAAC,OAAO/xC,CAAC,EAAE;IACV+B,WAAW,CAAC/B,CAAC,CAAC;IACdoB,KAAK,GAAGpB,CAAC;EACX;EACA,IAAI4pB,OAAO,CAAC1vB,EAAE,IAAI,IAAI,EAAE;IACtBqpB,0BAAA,CAAAguB,gBAAA,MAAI,EAACY,aAAY,CAAC,CAAAp4B,IAAA,CAAlB,IAAI,EACF6P,OAAO,CAAC1vB,EAAE,EACV0vB,OAAO,CAACkB,MAAM,EACd3e,MAAM,EACN/K,KAAK,IAAI,IAAI,IAAIA,KAAK,YAAY0uC,QAAQ,GAAG1uC,KAAK,GAAG,IAAIqvC,gBAAgB,CAAC,CAAC;EAE/E;EACA,IAAIrvC,KAAK,IAAI,IAAI,IAAI,EAAEA,KAAK,YAAY0uC,QAAQ,CAAC,EAAE,MAAM1uC,KAAK;AAChE;AAAC,SAAAywC,aAGC33C,EAAsB,EACtB4wB,MAAwC,EACxC5W,MAAY,EACN;EACN,IAAI,CAACu9B,UAAU,CAACW,WAAW,CAAC;IAC1BJ,OAAO,EAAE,KAAK;IACd,IAAI93C,EAAE,IAAI,IAAI,GAAG;MAAEA;IAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B4wB,MAAM;IACN,IAAI5W,MAAM,IAAI,IAAI,GAAG;MAAEA;IAAO,CAAC,GAAG,CAAC,CAAC;EACtC,CAAC,CAAC;AACJ;AAAC,SAAAi+B,cAGCj4C,EAAU,EACV4wB,MAAwC;AAAE;AAC1C3e,MAAY,EACZ/K,KAAgB,EACV;EACN,IAAI,CAACqwC,UAAU,CAACW,WAAW,CAAC;IAC1BJ,OAAO,EAAE,KAAK;IACd93C,EAAE;IACF4wB,MAAM;IACN,IAAI1pB,KAAK,IAAI,IAAI,GAAG;MAAEA,KAAK,EAAEA,KAAK,CAAC2uC,MAAM,CAAC;IAAE,CAAC,GAAG;MAAE5jC;IAAO,CAAC;EAC5D,CAAC,CAAC;AACJ;AAAC,SAAA8lC,iBA+BgB;EAAE/3C,EAAE;EAAEkH,KAAK;EAAE+K;AAAkD,CAAC,EAAQ;EACvF,MAAMkmC,SAAS,GAAG5vB,8BAAA,CAAK2uB,UAAU,EAAf,IAAc,CAAC,CAACljC,GAAG,CAAChU,EAAE,CAAC;EACzC,IAAIm4C,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIp4C,oBAAoB,CAACC,EAAE,CAAC;EACzD,IAAIkH,KAAK,IAAI,IAAI,EAAEixC,SAAS,CAACvgC,MAAM,CAACg+B,QAAQ,CAACt7B,WAAW,CAACpT,KAAK,CAAC,CAAC,CAAC,KAC5DixC,SAAS,CAAC7xC,OAAO,CAAC2L,MAAM,CAAC;EAC9BsW,8BAAA,CAAK2uB,UAAU,EAAf,IAAc,CAAC,CAACngC,MAAM,CAAC/W,EAAE,CAAC;AAC5B;;ACzJqC;AAGG;AACW;AAUH;AACmB;AACe;AAOzD;AACE;AAG7B;AACA;AACA;AACA;AACA;AACA;AACe,MAAMo4C,SAAS,SAASnE,SAAS,CAAC;EAa/C;AACF;AACA;AACA;AACA;AACA;AACA;EACEv3C,WAAWA,CAAC;IACVE,IAAI;IACJy7C,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;IAC1Bb,YAAY,GAAGA,CAAA,KAAM,CAAC,CAAC;IACvBc,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;IAC1B,GAAG7nC;EAMwC,CAAC,EAAE;IAC9C,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC4nC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACb,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACc,eAAe,GAAGA,eAAe;IACtC,IAAI,CAAC17C,IAAI,GAAGA,IAAI;EAClB;EAES23C,eAAeA,CAAC7M,OAAkB,GAAG,IAAI,CAACqN,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAe;IAC9E,IAAI,OAAOrN,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAMroC,OAAO,GAAGqoC,OAAiC;MACjD97B,MAAM,CAACvM,OAAO,CAAC;MACf,IAAI,CAAC,IAAI,CAAC01C,SAAS,CAAC,CAAC,CAAC/4C,QAAQ,CAACqD,OAAO,CAAC,EAAE,MAAM,IAAIY,wBAAwB,CAACZ,OAAO,CAAC;MACpF,IAAI,CAACk5C,gBAAgB,CAAC,CAAC;MACvB7Q,OAAO,GAAG,IAAIgP,UAAU,CAAC,IAAI,CAACC,SAAS,EAAEt3C,OAAO,CAAC;IACnD;IACA,IAAIqoC,OAAO,IAAI,IAAI,EAAE,IAAI,CAAC8Q,oBAAoB,CAAC,CAAC;IAChD,OAAO,KAAK,CAACjE,eAAe,CAAC7M,OAAO,CAAC;EACvC;EAESqN,SAASA,CAAA,EAA6B;IAC7C,IAAI,IAAI,CAAC0D,SAAS,IAAI,IAAI,EAAE,OAAO,EAAE;IACrC,MAAMC,OAAO,GAAGhyC,MAAM,CAAC0T,IAAI,CAAC,IAAI,CAACq+B,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtD,OAAO,CACL,IAAIA,OAAO,IAAI,IAAI,GAAG,CAACA,OAAO,CAAC,GAAG,EAAE,CAAC,EACrC,GAAGhyC,MAAM,CAAC0T,IAAI,CAAC,IAAI,CAACq+B,SAAS,CAACpc,SAAS,CAAC,CACzC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMsc,eAAeA,CACnBpB,UAA6B,EAC7B;IAAEqB,WAAW,GAAG,KAAK;IAAEh8C,IAAI,GAAG;EAAwD,CAAC,GAAG,CAAC,CAAC,EAClD;IAC1C,IAAI,IAAI,CAAC+5C,SAAS,IAAI,IAAI,EACxB,MAAM,IAAIlzC,qBAAqB,CAAC,qCAAqC,CAAC;IACxE,IAAIo1C,gBAAqB;IAEzB,MAAMC,aAAa,GAAI9+B,MAAe,IAAW;MAC/C,IAAI4+B,WAAW,EAAE;QACf,IAAI5+B,MAAM,CAAC4C,IAAI,EAAEmU,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIptB,kBAAkB,CAAC,0BAA0B,CAAC;QACtF,IAAI,CAAC8wC,IAAI,CAAC19B,MAAM,CAACna,IAAI,CAAC;QACtB,IAAI,CAACw3C,OAAO,CAACx3C,IAAI,EAAE,IAAI8hC,IAAI,CAAC1kB,MAAM,CAAC4C,IAAI,CAACmU,GAAG,CAAC,EAAE,IAAI,CAAC;MACrD;MACA,IAAI,CAACunB,eAAe,CAACt+B,MAAM,CAAC;IAC9B,CAAC;IAED,MAAM++B,MAAM,GAAG,IAAIzB,SAAS,CAC1BC,UAAU,EACV,MAAM;MACJ,OAAO,IAAI,CAACZ,SAAS;MACrB,OAAO,IAAI,CAAC8B,SAAS;MACrB,IAAI,CAACjB,YAAY,CAACqB,gBAAgB,CAAC;IACrC,CAAC,EACD;MACE,CAACpD,OAAO,CAACuD,aAAa,GAAIh/B,MAAM,IAAK;QACnC,IAAI,CAACy+B,SAAS,GAAGz+B,MAAM;QACvB,IAAI,CAACq+B,eAAe,CAACr+B,MAAM,CAAC;MAC9B,CAAC;MACD,CAACy7B,OAAO,CAACqD,aAAa,GAAGA,aAAa;MACtC,CAACrD,OAAO,CAACwD,eAAe,GAAIj/B,MAAM,IAAK;QACrC6+B,gBAAgB,GAAG7+B,MAAM;QACzB++B,MAAM,CAACxB,UAAU,CAAC2B,UAAU,CAAC,CAAC;MAChC,CAAC;MACD,CAACzD,OAAO,CAAC0D,cAAc,GAAG,MAAM,CAAC;IACnC,CACF,CAAC;IACD,MAAMC,UAAU,GAAG,MAAML,MAAM,CAACrpB,OAAO,CAAC+lB,OAAO,CAACgC,OAAO,EAAE;MACvD76C,IAAI,EAAE,IAAI,CAACA,IAAI;MACfkC,OAAO,EAAEm4C,WAAW;MACpB2B;IACF,CAAC,CAAC;IACFE,aAAa,CAACM,UAAU,CAAC;IACzB,IAAI,CAACzC,SAAS,GAAGoC,MAAM;IACvB,OAAOK,UAAU;EACnB;;EAEA;AACF;AACA;EACEC,gBAAgBA,CAAA,EAAS;IACvB,IAAI,CAACd,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAAC5B,SAAS,CAACiB,MAAM,CAACnC,OAAO,CAACwD,eAAe,EAAE;MAAEnhC,MAAM,EAAE;IAAM,CAAC,CAAC;IACjE,IAAI,CAAC6+B,SAAS,CAACY,UAAU,CAAC2B,UAAU,CAAC,CAAC;EACxC;;EAEA;AACF;AACA;AACA;EACE,MAAMI,YAAYA,CAAA,EAAsC;IACtD,IAAI,CAACf,gBAAgB,CAAC,CAAC;IACvB,OAAO,IAAI,CAAC5B,SAAS,CAACjnB,OAAO,CAAC+lB,OAAO,CAACp2C,OAAO,EAAEsO,SAAS,CAAC;EAC3D;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM4rC,gBAAgBA,CACpBtuC,IAAwB,EACxB3G,KAA8B,EAC4B;IAC1D,IAAI,CAACi0C,gBAAgB,CAAC,CAAC;IACvB,MAAMtmC,MAAM,GAAG,MAAM,IAAI,CAAC0kC,SAAS,CAACjnB,OAAO,CAAC+lB,OAAO,CAAC8D,gBAAgB,EAAE;MAAEtuC,IAAI;MAAE3G;IAAM,CAAC,CAAC;IACtF,IAAI,CAACm0C,SAAS,GAAGxmC,MAAM,CAAC5S,OAAO;IAC/B,OAAO4S,MAAM;EACf;;EAEA;AACF;AACA;EACE,MAAMunC,kBAAkBA,CAACC,OAAwB,EAAiB;IAChE,IAAI,CAAClB,gBAAgB,CAAC,CAAC;IACvB,MAAM,IAAI,CAAC5B,SAAS,CAACjnB,OAAO,CAAC+lB,OAAO,CAACqD,aAAa,EAAEW,OAAO,CAAC;EAC9D;EAEAlB,gBAAgBA,CAAA,EAEd;IACA,IAAI,IAAI,CAAC5B,SAAS,IAAI,IAAI,EAAE;IAC5B,MAAM,IAAIjzC,sBAAsB,CAAC,iCAAiC,CAAC;EACrE;EAEA80C,oBAAoBA,CAAA,EAElB;IACA,IAAI,CAACD,gBAAgB,CAAC,CAAC;IACvB,IAAI,IAAI,CAACxD,SAAS,CAAC,CAAC,CAACtvC,MAAM,KAAK,CAAC,EAAE;IACnC,MAAM,IAAIrF,wBAAwB,CAAC,CAAC;EACtC;AACF;;;;;;;;;;AC3M6C;AACF;AASnB;AACmB;AACe;AACE;AAAA,IAAAw2C,UAAA,oBAAAjjC,OAAA;AAAA,IAAAgmC,+BAAA,oBAAAvxB,OAAA;AAAA,IAAAqwB,SAAA,oBAAA9kC,OAAA;AAQ7C,MAAeimC,wBAAwB,SAAuBF,oCAAY,CAEvF;EASA;AACF;AACA;EACE,IAAIG,WAAWA,CAAA,EAAY;IACzB,OAAOtxB,6CAAA,CAAKquB,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI;EAChC;EAIA;AACF;AACA;EACE,IAAIt/B,QAAQA,CAAA,EAAiB;IAC3B,OAAOiR,6CAAA,CAAKkwB,SAAS,EAAd,IAAa,CAAC;EACvB;EAEU/7C,WAAWA,CAAA,EAAG;IACtB,KAAK,CAAC,CAAC;IAAC+rB,mDAAA,OAAAkxB,+BAAA;IAzBVjxB,kDAAA,OAAAkuB,UAAU;IAeVluB,kDAAA,OAAA+vB,SAAS,EAAiB,EAAE;EAW5B;EAYA,aAAaqB,QAAQA,CACnBl9C,IAAY,EACZ26C,UAA6B,EAC7BwC,SAAwC,EACxCnB,WAAoB,EACL;IACf,IAAIC,gBAAqB;IAEzB,MAAME,MAAM,GAAG,IAAIzB,SAAS,CAC1BC,UAAU,EACV,MAAM;MACJ5uB,6CAAA,CAAUiuB,UAAU,EAApBmD,SAAS,EAAcpsC,SAAJ,CAAC;MACpBgb,6CAAA,CAAU8vB,SAAS,EAAnBsB,SAAS,EAAa,EAAJ,CAAC;MACnBA,SAAS,CAACC,IAAI,CAAC,YAAY,EAAEnB,gBAAgB,CAAC;IAChD,CAAC,EACD;MACE,CAACpD,OAAO,CAACuD,aAAa,GAAG3vB,yCAAA,CAAAswB,+BAAA,EAAAI,SAAS,EAACE,eAAc,CAAC,CAAC3xC,IAAI,CAACyxC,SAAS,CAAC;MAClE,CAACtE,OAAO,CAACqD,aAAa,GAAGiB,SAAS,CAACG,cAAc,CAAC5xC,IAAI,CAACyxC,SAAS,CAAC;MACjE,CAACtE,OAAO,CAACwD,eAAe,GAAIj/B,MAAM,IAAK;QACrC6+B,gBAAgB,GAAG7+B,MAAM;QACzB++B,MAAM,CAACxB,UAAU,CAAC2B,UAAU,CAAC,CAAC;MAChC,CAAC;MACD,CAACzD,OAAO,CAAC0D,cAAc,GAAG,MAAM,CAAC;IACnC,CACF,CAAC;IACDxwB,6CAAA,CAAUiuB,UAAU,EAApBmD,SAAS,EAAchB,MAAJ,CAAC;IACpB,MAAMK,UAAU,GAAG,MAAM7wB,6CAAA,CAAUquB,UAAU,EAApBmD,SAAmB,CAAC,CAACrqB,OAAO,CAAC+lB,OAAO,CAACgC,OAAO,EAAE;MACrE76C,IAAI;MACJkC,OAAO,EAAEm4C,WAAW;MACpB2B;IACF,CAAC,CAAC;IACFmB,SAAS,CAACG,cAAc,CAACd,UAAU,CAAC;EACtC;;EAEA;AACF;AACA;EACEF,UAAUA,CAAA,EAAS;IACjB,MAAMH,MAAM,GAAG1vB,yCAAA,CAAAswB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAt6B,IAAA,CAAlB,IAAI,CAAgB;IACnCk5B,MAAM,CAACnB,MAAM,CAACnC,OAAO,CAACwD,eAAe,EAAE;MAAEnhC,MAAM,EAAE;IAAM,CAAC,CAAC;IACzDihC,MAAM,CAACxB,UAAU,CAAC2B,UAAU,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;EACE,MAAMkB,WAAWA,CAAA,EAA0B;IACzC,MAAMrB,MAAM,GAAG1vB,yCAAA,CAAAswB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAt6B,IAAA,CAAlB,IAAI,CAAgB;IACnC,MAAMk1B,SAAS,GAAG,MAAMgE,MAAM,CAACrpB,OAAO,CAAC+lB,OAAO,CAACp2C,OAAO,EAAEsO,SAAS,CAAC;IAClE,OAAOonC,SAAS,CAAC7yC,GAAG,CAAE7C,OAAO,IAAK,IAAIq3C,UAAU,CAACqC,MAAM,EAAE15C,OAAO,CAAC,CAAC;EACpE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMg7C,iBAAiBA,CACrBpvC,IAAwB,EACxB3G,KAA8B,EACP;IACvB,MAAM2N,MAAM,GAAG,MAAMoX,yCAAA,CAAAswB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAt6B,IAAA,CAAlB,IAAI,EAAiB6P,OAAO,CAAC+lB,OAAO,CAAC8D,gBAAgB,EAAE;MAAEtuC,IAAI;MAAE3G;IAAM,CAAC,CAAC;IAC5F+kB,yCAAA,CAAAswB,+BAAA,MAAI,EAACM,eAAc,CAAC,CAAAp6B,IAAA,CAApB,IAAI,EAAiB5N,MAAM,CAAC5S,OAAO;IACnC,OAAOkpB,6CAAA,CAAKkwB,SAAS,EAAd,IAAa,CAAC;EACvB;;EAEA;AACF;AACA;EACE,MAAMe,kBAAkBA,CAACC,OAAwB,EAAiB;IAChE,MAAMpwB,yCAAA,CAAAswB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAt6B,IAAA,CAAlB,IAAI,EAAiB6P,OAAO,CAAC+lB,OAAO,CAACqD,aAAa,EAAEW,OAAO,CAAC;EACpE;AACF;AAAC,SAAAU,cAAA,EA7GgD;EAC7C,IAAI5xB,6CAAA,CAAKquB,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EACzB,MAAM,IAAIlzC,sBAAsB,CAAC,iCAAiC,CAAC;EACrE,OAAO6kB,6CAAA,CAAKquB,UAAU,EAAf,IAAc,CAAC;AACxB;AAAC,SAAAqD,gBAwBejgC,MAAgB,EAAQ;EACtC,MAAM+6B,SAAS,GAAG,CAChB,GAAG,IAAIv9B,GAAG,CAAC,CAAC,GAAG9Q,MAAM,CAAC0T,IAAI,CAACJ,MAAM,CAAC0+B,OAAO,CAAC,EAAE,GAAGhyC,MAAM,CAAC0T,IAAI,CAACJ,MAAM,CAACqiB,SAAS,CAAC,CAAC,CAAC,CACnD;EAC7B1T,6CAAA,CAAK8vB,SAAS,EAAd,IAAI,EAAa1D,SAAS,CAAC7yC,GAAG,CAAE7C,OAAO,IAAK,IAAIq3C,UAAU,CAACrtB,yCAAA,CAAAswB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAt6B,IAAA,CAAlB,IAAI,GAAkBxgB,OAAO,CAAC,CAA5E,CAAC;EACd,IAAI,CAAC26C,IAAI,CAAC,gBAAgB,EAAEzxB,6CAAA,CAAKkwB,SAAS,EAAd,IAAa,CAAC,CAAC;AAC7C;;;;;;;AC1DmE;AAAA,IAAA6B,UAAA,oBAAA3mC,OAAA;AAMrE;AACA;AACA;AACA;AACe,MAAM4mC,oBAAoB,SAASX,wBAAwB,CAAkB;EAAAl9C,YAAA,GAAAwL,IAAA;IAAA,SAAAA,IAAA;IAC1FwgB,8CAAA,OAAA4xB,UAAU,EAAG,EAAE;EAAC;EAEhB;AACF;AACA;EACE,IAAIvgB,SAASA,CAAA,EAAW;IACtB,OAAOxR,yCAAA,CAAK+xB,UAAU,EAAf,IAAc,CAAC;EACxB;EAEmBJ,cAAcA,CAAClgC,MAAe,EAAQ;IACvD2O,yCAAA,CAAK2xB,UAAU,EAAf,IAAI,EAActgC,MAAM,CAAC+f,SAAX,CAAC;IACf,IAAI,CAACigB,IAAI,CAAC,iBAAiB,EAAEzxB,yCAAA,CAAK+xB,UAAU,EAAf,IAAc,CAAC,CAAC;EAC/C;;EAEA;AACF;AACA;AACA;AACA;EACE,aAAa7C,OAAOA,CAAC76C,IAAY,EAAE26C,UAA6B,EAAiC;IAC/F,MAAMwC,SAAS,GAAG,IAAIQ,oBAAoB,CAAC,CAAC;IAC5C,MAAMA,oBAAoB,CAACT,QAAQ,CAACl9C,IAAI,EAAE26C,UAAU,EAAEwC,SAAS,EAAE,KAAK,CAAC;IACvE,OAAOA,SAAS;EAClB;AACF;;;;;;;ACpCwD;AAC1B;AAEuC;AAAA,IAAAS,KAAA,oBAAA7mC,OAAA;AAMrE;AACA;AACA;AACA;AACA;AACe,MAAM8mC,4BAA4B,SAASb,wBAAwB,CAAiB;EAAAl9C,YAAA,GAAAwL,IAAA;IAAA,SAAAA,IAAA;IACjGwgB,sDAAA,OAAA8xB,KAAK,EAAS,IAAI;EAAoB;EAEtC;AACF;AACA;EACE,IAAI59B,IAAIA,CAAA,EAAS;IACf,OAAO2L,iDAAA,CAAKiyB,KAAK,EAAV,IAAS,CAAC;EACnB;EAEmBN,cAAcA,CAAClgC,MAAe,EAAQ;IACvD,IAAIA,MAAM,CAAC4C,IAAI,EAAEmU,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIptB,kBAAkB,CAAC,0BAA0B,CAAC;IACtFglB,iDAAA,CAAK6xB,KAAK,EAAV,IAAI,EAAS,IAAI9b,IAAI,CAAC1kB,MAAM,CAAC4C,IAAI,CAACmU,GAAG,CAA5B,CAAC;IACV,IAAI,CAACipB,IAAI,CAAC,YAAY,EAAEzxB,iDAAA,CAAKiyB,KAAK,EAAV,IAAS,CAAC,CAAC;EACrC;;EAEA;AACF;AACA;AACA;AACA;EACE,aAAa/C,OAAOA,CAClB76C,IAAY,EACZ26C,UAA6B,EACU;IACvC,MAAMwC,SAAS,GAAG,IAAIU,4BAA4B,CAAC,CAAC;IACpD,MAAM,KAAK,CAACX,QAAQ,CAACl9C,IAAI,EAAE26C,UAAU,EAAEwC,SAAS,EAAE,IAAI,CAAC;IACvD,OAAOA,SAAS;EAClB;AACF;;;;;AC5CkC;AACO;AACF;AAEvC,MAAMY,OAAO,GAAGD,8BAAO,CAAC;EAAEE,aAAa,EAAE;AAAK,CAAC,CAAC;AAEhD,MAAMC,yBAAyB,GAAIv2C,KAAU,IAAU;EACrD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,CAAC5H,WAAW,KAAKgK,MAAM,EAAE;IAC/E,OAAOF,SAAS,CAAClC,KAAK,EAAE,CAAC,CAACmlB,CAAC,EAAE1jB,CAAC,CAAC,KAAK,CAAC0jB,CAAC,EAAEoxB,yBAAyB,CAAC90C,CAAC,CAAC,CAAC,CAAC;EACxE;EACA,IAAIwR,KAAK,CAACujC,OAAO,CAACx2C,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK,CAACpC,GAAG,CAAEuF,IAAI,IAAKozC,yBAAyB,CAACpzC,IAAI,CAAC,CAAC;EAC7D;EACA,IAAI,OAAOnD,KAAK,KAAK,QAAQ,IAAI,IAAIzI,gCAAS,CAACyI,KAAK,CAAC,CAAC1E,QAAQ,CAAC,EAAE,CAAC,KAAK0E,KAAK,EAAE;IAC5E,MAAMy2C,EAAE,GAAG,IAAIl/C,gCAAS,CAACyI,KAAK,CAAC;IAC/By2C,EAAE,CAAClF,MAAM,GAAG,MAAMkF,EAAE,CAACn7C,QAAQ,CAAC,EAAE,CAAC;IACjC,OAAOm7C,EAAE;EACX;EACA,OAAOz2C,KAAK;AACd,CAAC;AAED,+CAAe;EACbwsB,SAAS,EAAEA,CAAC,GAAG5oB,IAA+C,KAC5DyyC,OAAO,CAAC7pB,SAAS,CAAC+pB,yBAAyB,CAAC3yC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGA,IAAI,CAACmD,KAAK,CAAC,CAAC,CAAC,CAAC;EACzEm9B,KAAK,EAAEmS,OAAO,CAACnS;AACjB,CAAC;;;ACzB4B;AACE;AACmB;AACmB;AAUtB;AAC0B;AAWvB;AACqB;AAC7B;AAiC1C;AACA;AACA;AACA;AACe,MAAMwS,WAAW,SAAS/F,KAAK,CAAC;EAmB7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEv4C,WAAWA,CAAC;IACVE,IAAI;IACJoD,EAAE;IACFiL,IAAI;IACJgwC,YAAY;IACZC,cAAc;IACd1D,YAAY;IACZ2D,aAAa;IACbC,oBAAoB;IACpB,GAAGtnC;EAUoC,CAAC,EAAE;IAC1C,KAAK,CAACA,OAAO,CAAC;IAAC4/B,wBAAA,mBA5CN,IAAI98B,GAAG,CAAyB,CAAC;IA6C1C,IAAI,CAACqkC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAAC1D,YAAY,GAAGA,YAAY;IAChC,IAAI,CAAC2D,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACx+C,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACoD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACq7C,KAAK,GAAGpwC,IAAI;EACnB;EAEAqwC,qBAAqBA,CAAC;IAAEC;EAAoC,CAAC,EAAY;IACvE,MAAM;MAAE7C,OAAO;MAAErc;IAAU,CAAC,GAAG,IAAI,CAAC+d,WAAW,CAAC,CAAC;IACjD,OAAO;MACL1B,OAAO,EACL6C,mBAAmB,CAAC9pB,GAAG,CAAC,SAAS,CAAC,IAAI8pB,mBAAmB,CAAC9pB,GAAG,CAAC,WAAW,CAAC,GAAGinB,OAAO,GAAG,CAAC,CAAC;MAC3Frc,SAAS,EAAEkf,mBAAmB,CAAC9pB,GAAG,CAAC,WAAW,CAAC,GAAG4K,SAAS,GAAG,CAAC;IACjE,CAAC;EACH;EAEAmf,mBAAmBA,CAAA,EAAS;IAC1B,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,EAAE;IAC3BlkC,KAAK,CAACtQ,IAAI,CAAC,IAAI,CAACw0C,QAAQ,CAACrhC,IAAI,CAAC,CAAC,CAAC,CAC7BoC,MAAM,CAAEk/B,QAAQ,IAAK,IAAI,CAACC,qBAAqB,CAACD,QAAQ,CAAC,CAAC,CAC1Dx5C,GAAG,CAAEw5C,QAAQ,IAAK,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAAC,CAC5Cl/B,MAAM,CAAEu8B,MAAM,IAAKA,MAAM,CAACwC,mBAAmB,CAACM,IAAI,KAAK,CAAC,CAAC,CACzDlkC,OAAO,CAAEohC,MAAM,IACdA,MAAM,CAAC+C,GAAG,CAAClE,MAAM,CAACnC,OAAO,CAACuD,aAAa,EAAE,IAAI,CAACsC,qBAAqB,CAACvC,MAAM,CAAC,CAC7E,CAAC;EACL;EAES3D,aAAaA,CAAC/1C,OAA+B,EAAQ;IAC5D,KAAK,CAAC+1C,aAAa,CAAC/1C,OAAO,CAAC;IAC5B,IAAI,CAACm8C,mBAAmB,CAAC,CAAC;EAC5B;EAEStG,UAAUA,CAACxN,OAAoB,EAAE5zB,OAA4C,EAAQ;IAC5F,KAAK,CAACohC,UAAU,CAACxN,OAAO,EAAE5zB,OAAO,CAAC;IAClC,IAAI,CAAC0nC,mBAAmB,CAAC,CAAC;EAC5B;EAEAO,QAAQA,CAAA,EAA8B;IACpC,IAAI,CAACvH,mBAAmB,CAAC,CAAC;IAC1B,OAAO;MAAE53B,IAAI,EAAE;QAAEmU,GAAG,EAAE,IAAI,CAACsjB,GAAG,CAACtW,KAAK;QAAEnhC,IAAI,EAAE,IAAI,CAAC83C;MAAiB;IAAE,CAAC;EACvE;EAEA,MAAeE,UAAUA,CAACh4C,IAAY,EAAiB;IACrD,KAAK,CAACg4C,UAAU,CAACh4C,IAAI,CAAC;IACtB,MAAMm9B,SAAS,GAAG,MAAM,IAAI,CAACsa,GAAG,CAAC9gC,YAAY,CAAC,CAAC;IAC/CgE,KAAK,CAACtQ,IAAI,CAAC,IAAI,CAACw0C,QAAQ,CAACrhC,IAAI,CAAC,CAAC,CAAC,CAC7BoC,MAAM,CAAEk/B,QAAQ,IAAK,IAAI,CAACC,qBAAqB,CAACD,QAAQ,CAAC,CAAC,CAC1Dx5C,GAAG,CAAEw5C,QAAQ,IAAK,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAAC,CAC5C/jC,OAAO,CAAEohC,MAAM,IAAK;MACnBA,MAAM,CAAC+C,GAAG,CAAClE,MAAM,CAACnC,OAAO,CAACqD,aAAa,EAAE;QACvC/e,SAAS;QACT,IAAIgf,MAAM,CAACH,WAAW,IAAI,IAAI,CAACmD,QAAQ,CAAC,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEAH,UAAUA,CAACF,QAAgB,EAAkB;IAC3C,MAAM3C,MAAM,GAAG,IAAI,CAAC0C,QAAQ,CAACznC,GAAG,CAAC0nC,QAAQ,CAAC;IAC1C,IAAI3C,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI54C,qBAAqB,CAACu7C,QAAQ,CAAC;IAC7D,OAAO3C,MAAM;EACf;EAEA4C,qBAAqBA,CAACD,QAAgB,EAAW;IAC/C,OACEhG,UAAU,CAACsG,SAAS,KAAK,IAAI,CAACJ,UAAU,CAACF,QAAQ,CAAC,CAACxwB,MAAM,IACzD,IAAI,CAAC0wB,UAAU,CAACF,QAAQ,CAAC,CAACI,GAAG,CAACvE,UAAU,CAACsC,WAAW,CAAC,CAAC;EAE1D;EAEAoC,oBAAoBA,CAACP,QAAgB,EAAQ;IAC3C,MAAM3C,MAAM,GAAG,IAAI,CAAC6C,UAAU,CAACF,QAAQ,CAAC;IACxC3C,MAAM,CAAC+C,GAAG,CAACvE,UAAU,CAAC2B,UAAU,CAAC,CAAC;IAClCH,MAAM,CAAC7tB,MAAM,GAAGwqB,UAAU,CAACwG,YAAY;IACvCnD,MAAM,CAACwC,mBAAmB,GAAG,IAAI/jC,GAAG,CAAC,CAAC;EACxC;;EAEA;AACF;AACA;AACA;EACE2kC,eAAeA,CAACn8C,EAAU,EAAQ;IAChC,IAAI,CAACi8C,oBAAoB,CAACj8C,EAAE,CAAC;IAC7B,IAAI,CAACy7C,QAAQ,CAAC1kC,MAAM,CAAC/W,EAAE,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;EACEo8C,YAAYA,CAACC,gBAAmC,EAAU;IACxD;IACA;IACA,MAAMr8C,EAAE,GAAG8G,MAAM,CAACG,IAAI,CAACsF,wCAAgB,CAAC,CAAC,CAAC,CAAC,CAAC3M,QAAQ,CAAC,QAAQ,CAAC;IAC9D,IAAIi5C,gBAAqB;IACzB,MAAME,MAAsB,GAAG;MAC7B/4C,EAAE;MACFkrB,MAAM,EAAEwqB,UAAU,CAAC4G,8BAA8B;MACjDf,mBAAmB,EAAE,IAAI/jC,GAAG,CAAC,CAAC;MAC9BohC,WAAW,EAAE,KAAK;MAClBkD,GAAG,EAAE,IAAIxE,SAAS,CAChB+E,gBAAgB,EAChB,MAAM;QACJ,IAAI,CAACZ,QAAQ,CAAC1kC,MAAM,CAAC/W,EAAE,CAAC;QACxB,IAAI,CAACw3C,YAAY,CAACx3C,EAAE,EAAE64C,gBAAgB,CAAC,CAAC,CAAC;MAC3C,CAAC,EACD;QACE,CAACpD,OAAO,CAACwD,eAAe,GAAIj/B,MAAM,IAAK;UACrC6+B,gBAAgB,GAAG7+B,MAAM;UACzB,IAAI,CAACiiC,oBAAoB,CAACj8C,EAAE,CAAC;QAC/B,CAAC;QACD;QACA;QACA,CAACy1C,OAAO,CAACgC,OAAO,GAAG,OAAO;UAAE76C,IAAI;UAAEkC,OAAO;UAAEy9C,KAAK;UAAE3D;QAAY,CAAC,EAAEf,MAAM,KAAK;UAC1E,IAAI/4C,OAAO,KAAKm4C,WAAW,EAAE,MAAM,IAAId,2BAA2B,CAAC,CAAC;UAEpE,MAAM,IAAI,CAAC8E,YAAY,CAACj7C,EAAE,EAAE;YAAEpD,IAAI;YAAE2/C,KAAK;YAAE3D;UAAY,CAAC,EAAEf,MAAM,CAAC;UACjEkB,MAAM,CAAC7tB,MAAM,GAAGwqB,UAAU,CAACsG,SAAS;UACpCjD,MAAM,CAACH,WAAW,GAAGA,WAAW;UAChC,OAAO;YACL,IAAI,MAAM,IAAI,CAAC4D,aAAa,CAAC,CAAC,CAAC;YAC/B,IAAI5D,WAAW,IAAI,IAAI,CAACmD,QAAQ,CAAC,CAAC;UACpC,CAAC;QACH,CAAC;QACD,CAACtG,OAAO,CAAC8D,gBAAgB,GAAG,OAAO;UAAEtuC,IAAI;UAAE3G;QAAM,CAAC,EAAEuzC,MAAM,KAAK;UAC7D,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UAErE,QAAQprC,IAAI;YACV,KAAKuqC,kBAAkB,CAACiH,SAAS;cAC/B;cACA,MAAM,IAAI,CAACvB,cAAc,CAACl7C,EAAE,EAAE;gBAAEiL,IAAI;gBAAE3G;cAAM,CAAC,EAAEuzC,MAAM,CAAC;cACtDkB,MAAM,CAACwC,mBAAmB,CAACpK,GAAG,CAAC7sC,KAAK,CAAC;cACrC;YACF,KAAKkxC,kBAAkB,CAACkH,WAAW;cACjC3D,MAAM,CAACwC,mBAAmB,CAACxkC,MAAM,CAACzS,KAAK,CAAC;cACxC;YACF;cACE,MAAM,IAAIpF,aAAa,CAAC,8BAA8B+L,IAAI,EAAE,CAAC;UACjE;UAEA,OAAO;YACL0xC,YAAY,EAAEplC,KAAK,CAACtQ,IAAI,CAAC8xC,MAAM,CAACwC,mBAAmB,CAAC;YACpDl8C,OAAO,EAAE,IAAI,CAACi8C,qBAAqB,CAACvC,MAAM;UAC5C,CAAC;QACH,CAAC;QACD,CAACtD,OAAO,CAACp2C,OAAO,GAAG,OAAO2a,MAAM,EAAE69B,MAAM,KAAK;UAC3C,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,MAAM,IAAI,CAAC8E,aAAa,CAACn7C,EAAE,EAAEga,MAAM,EAAE69B,MAAM,CAAC;UAC5C,OAAO,IAAI,CAAC9C,SAAS,CAAC,CAAC;QACzB,CAAC;QACD,CAACU,OAAO,CAACvnC,IAAI,GAAG,OACd;UAAEwG,EAAE;UAAExU,SAAS,GAAG,IAAI,CAACb,OAAO;UAAE03C,YAAY;UAAEjR;QAAQ,CAAC,EACvD+R,MAAM,KACH;UACH,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAAC/4C,QAAQ,CAACkE,SAAS,CAAC,EAAE;YACzC,MAAM,IAAIo2C,sBAAsB,CAACp2C,SAAS,CAAC;UAC7C;UAEA,MAAMogB,UAAU,GAAG;YACjBpgB,SAAS;YACT08C,UAAU,EAAE/E,MAAM;YAClBgF,eAAe,EAAE78C,EAAE;YACnB8lC;UACF,CAAC;UACD,IAAIiR,YAAY,IAAIjR,OAAO,KAAK,IAAI,EAAE;YACpC,OAAO;cAAEkR,iBAAiB,EAAE,MAAM,IAAI,CAAC1Q,eAAe,CAAC5xB,EAAE,EAAE4L,UAAU;YAAE,CAAC;UAC1E;UACA,IAAI;YACF,OAAOq6B,QAAO,CAACnS,KAAK,CAClBmS,QAAO,CAAC7pB,SAAS,CAAC;cAChBgsB,eAAe,EAAE,MAAM,IAAI,CAACnU,eAAe,CAACj0B,EAAE,EAAE;gBAAE,GAAG4L,UAAU;gBAAEtS,MAAM,EAAE;cAAM,CAAC;YAClF,CAAC,CACH,CAAC;UACH,CAAC,CAAC,OAAO9G,KAAK,EAAE;YACd,MAAMwhC,UAAU,GAAG,MAAMd,iBAAiB,CAAClzB,EAAE,EAAE,IAAI,CAAC2/B,GAAG,CAAC;YACxD,IAAI3L,UAAU,CAACjjC,MAAM,GAAG,CAAC,EAAE,MAAM,IAAIwwC,0BAA0B,CAACvN,UAAU,CAAC;YAC3E,MAAMxhC,KAAK;UACb;QACF,CAAC;QACD,CAACuuC,OAAO,CAACjP,WAAW,GAAG,OAAO;UAAE7pC,OAAO;UAAEuD,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAAEw4C,MAAM,KAAK;UAC9E,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAAC/4C,QAAQ,CAACkE,SAAS,CAAC,EAAE;YACzC,MAAM,IAAIo2C,sBAAsB,CAACp2C,SAAS,CAAC;UAC7C;UAEA,MAAMogB,UAAU,GAAG;YAAEpgB,SAAS;YAAE08C,UAAU,EAAE/E,MAAM;YAAEgF,eAAe,EAAE78C;UAAG,CAAC;UACzE,OAAO;YACLiO,SAAS,EAAEnH,MAAM,CAACG,IAAI,CAAC,MAAM,IAAI,CAACu/B,WAAW,CAAC7pC,OAAO,EAAE2jB,UAAU,CAAC,CAAC,CAAC1gB,QAAQ,CAAC,KAAK;UACpF,CAAC;QACH,CAAC;QACD,CAAC61C,OAAO,CAAChP,aAAa,GAAG,OACvB;UAAEtB,MAAM;UAAES,GAAG;UAAE56B,IAAI;UAAE9K,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAC/Cw4C,MAAM,KACH;UACH,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAAC/4C,QAAQ,CAACkE,SAAS,CAAC,EAAE;YACzC,MAAM,IAAIo2C,sBAAsB,CAACp2C,SAAS,CAAC;UAC7C;UAEA,MAAMogB,UAAU,GAAG;YACjB,GAAG6kB,MAAM;YACTjlC,SAAS;YACT08C,UAAU,EAAE/E,MAAM;YAClBgF,eAAe,EAAE78C;UACnB,CAAC;UACD,OAAO;YACLiO,SAAS,EAAE,MAAM,IAAI,CAACw4B,aAAa,CAACz7B,IAAI,EAAE46B,GAAG,EAAEtlB,UAAU;UAC3D,CAAC;QACH,CAAC;QACD,CAACm1B,OAAO,CAACqB,UAAU,GAAG,OAAO;UAAE9rC,IAAI;UAAE9K,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAAEw4C,MAAM,KAAK;UAC1E,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAAC/4C,QAAQ,CAACkE,SAAS,CAAC,EAAE,MAAM,IAAIo2C,sBAAsB,CAACp2C,SAAS,CAAC;UACtF,MAAMogB,UAAU,GAAG;YAAEpgB,SAAS;YAAE08C,UAAU,EAAE/E,MAAM;YAAEgF,eAAe,EAAE78C;UAAG,CAAC;UACzE,MAAMiO,SAAS,GAAGtC,MAAM,CAAC,MAAM,IAAI,CAACuC,IAAI,CAACtC,MAAM,CAACZ,IAAI,CAAC,EAAEsV,UAAU,CAAC,EAAE7X,QAAQ,CAACiC,SAAS,CAAC;UACvF,OAAO;YAAEuD;UAAU,CAAC;QACtB,CAAC;QACD,CAACwnC,OAAO,CAAC9O,cAAc,GAAG,OAAO;UAAEC,UAAU;UAAE1mC,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAAEw4C,MAAM,KAAK;UACpF,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAAC/4C,QAAQ,CAACkE,SAAS,CAAC,EAAE,MAAM,IAAIo2C,sBAAsB,CAACp2C,SAAS,CAAC;UACtF,MAAMogB,UAAU,GAAG;YAAEpgB,SAAS;YAAE08C,UAAU,EAAE/E,MAAM;YAAEgF,eAAe,EAAE78C;UAAG,CAAC;UACzE,MAAMiO,SAAS,GAAG,MAAM,IAAI,CAAC04B,cAAc,CAACC,UAAU,EAAEtmB,UAAU,CAAC;UACnE,OAAO;YAAErS;UAAU,CAAC;QACtB,CAAC;QACD,CAACwnC,OAAO,CAACqD,aAAa,GAAG,OAAO9+B,MAAM,EAAE69B,MAAM,KAAK;UACjD,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC37C,EAAE,CAAC,EAAE,MAAM,IAAIq2C,oBAAoB,CAAC,CAAC;UACrE,MAAM,IAAI,CAAC+E,oBAAoB,CAACp7C,EAAE,EAAEga,MAAM,EAAE69B,MAAM,CAAC;UACnD,OAAO,IAAI;QACb;MACF,CACF;IACF,CAAC;IACD,IAAI,CAAC4D,QAAQ,CAACpnC,GAAG,CAACrU,EAAE,EAAE+4C,MAAM,CAAC;IAC7B,OAAO/4C,EAAE;EACX;;EAEA;AACF;AACA;AACA;EACE,MAAM+8C,eAAeA,CAACrB,QAAgB,EAAiB;IACrD,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAACI,GAAG,CAAClE,MAAM,CAACnC,OAAO,CAAC0D,cAAc,EAAE,MAAM,IAAI,CAACqD,aAAa,CAAC,CAAC,CAAC;EAC1F;;EAEA;AACF;AACA;AACA;EACE,MAAMA,aAAaA,CAAA,EAAwB;IACzC,MAAM;MAAE3E;IAAO,CAAC,GAAGmF,MAAM,CAACC,QAAQ;IAClC,OAAO;MACLj9C,EAAE,EAAE,IAAI,CAACA,EAAE;MACXpD,IAAI,EAAE,IAAI,CAACA,IAAI;MACfm9B,SAAS,EAAE,MAAM,IAAI,CAACsa,GAAG,CAAC9gC,YAAY,CAAC,CAAC;MACxCskC,MAAM,EAAEA,MAAM,KAAK,SAAS,GAAG,GAAG,GAAGA,MAAM;MAC3C5sC,IAAI,EAAE,IAAI,CAACowC;IACb,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEjB,WAAWA,CAAA,EAAa;IACtB,OAAO;MACL1B,OAAO,EAAE,IAAI,CAACvD,eAAe,IAAI,IAAI,GAAG;QAAE,CAAC,IAAI,CAACA,eAAe,GAAG,CAAC;MAAE,CAAC,GAAG,CAAC,CAAC;MAC3E9Y,SAAS,EAAE,IAAI,CAAC0Y,SAAS,CAAC,CAAC,CACxBv4B,MAAM,CAAEwR,CAAC,IAAKA,CAAC,KAAK,IAAI,CAACmnB,eAAe,CAAC,CACzClwC,MAAM,CAAC,CAACupB,GAAG,EAAER,CAAC,MAAM;QAAE,GAAGQ,GAAG;QAAE,CAACR,CAAC,GAAG,CAAC;MAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;EACH;AACF;;;;;;;ACnYA;AACA;AACA;AACe,MAAekvB,kBAAkB,CAAC;EAC/C;AACF;AACA;AACA;;EAGE;AACF;AACA;AACA;AACA;AACA;EACE,MAAMC,QAAQA,CAACvgC,IAAU,EAA0B;IACjD,IAAI2K,KAAK,GAAG,CAAC;IACb,MAAMtV,MAAM,GAAG,EAAE;IACjB,IAAIy1B,OAAO;IACX,GAAG;MACD,IAAIA,OAAO,IAAI,IAAI,EAAEz1B,MAAM,CAACsG,IAAI,CAACmvB,OAAO,CAAC;MACzCA,OAAO,GAAG,MAAM,IAAI,CAAC6G,UAAU,CAAChnB,KAAK,CAAC;MACtCA,KAAK,IAAI,CAAC;IACZ,CAAC,QACC,MAAM3K,IAAI,CAACrH,kBAAkB,CAACmyB,OAAO,CAACroC,OAAO,CAAC,CAACkxB,IAAI,CACjD,MAAM,IAAI,EACV,MAAM,KACR,CAAC;IAEH,OAAOte,MAAM;EACf;AACF;;;;;;;;ACnC8C;AACH;AACO;AACV;AACgC;AACtB;AACC;AAE5C,MAAMqrC,aAAa,GAAGx2C,MAAM,CAACG,IAAI,CAAC,cAAc,CAAC;AACxD,MAAMs2C,eAAe,GAAG,UAAU;AAO3B,SAASC,SAASA,CAAC7gD,OAAmB,EAAE0G,GAAe,EAAe;EAC3E,MAAMo6C,CAAC,GAAGJ,sCAAkB,CAAC1gD,OAAO,EAAE0G,GAAG,CAAC;EAC1C,MAAMs6C,EAAE,GAAGF,CAAC,CAACpyC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACzB,MAAMuyC,EAAE,GAAGH,CAAC,CAACpyC,KAAK,CAAC,EAAE,CAAC;EACtB,OAAO;IACL66B,SAAS,EAAEyX,EAAE;IACbE,SAAS,EAAED;EACb,CAAC;AACH;AAEO,SAASE,iBAAiBA,CAACz6C,GAAgB,EAAE06C,QAA2B,EAAe;EAC5F,OAAOA,QAAQ,CAAC94C,MAAM,CAAC,CAAC;IAAEihC,SAAS;IAAE2X;EAAU,CAAC,EAAEG,OAAO,KAAK;IAC5D,MAAMC,WAAW,GAAGn3C,MAAM,CAACwG,WAAW,CAAC,CAAC,CAAC;IACzC2wC,WAAW,CAAC1wC,aAAa,CAACywC,OAAO,GAAGT,eAAe,EAAE,CAAC,CAAC;IACvD,MAAMvyC,IAAI,GAAG7D,aAAa,CAAC,CAACL,MAAM,CAACsJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE81B,SAAS,EAAE+X,WAAW,CAAC,CAAC;IACxE,OAAOT,SAAS,CAACxyC,IAAI,EAAE6yC,SAAS,CAAC;EACnC,CAAC,EAAEx6C,GAAG,CAAC;AACT;AAAC,IAAA66C,SAAA,oBAAAvqC,OAAA;AAAA,IAAAwqC,OAAA,oBAAAxqC,OAAA;AAAA,IAAAyqC,6BAAA,oBAAAh2B,OAAA;AAOD;AACA;AACA;AACe,MAAMi2B,sBAAsB,SAASnB,kBAAkB,CAAC;EAKrE;AACF;AACA;EACExgD,WAAWA,CAAC4hD,gBAAiC,EAAE;IAC7C,KAAK,CAAC,CAAC;IAAC71B,0CAAA,OAAA21B,6BAAA;IARV11B,yCAAA,OAASw1B,SAAS;IAElBx1B,yCAAA,OAAAy1B,OAAO;IAOL,IAAI,OAAOG,gBAAgB,KAAK,QAAQ,EAAE31B,oCAAA,CAAKu1B,SAAS,EAAd,IAAI,EAAaI,gBAAJ,CAAC,CAAoB,KACvE31B,oCAAA,CAAKw1B,OAAO,EAAZ,IAAI,EAAWG,gBAAJ,CAAC;EACnB;;EAEA;AACF;AACA;AACA;EACE,MAAMC,SAASA,CAAA,EAAoB;IACjC,IAAIh2B,oCAAA,CAAK41B,OAAO,EAAZ,IAAW,CAAC,IAAI,IAAI,EAAE,OAAO51B,oCAAA,CAAK41B,OAAO,EAAZ,IAAW,CAAC;IAC7C,IAAI51B,oCAAA,CAAK21B,SAAS,EAAd,IAAa,CAAC,IAAI,IAAI,EACxB,MAAM,IAAIh/C,aAAa,CACrB,sEACF,CAAC;IACH,MAAMs/C,IAAI,GAAG,MAAMpB,yBAAc,CAAC70B,oCAAA,CAAK21B,SAAS,EAAd,IAAa,CAAC,CAAC;IACjD,MAAMO,SAAS,GAAGjB,SAAS,CAACgB,IAAI,EAAElB,aAAa,CAAC;IAChD,MAAMoB,SAAS,GAAGZ,iBAAiB,CAACW,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IACzD91B,oCAAA,CAAKw1B,OAAO,EAAZ,IAAI,EAAW;MACbjY,SAAS,EAAEv6B,MAAM,CAAC+yC,SAAS,CAACxY,SAAS,EAAEz9B,QAAQ,CAACmB,SAAS,CAAC;MAC1Di0C,SAAS,EAAElyC,MAAM,CAAC+yC,SAAS,CAACb,SAAS,EAAEp1C,QAAQ,CAACmB,SAAS;IAC3D,CAHW,CAAC;IAIZ,OAAO2e,oCAAA,CAAK41B,OAAO,EAAZ,IAAW,CAAC;EACrB;EAYA;AACF;AACA;AACA;EACE,MAAM5P,UAAUA,CAACoQ,YAAoB,EAA0B;IAC7D,OAAO,IAAI1Y,aAAa,CAAC,MAAM5c,gCAAA,CAAA+0B,6BAAA,MAAI,EAACQ,oBAAmB,CAAC,CAAA/+B,IAAA,CAAzB,IAAI,EAAsB8+B,YAAY,CAAC,CAAC;EACzE;AACF;AAAC,eAAAC,qBAjB4BD,YAAoB,EAAqC;EAClF,MAAME,MAAM,GAAG,MAAM,IAAI,CAACN,SAAS,CAAC,CAAC;EACrC,MAAMG,SAAS,GAAG;IAChBxY,SAAS,EAAEt6B,MAAM,CAACizC,MAAM,CAAC3Y,SAAS,CAAC;IACnC2X,SAAS,EAAEjyC,MAAM,CAACizC,MAAM,CAAChB,SAAS;EACpC,CAAC;EACD,MAAMv7B,GAAG,GAAGw7B,iBAAiB,CAACY,SAAS,EAAE,CAACC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAACzY,SAAS;EACxE,OAAOv6B,MAAM,CAAC2W,GAAG,EAAE7Z,QAAQ,CAACgC,gBAAgB,CAAC;AAC/C;;;;;;;ACrFkC;AAMR;AAC0B;AACb;AACM;AACgB;AACd;;AAEjD;AACA;AACA;AAFA,IAAAq0C,QAAA,oBAAAnrC,OAAA;AAGe,MAAMorC,kBAAkB,SAASna,WAAW,CAAC;EAK1D;AACF;AACA;EACEloC,WAAWA,CAAC2C,OAA+B,EAAE;IAC3C,KAAK,CAAC,CAAC;IANTqpB,qCAAA,OAAAo2B,QAAQ;IAONlzC,MAAM,CAACvM,OAAO,CAAC;IACf,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;;EAEA;EACA,MAAe6O,IAAIA,CAAA,EAAwB;IACzC,MAAM,IAAIvP,mBAAmB,CAAC,sCAAsC,CAAC;EACvE;;EAEA;EACA,MAAe6nC,WAAWA,CAAA,EAAwB;IAChD,MAAM,IAAI7nC,mBAAmB,CAAC,sCAAsC,CAAC;EACvE;;EAEA;EACA,MAAe8nC,aAAaA,CAAA,EAA+B;IACzD,MAAM,IAAI9nC,mBAAmB,CAAC,sCAAsC,CAAC;EACvE;;EAEA;EACA,MAAegoC,cAAcA,CAAA,EAA+B;IAC1D,MAAM,IAAIhoC,mBAAmB,CAAC,8CAA8C,CAAC;EAC/E;EAEA,MAAe2nC,eAAeA,CAC5B5xB,EAAuB,EACvB;IAAE8R,QAAQ;IAAE6lB,UAAU;IAAEn5B;EAAsD,CAAC,EACjD;IAC9B,IAAIsT,QAAQ,IAAI,IAAI,IAAI6lB,UAAU,IAAI,IAAI,IAAIn5B,MAAM,IAAI,IAAI,EAAE;MAC5D,MAAM,IAAI3V,aAAa,CAAC,8BAA8B,EAAE,UAAU,EAAE,IAAI,CAAC;IAC3E;IACA,MAAM;MAAEwmB,QAAQ;MAAEuoB,UAAU;MAAEpkC,IAAI;MAAEiX,GAAG;MAAEgB,QAAQ;MAAEtD;IAAS,CAAC,GAC3D,OAAO2J,QAAQ,KAAK,UAAU,GAAG,MAAMA,QAAQ,CAAC9R,EAAE,CAAC,GAAG8R,QAAQ;IAEhE,MAAMw4B,YAAY,GAChBj7B,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GACP,MAAM,CAAC,YAAY;MAClB,IAAIwE,gCAAA,CAAKu2B,QAAQ,EAAb,IAAY,CAAC,IAAI,IAAI,EAAE;QACzB,MAAMpX,OAAO,GAAG,MAAMtyB,UAAU,CAAC,IAAI,CAAC/V,OAAO,EAAE;UAAE6T;QAAO,CAAC,CAAC;QAC1D,IAAIw0B,OAAO,CAAC/sB,IAAI,KAAK,aAAa,EAAE;UAClC,MAAM,IAAIpd,aAAa,CAAC,cAAc,EAAE,aAAa,EAAEmqC,OAAO,CAAC/sB,IAAI,CAAC;QACtE;QACAgO,gCAAA,CAAKm2B,QAAQ,EAAb,IAAI,EAAYpX,OAAO,CAACphB,OAAZ,CAAC;MACf;MACA,IAAIiC,gCAAA,CAAKu2B,QAAQ,EAAb,IAAY,CAAC,IAAI,IAAI,EAAE;QACzB,MAAM,IAAI5/C,aAAa,CAAC,kDAAkD,CAAC;MAC7E;MAEA,IAAIotC,UAAU,IAAI,IAAI,IAAIpkC,IAAI,IAAI,IAAI,EAAE;QACtC,MAAM,IAAIrH,oBAAoB,CAAC,yDAAyD,CAAC;MAC3F;MACA,MAAMyrB,QAAQ,GAAG,MAAMhC,iBAAQ,CAACikB,UAAU,CAAC;QAAElC,UAAU;QAAEn5B,MAAM;QAAEo5B;MAAW,CAAC,CAAC;MAC9E,OAAOhgB,QAAQ,CAAC8gB,SAAS,CAACzhC,MAAM,CAAC2gB,QAAQ,CAAC+gB,KAAK,EAAE9kB,gCAAA,CAAKu2B,QAAQ,EAAb,IAAY,CAAC,EAAE52C,IAAI,CAAC;IACvE,CAAC,EAAE,CAAE;IAEP,MAAM+2C,QAAQ,GAAG,MAAMxxB,YAAY,CAAC;MAClCtqB,GAAG,EAAEuM,GAAG,CAACmL,QAAQ;MACjBnG,EAAE,EAAE;QAAEvR,GAAG,EAAEuM,GAAG,CAACiT,QAAQ;QAAE3D,SAAS,EAAEpT,MAAM,CAAC8I,EAAE,CAAC;QAAEwO,UAAU,EAAE;MAAG,CAAC;MAChEqD,IAAI,EAAE,IAAI,CAAClnB,OAAO;MAClBmnB,QAAQ,EAAEw4B,YAAY;MACtB7/B,GAAG;MACHgB,QAAQ;MACRtD,QAAQ;MACR3J;IACF,CAAC,CAAC;IACF,OAAO4L,OAAO,CAAC;MAAE3b,GAAG,EAAEuM,GAAG,CAACiT,QAAQ;MAAE3D,SAAS,EAAEpT,MAAM,CAACqzC,QAAQ,CAAC;MAAE/7B,UAAU,EAAE;IAAG,CAAC,CAAC;EACpF;AACF;;AC5FoC;AACoC;AAClB;AACL;AACA;AAE1C,MAAMg8B,GAAG,GAAG,IAAI;AAChB,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,gBAAgB,GAAG,IAAI;AAC7B,MAAMC,qBAAqB,GAAG,IAAI;AAClC,MAAMC,qBAAqB,GAAG,IAAI;;AAEzC;AACA;AACA;AACe,MAAMC,aAAa,SAAS3a,WAAW,CAAC;EACrD;AACF;AACA;AACA;AACA;EACEloC,WAAWA,CACA8iD,SAAoB,EACpBj4B,KAAa,EACJloB,OAA+B,EACjD;IACA,KAAK,CAAC,CAAC;IAAC,KAJCmgD,SAAoB,GAApBA,SAAoB;IAAA,KACpBj4B,KAAa,GAAbA,KAAa;IAAA,KACJloB,OAA+B,GAA/BA,OAA+B;IAGjDmgD,SAAS,CAACC,qBAAqB,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC;EAClF;;EAEA;EACA,MAAevxC,IAAIA,CAAA,EAAwB;IACzC,MAAM,IAAIvP,mBAAmB,CAAC,6BAA6B,CAAC;EAC9D;;EAEA;EACA,MAAe8nC,aAAaA,CAAA,EAA+B;IACzD,MAAM,IAAI9nC,mBAAmB,CAAC,oCAAoC,CAAC;EACrE;;EAEA;EACA,MAAegoC,cAAcA,CAAA,EAA+B;IAC1D,MAAM,IAAIhoC,mBAAmB,CAAC,oCAAoC,CAAC;EACrE;EAEA,MAAe2nC,eAAeA,CAC5B5xB,EAAuB,EACvB;IAAEoxB,OAAO;IAAE/L;EAAqD,CAAC,GAAG,CAAC,CAAC,EACxC;IAC9B,IAAI+L,OAAO,IAAI,IAAI,EAAE,MAAM,IAAInnC,mBAAmB,CAAC,iCAAiC,CAAC;IACrF,IAAIo7B,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIx8B,aAAa,CAAC,WAAW,EAAE,UAAU,EAAEw8B,SAAS,CAAC;IAElF,MAAMnM,KAAK,GAAGhiB,MAAM,CAAC8I,EAAE,CAAC;IACxB,IAAIgrC,MAAM,GAAG,CAAC;IACd,MAAMC,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IAC9B,MAAMC,eAAe,GAAG94C,MAAM,CAACG,IAAI,CAAC8yB,SAAS,CAAC;IAC9C,MAAM8lB,MAAM,GAAG,EAAE;IACjB,OAAOH,MAAM,KAAK9xB,KAAK,CAACnoB,MAAM,EAAE;MAC9B,MAAMq6C,YAAY,GAAGJ,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGC,YAAY,GAAGC,eAAe,CAACn6C,MAAM,GAAG,GAAG;MACrF,MAAMs6C,SAAS,GAAGL,MAAM,GAAGI,YAAY,GAAGlyB,KAAK,CAACnoB,MAAM,GAAGmoB,KAAK,CAACnoB,MAAM,GAAGi6C,MAAM,GAAGI,YAAY;MAC7F,MAAMt0C,MAAM,GAAG1E,MAAM,CAACsJ,KAAK,CACzBsvC,MAAM,KAAK,CAAC,GAAGC,YAAY,GAAGC,eAAe,CAACn6C,MAAM,GAAGs6C,SAAS,GAAGA,SACrE,CAAC;MACD,IAAIL,MAAM,KAAK,CAAC,EAAE;QAChB,IAAIM,YAAY,GAAGx0C,MAAM,CAAC+B,aAAa,CAAC,IAAI,CAACga,KAAK,EAAE,CAAC,CAAC;QACtDy4B,YAAY,GAAGx0C,MAAM,CAAC+B,aAAa,CAACqgB,KAAK,CAACnoB,MAAM,EAAEu6C,YAAY,CAAC;QAC/DA,YAAY,GAAGx0C,MAAM,CAACy0C,UAAU,CAACL,eAAe,CAACn6C,MAAM,EAAEu6C,YAAY,CAAC;QACtEA,YAAY,IAAIJ,eAAe,CAACM,IAAI,CAAC10C,MAAM,EAAEw0C,YAAY,EAAE,CAAC,EAAEJ,eAAe,CAACn6C,MAAM,CAAC;QACrFmoB,KAAK,CAACsyB,IAAI,CAAC10C,MAAM,EAAEw0C,YAAY,EAAE,CAAC,EAAE,GAAG,GAAGA,YAAY,CAAC;MACzD,CAAC,MAAM;QACLpyB,KAAK,CAACsyB,IAAI,CAAC10C,MAAM,EAAE,CAAC,EAAEk0C,MAAM,EAAEA,MAAM,GAAGK,SAAS,CAAC;MACnD;MACAF,MAAM,CAACtnC,IAAI,CAAC/M,MAAM,CAAC;MACnBk0C,MAAM,IAAIK,SAAS;IACrB;IACA,MAAMn7B,QAAQ,GAAG,MAAMi7B,MAAM,CAAC56C,MAAM,CAClC,OAAOk7C,QAAQ,EAAEn1C,IAAI,EAAEyC,CAAC,KAAK;MAC3B,MAAM0yC,QAAQ;MACd,OAAO,IAAI,CAACX,SAAS,CAACY,IAAI,CAAClB,GAAG,EAAEE,gBAAgB,EAAE3xC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,EAAEzC,IAAI,CAAC;IACtF,CAAC,EACD3E,OAAO,CAACC,OAAO,CAACQ,MAAM,CAACsJ,KAAK,CAAC,CAAC,CAAC,CACjC,CAAC;IACD,MAAM8S,UAAU,GAAG,CAAC0B,QAAQ,CAACvJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAE7C,OAAOyD,OAAO,CAAC;MAAE3b,GAAG,EAAEuM,GAAG,CAACiT,QAAQ;MAAE3D,SAAS,EAAE4O,KAAK;MAAE1K;IAAW,CAAC,CAAC;EACrE;EAEA,MAAesjB,WAAWA,CAAC6Z,UAAkB,EAAuB;IAClE,IAAIX,MAAM,GAAG,CAAC;IACd,MAAM/iD,OAAO,GAAGmK,MAAM,CAACG,IAAI,CAACo5C,UAAU,CAAC;IACvC,MAAMR,MAAM,GAAG,EAAE;IACjB,OAAOH,MAAM,KAAK/iD,OAAO,CAAC8I,MAAM,EAAE;MAChC,MAAMq6C,YAAY,GAAGJ,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG;MACrD,MAAMK,SAAS,GACbL,MAAM,GAAGI,YAAY,GAAGnjD,OAAO,CAAC8I,MAAM,GAAG9I,OAAO,CAAC8I,MAAM,GAAGi6C,MAAM,GAAGI,YAAY;MACjF,MAAMt0C,MAAM,GAAG1E,MAAM,CAACsJ,KAAK,CAACsvC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGK,SAAS,GAAGA,SAAS,CAAC;MACzE,IAAIL,MAAM,KAAK,CAAC,EAAE;QAChBl0C,MAAM,CAAC+B,aAAa,CAAC,IAAI,CAACga,KAAK,EAAE,CAAC,CAAC;QACnC/b,MAAM,CAAC+B,aAAa,CAAC5Q,OAAO,CAAC8I,MAAM,EAAE,CAAC,CAAC;QACvC9I,OAAO,CAACujD,IAAI,CAAC10C,MAAM,EAAE,CAAC,GAAG,CAAC,EAAEk0C,MAAM,EAAEA,MAAM,GAAGK,SAAS,CAAC;MACzD,CAAC,MAAM;QACLpjD,OAAO,CAACujD,IAAI,CAAC10C,MAAM,EAAE,CAAC,EAAEk0C,MAAM,EAAEA,MAAM,GAAGK,SAAS,CAAC;MACrD;MACAF,MAAM,CAACtnC,IAAI,CAAC/M,MAAM,CAAC;MACnBk0C,MAAM,IAAIK,SAAS;IACrB;IACA,MAAMn7B,QAAQ,GAAG,MAAMi7B,MAAM,CAAC56C,MAAM,CAClC,OAAOk7C,QAAQ,EAAEn1C,IAAI,EAAEyC,CAAC,KAAK;MAC3B,MAAM0yC,QAAQ;MACd,OAAO,IAAI,CAACX,SAAS,CAACY,IAAI,CAAClB,GAAG,EAAEI,qBAAqB,EAAE7xC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,EAAEzC,IAAI,CAAC;IAC3F,CAAC,EACD3E,OAAO,CAACC,OAAO,CAACQ,MAAM,CAACsJ,KAAK,CAAC,CAAC,CAAC,CACjC,CAAC;IACD,OAAOwU,QAAQ,CAACvJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;EACjC;AACF;;;;;;;;ACnHqF;AACxB;AAEF;AACT;AAAA,IAAAilC,mBAAA,oBAAA3sC,OAAA;AAAA,IAAA4sC,2BAAA,oBAAAn4B,OAAA;AAMlD;AACA;AACA;AACe,MAAMo4B,oBAAoB,SAAStD,kBAAkB,CAAC;EACnE;AACF;AACA;EACExgD,WAAWA,CAAU8iD,SAAoB,EAAE;IACzC,KAAK,CAAC,CAAC;IAAC/2B,wCAAA,OAAA83B,2BAAA;IAIV73B,uCAAA,OAAA43B,mBAAmB;IAAiB,KALfd,SAAoB,GAApBA,SAAoB;IAEvCA,SAAS,CAACC,qBAAqB,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,qBAAqB,CAAC,EAAE,KAAK,CAAC;EACrF;EAIA;AACF;AACA;AACA;EACE,MAAMgB,WAAWA,CAAA,EAAkB;IACjC,MAAM;MAAE3hD;IAAQ,CAAC,GAAG,MAAMuqB,8BAAA,CAAAk3B,2BAAA,MAAI,EAACG,oBAAmB,CAAC,CAAA7gC,IAAA,CAAzB,IAAI,CAAuB;IACrD,MAAM3X,IAAI,GAAG,CAACpJ,OAAO,EAAE,OAAO,EAAE,OAAO,CAAU;IACjD,IAAI,CAAC2vB,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAC3B,MAAM,IAAItJ,uBAAuB,CAAC,yBAAyB,EAAE,GAAGsJ,IAAI,CAAC;IACvEygB,kCAAA,CAAK23B,mBAAmB,EAAxB,IAAI,EAAuBj6C,OAAO,CAACC,OAAO,CAAC,CAApB,CAAC;EAC1B;EAcA;AACF;AACA;EACE,MAAMq6C,mBAAmBA,CAAA,EAA8B;IACrD,OAAOt3B,8BAAA,CAAAk3B,2BAAA,MAAI,EAACG,oBAAmB,CAAC,CAAA7gC,IAAA,CAAzB,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM+gC,UAAUA,CAACjC,YAAoB,EAAE3wC,MAAM,GAAG,KAAK,EAAmC;IACtF,MAAMqb,8BAAA,CAAAk3B,2BAAA,MAAI,EAACM,YAAW,CAAC,CAAAhhC,IAAA,CAAjB,IAAI,CAAe;IACzB,MAAMrU,MAAM,GAAG1E,MAAM,CAACsJ,KAAK,CAAC,CAAC,CAAC;IAC9B5E,MAAM,CAAC+B,aAAa,CAACoxC,YAAY,EAAE,CAAC,CAAC;IACrC,MAAM/5B,QAAQ,GAAG,MAAM,IAAI,CAAC46B,SAAS,CAACY,IAAI,CACxClB,GAAG,EACHC,WAAW,EACXnxC,MAAM,GAAG,IAAI,GAAG,IAAI,EACpB,IAAI,EACJxC,MACF,CAAC;IACD,MAAMs1C,aAAa,GAAGl8B,QAAQ,CAAC,CAAC,CAAC;IACjC,OAAOA,QAAQ,CAACvJ,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAGylC,aAAa,CAAC,CAAClhD,QAAQ,CAAC,OAAO,CAAC;EAClE;;EAEA;AACF;AACA;AACA;EACE,MAAM2uC,UAAUA,CAACoQ,YAAoB,EAA0B;IAC7D,OAAO,IAAIY,aAAa,CAAC,IAAI,CAACC,SAAS,EAAEb,YAAY,EAAE,MAAM,IAAI,CAACiC,UAAU,CAACjC,YAAY,CAAC,CAAC;EAC7F;AACF;AAAC,eAAAkC,aAAA,EA9CqC;EAAA,IAAAE,sBAAA;EAClC,CAAAA,sBAAA,GAAAx4B,kCAAA,CAAK+3B,mBAAmB,EAAxB,IAAuB,CAAC,cAAAS,sBAAA,cAAAA,sBAAA,GAAxBp4B,kCAAA,CAAK23B,mBAAmB,EAAxB,IAAI,EAAyB,IAAI,CAACG,WAAW,CAAC,CAAvB,CAAC;EACxB,OAAOl4B,kCAAA,CAAK+3B,mBAAmB,EAAxB,IAAuB,CAAC;AACjC;AAAC,eAAAI,qBAAA,EAEuD;EACtD,MAAM97B,QAAQ,GAAG,MAAM,IAAI,CAAC46B,SAAS,CAACY,IAAI,CAAClB,GAAG,EAAEG,qBAAqB,EAAE,IAAI,EAAE,IAAI,CAAC;EAClF,OAAO;IACLvgD,OAAO,EAAE,CAAC8lB,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACziB,IAAI,CAAC,GAAG;EAC3D,CAAC;AACH;;AC9CkC;AAEmD;AAEhF,MAAM6+C,MAAM,GAAG,4BAA4B;AAE3C,eAAeC,UAAUA,CAC9BC,QAAsB,EACtBtwB,MAAc,EACd5W,MAAe,EACf3W,GAAW,EACC;EACZ,MAAMuhB,QAAQ,GAAG,MAAMs8B,QAAQ,CAACxxB,OAAO,CAA6B;IAClEkB,MAAM,EAAE,mBAAmB;IAC3B5W,MAAM,EAAE;MAAEgnC,MAAM;MAAEtxB,OAAO,EAAE;QAAEkB,MAAM;QAAE5W;MAAO;IAAE;EAChD,CAAC,CAAC;EACF,IAAI4K,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI1lB,aAAa,CAAC,yBAAyB,CAAC;EACxE,IAAI,EAAEmE,GAAG,IAAIuhB,QAAQ,CAAC,EAAE;IACtB,MAAM,IAAI1lB,aAAa,CAAC,OAAOmE,GAAG,uBAAuBwtB,IAAI,CAACC,SAAS,CAAClM,QAAQ,CAAC,EAAE,CAAC;EACtF;EACA,OAAOA,QAAQ,CAACvhB,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACe,MAAM89C,eAAe,SAASvc,WAAW,CAAC;EAOvD;AACF;AACA;EACEloC,WAAWA,CAACwkD,QAAsB,EAAE35B,KAAa,EAAEloB,OAA+B,EAAE;IAClF,KAAK,CAAC,CAAC;IACP,IAAI,CAAC6hD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC35B,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACloB,OAAO,GAAGA,OAAO;EACxB;;EAEA;EACA,MAAe6O,IAAIA,CAAA,EAAwB;IACzC,MAAM,IAAIvP,mBAAmB,CAAC,4BAA4B,CAAC;EAC7D;;EAEA;EACA,MAAe8nC,aAAaA,CAAA,EAA+B;IACzD,MAAM,IAAI9nC,mBAAmB,CAAC,mCAAmC,CAAC;EACpE;;EAEA;EACA,MAAegoC,cAAcA,CAAA,EAA+B;IAC1D,MAAM,IAAIhoC,mBAAmB,CAAC,mCAAmC,CAAC;EACpE;;EAEA;EACA,MAAe2nC,eAAeA,CAC5B5xB,EAAuB,EACvB;IAAEoxB,OAAO;IAAE/L;EAAqD,CAAC,GAAG,CAAC,CAAC,EACxC;IAC9B,IAAI+L,OAAO,IAAI,IAAI,EAAE,MAAM,IAAInnC,mBAAmB,CAAC,mCAAmC,CAAC;IACvF,IAAIo7B,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIx8B,aAAa,CAAC,WAAW,EAAE,UAAU,EAAEw8B,SAAS,CAAC;IAElF,OAAOknB,UAAU,CACf,IAAI,CAACC,QAAQ,EACb,iBAAiB,EACjB;MAAEE,cAAc,EAAE,CAAC,GAAG,IAAI,CAAC75B,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;MAAE7S,EAAE;MAAEqlB;IAAU,CAAC,EACjE,UACF,CAAC;EACH;;EAEA;EACA,MAAeyM,WAAWA,CAAC7pC,OAAe,EAAuB;IAC/D,MAAMsR,SAAS,GAAG,MAAMgzC,UAAU,CAChC,IAAI,CAACC,QAAQ,EACb,aAAa,EACb;MACEE,cAAc,EAAE,CAAC,GAAG,IAAI,CAAC75B,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;MAC9C5qB,OAAO,EAAEmK,MAAM,CAACG,IAAI,CAACtK,OAAO,CAAC,CAACiD,QAAQ,CAAC,QAAQ;IACjD,CAAC,EACD,WACF,CAAC;IACD,OAAOkH,MAAM,CAACG,IAAI,CAACgH,SAAS,EAAE,QAAQ,CAAC;EACzC;AACF;;;;;;;;ACpF4B;AAE+B;AACT;AACkB;AAEpE,MAAMozC,cAAc,GAAG,OAAO;AAC9B,MAAMC,cAAc,GAAG,OAAO;AAAC,IAAAC,6BAAA,oBAAAn5B,OAAA;AAAA,IAAAk4B,kCAAA,oBAAA3sC,OAAA;AAU/B;AACA;AACA;AACe,MAAM6tC,sBAAsB,SAAStE,kBAAkB,CAAC;EAGrE;AACF;AACA;EACExgD,WAAWA,CAACwkD,QAAuB,EAAE;IACnC,KAAK,CAAC,CAAC;IAkBT;AACF;AACA;IAFEz4B,0CAAA,OAAA84B,6BAAA;IAcA74B,yCAAA,OAAA43B,kCAAmB;IA/BjB,IAAIY,QAAQ,IAAI,IAAI,EAAE;MACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB;IACF;IACA,IAAIlE,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,IAAIv+C,wBAAwB,CAChC,iGACF,CAAC;IACH;IACA,IAAI,EAAE,UAAU,IAAIu+C,MAAM,CAAC,IAAIA,MAAM,CAACyE,QAAQ,IAAI,IAAI,EAAE;MACtD,MAAM,IAAIhjD,wBAAwB,CAChC,gHACF,CAAC;IACH;IACA,IAAI,CAACyiD,QAAQ,GAAGlE,MAAM,CAACyE,QAAwB;EACjD;EAkBA;AACF;AACA;EACE,MAAMC,WAAWA,CAAA,EAAyB;IACxC,MAAMr4B,gCAAA,CAAAk4B,6BAAA,MAAI,EAACI,wBAAuB,CAAC,CAAA9hC,IAAA,CAA7B,IAAI,CAA2B;IACrC,MAAM+hC,OAAO,GAAI,MAAM,IAAI,CAACV,QAAQ,CAACxxB,OAAO,CAAC;MAC3CkB,MAAM,EAAE,qBAAqB;MAC7B5W,MAAM,EAAE;QAAE,CAACgnC,MAAM,GAAG;UAAEliD,OAAO,EAAEuiD;QAAe;MAAE;IAClD,CAAC,CAA6C;IAC9C14B,oCAAA,CAAK23B,kCAAmB,EAAxB,IAAI,EAAuBj6C,OAAO,CAACC,OAAO,CAAC,CAApB,CAAC;IACxB,OAAOs7C,OAAO,CAACZ,MAAM,CAAC;EACxB;;EAEA;AACF;AACA;AACA;EACE,MAAMP,WAAWA,CAAA,EAAkB;IACjC,MAAMoB,WAAW,GAAG,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;IAC/C,MAAM55C,IAAI,GAAG,CAAC25C,WAAW,EAAER,cAAc,EAAEC,cAAc,CAAU;IACnE,IAAI,CAAC7yB,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAC3B,MAAM,IAAItJ,uBAAuB,CAAC,4BAA4B,EAAE,GAAGsJ,IAAI,CAAC;IAC1EygB,oCAAA,CAAK23B,kCAAmB,EAAxB,IAAI,EAAuBj6C,OAAO,CAACC,OAAO,CAAC,CAApB,CAAC;EAC1B;EAOA;AACF;AACA;EACE,MAAMw7C,cAAcA,CAAA,EAAoB;IACtC,MAAMz4B,gCAAA,CAAAk4B,6BAAA,MAAI,EAACI,wBAAuB,CAAC,CAAA9hC,IAAA,CAA7B,IAAI,CAA2B;IACrC,MAAMkiC,KAAK,GAAI,MAAM,IAAI,CAACb,QAAQ,CAACxxB,OAAO,CAAC;MAAEkB,MAAM,EAAE;IAAkB,CAAC,CAGvE;IACD,MAAM9xB,OAAO,GAAGijD,KAAK,CAACf,MAAM,CAAC,EAAEliD,OAAO;IACtC,IAAIA,OAAO,IAAI,IAAI,EACjB,MAAM,IAAIL,wBAAwB,CAAC,6CAA6C,CAAC;IACnF,OAAOK,OAAO;EAChB;;EAEA;AACF;AACA;AACA;EACE,MAAMyvC,UAAUA,CAACoQ,YAAoB,EAA4B;IAC/D,MAAMt1B,gCAAA,CAAAk4B,6BAAA,MAAI,EAACV,2BAAW,CAAC,CAAAhhC,IAAA,CAAjB,IAAI,CAAe;IACzB,MAAMxgB,OAAO,GAAG,MAAM4hD,UAAU,CAC9B,IAAI,CAACC,QAAQ,EACb,cAAc,EACd;MAAEE,cAAc,EAAE,CAAC,GAAGzC,YAAY,GAAG,EAAE,IAAI,EAAE,IAAI;IAAE,CAAC,EACpD,WACF,CAAC;IACD,OAAO,IAAIwC,eAAe,CAAC,IAAI,CAACD,QAAQ,EAAEvC,YAAY,EAAEt/C,OAAO,CAAC;EAClE;AACF;AAAC,eAAAsiD,yBAAA,EAxEiD;EAC9C,MAAM7iD,OAAO,GAAG,MAAM,IAAI,CAACoiD,QAAQ,CAACxxB,OAAO,CAAS;IAAEkB,MAAM,EAAE;EAAqB,CAAC,CAAC;EACrF,IAAI9xB,OAAO,IAAI,IAAI,EAAE,MAAM,IAAII,aAAa,CAAC,qCAAqC,CAAC;EACnF,MAAM8iD,cAAc,GAAG,YAAY;EACnC,IAAI,CAACljD,OAAO,CAAC6W,UAAU,CAACqsC,cAAc,CAAC,EAAE;IACvC,MAAM,IAAIvjD,wBAAwB,CAAC,0BAA0BK,OAAO,UAAU,CAAC;EACjF;EACA,MAAMoJ,IAAI,GAAG,CAACpJ,OAAO,CAACuM,KAAK,CAAC22C,cAAc,CAACv8C,MAAM,CAAC,EAAE,QAAQ,CAAU;EACtE,IAAI,CAACgpB,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAAE,MAAM,IAAItJ,uBAAuB,CAAC,UAAU,EAAE,GAAGsJ,IAAI,CAAC;AACvF;AAAC,eAAA24C,2BAAAA,CAAA,EA6BmC;EAAA,IAAAE,sBAAA;EAClC,CAAAA,sBAAA,GAAAx4B,oCAAA,CAAK+3B,kCAAmB,EAAxB,IAAuB,CAAC,cAAAS,sBAAA,cAAAA,sBAAA,GAAxBp4B,oCAAA,CAAK23B,kCAAmB,EAAxB,IAAI,EAAyB,IAAI,CAACG,WAAW,CAAC,CAAvB,CAAC;EACxB,OAAOl4B,oCAAA,CAAK+3B,kCAAmB,EAAxB,IAAuB,CAAC;AACjC;;AC5DF;AACA;AACA;AACe,MAAe2B,YAAY,CAAC;;ACnCpC,MAAM33B,gBAAoC,GAAG;EAClDrf,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfhP,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkX,OAAO,EAAE;QACPmb,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsvB,WAAuC,GAAG;EACrDj3C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf2Z,UAAU,EAAE;QACVvd,cAAc,EAAE,aAAa;QAC7BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAErO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDulD,OAAO,EAAE;QACPlzB,cAAc,EAAE,UAAU;QAC1BhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMK,qBAAyC,GAAG;EACvDgO,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDwlD,GAAG,EAAE;QACHnzB,cAAc,EAAE,KAAK;QACrBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDj2B,OAAO,EAAE;QACPsyB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD85B,OAAO,EAAE;QACPzH,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMylD,QAAoC,GAAG;EAClDp3C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfyvB,IAAI,EAAE;QACJrzB,cAAc,EAAE,MAAM;QACtBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD2lD,IAAI,EAAE;QACJtzB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD4lD,GAAG,EAAE;QACHvzB,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6lD,aAAyC,GAAG;EACvDx3C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRtG,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgpC,GAAG,EAAE;QACH3W,cAAc,EAAE,KAAK;QACrB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,YAAY;cAClB0H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAErO,IAAI,EAAE;gBAAM;cAAE;YACjC;UACF;QACF;MACF,CAAC;MACD8lD,QAAQ,EAAE;QACRzzB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,WAAW;cACjBg2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+vB,qBAAiD,GAAG;EAC/D13C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACf9xB,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkX,OAAO,EAAE;QACPmb,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDgwB,QAAQ,EAAE;QACR3zB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDimD,UAAU,EAAE;QACV5zB,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmD,SAAS,EAAE;QACT7zB,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmmD,uBAAmD,GAAG;EACjE93C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,yBAAyB;IACpCC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRtG,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgmD,QAAQ,EAAE;QACR3zB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDimD,UAAU,EAAE;QACV5zB,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmD,SAAS,EAAE;QACT7zB,cAAc,EAAE,YAAY;QAC5B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMomD,iBAA6C,GAAG;EAC3D/3C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACf+vB,QAAQ,EAAE;QACR3zB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDqV,MAAM,EAAE;QACNgd,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAErO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqmD,iBAA6C,GAAG;EAC3Dh4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACf9xB,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkX,OAAO,EAAE;QACPmb,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACDgwB,QAAQ,EAAE;QACR3zB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuyC,SAAS,EAAE;QACTlgB,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmvC,QAAoC,GAAG;EAClD9gC,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf4D,QAAQ,EAAE;QACRxH,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsmD,sBAAkD,GAAG;EAChEj4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,wBAAwB;IACnCC,eAAe,EAAE;MACf4D,QAAQ,EAAE;QACRxH,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACD24B,QAAQ,EAAE;QACRtG,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMumD,eAA2C,GAAG;EACzDl4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACf+vB,QAAQ,EAAE;QACR3zB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDuyC,SAAS,EAAE;QACTlgB,cAAc,EAAE,WAAW;QAC3B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,UAAU;UAChB42B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJrO,IAAI,EAAE,YAAY;cAClB0H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAErO,IAAI,EAAE;gBAAM;cAAE;YACjC;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw2B,kBAAsC,GAAG;EACpDnoB,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf/a,MAAM,EAAE;QACNmX,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwmD,oBAAgD,GAAG;EAC9Dn4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACf9xB,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkX,OAAO,EAAE;QACPmb,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF,CAAC;MACD6D,QAAQ,EAAE;QACRxH,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDgmD,QAAQ,EAAE;QACR3zB,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMymD,aAAyC,GAAG;EACvDp4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRtG,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0mD,aAAyC,GAAG;EACvDr4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf0wB,aAAa,EAAE;QACbt0B,cAAc,EAAE,gBAAgB;QAChC6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4mD,qBAAiD,GAAG;EAC/Dv4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRtG,cAAc,EAAE,UAAU;QAC1B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDmE,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDkX,OAAO,EAAE;QACPmb,cAAc,EAAE,SAAS;QACzBhkB,IAAI,EAAE;UACJrO,IAAI,EAAE,WAAW;UACjBg2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6wB,eAA2C,GAAG;EACzDx4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACf/zB,OAAO,EAAE;QACPmwB,cAAc,EAAE,SAAS;QACzB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8mD,UAAsC,GAAG;EACpDz4C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf8wB,UAAU,EAAE;QACV10B,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMgnD,gBAA4C,GAAG;EAC1D34C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfgxB,UAAU,EAAE;QACV50B,cAAc,EAAE,aAAa;QAC7B6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF,CAAC;MACDoO,IAAI,EAAE;QACJikB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMknD,cAA0C,GAAG;EACxD74C,IAAI,EAAE;IACJrO,IAAI,EAAE,WAAW;IACjBg2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJikB,cAAc,EAAE,MAAM;QACtB6D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJrO,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAErO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;;AChiB6B;AAEvB,MAAMqhC,sBAA+B,GAAG;EAC7CH,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;EACzChP,MAAM,EAAE;IACNjN,YAAY,EAAE,kBAAkB;IAChC8S,UAAU,EAAE,IAAI;IAChB1F,cAAc,EAAE,cAAc;IAC9BhkB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMo0B,eAAwB,GAAG;EACtC8M,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEi1B,gBAAcA;AACxB,CAAC;AAEM,MAAMlmB,iBAA0B,GAAG;EACxCC,aAAa,EAAE,QAAQ;EACvBhP,MAAM,EAAE;IACNjN,YAAY,EAAE,kBAAkB;IAChC8S,UAAU,EAAE,IAAI;IAChB1F,cAAc,EAAE,QAAQ;IACxBhkB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMmhC,gBAA4B,GAAG;EAC1CD,aAAa,EAAE,OAAO;EACtBhP,MAAM,EAAE;IACNG,cAAc,EAAE,OAAO;IACvB6D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJrO,IAAI,EAAE;IACR;EACF,CAAC;EACDohC,YAAY,EAAE;AAChB,CAAC;AAEM,MAAMM,gBAAyB,GAAG;EACvCR,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEk1B,qBAA2BA;AACrC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCzmB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEm1B,uBAA6BA;AACvC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvC1mB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEo1B,iBAAuBA;AACjC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvC3mB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEq1B,sBAA4BA;AACtC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvC5mB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEs1B,oBAA0BA;AACpC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvC7mB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEu1B,aAAmBA;AAC7B,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvC9mB,aAAa,EAAE,MAAM;EACrBhP,MAAM,EAAEw1B,qBAA2BA;AACrC,CAAC;;ACtFgD;AACI;AACN;AAsCxC,MAAMO,QAAQ,SAAStmB,0BAAwB,CAAC;EAGrD;AACF;AACA;AACA;AACA;EACE7hC,WAAWA,CAACqhC,KAAa,EAAEjqB,OAAgC,EAAE;IAAA,IAAApB,IAAA,EAAAksB,iBAAA;IAC3D,IAAIb,KAAK,KAAKpwB,SAAS,EAAE;MACvB,MAAM,IAAIlR,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACqX,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAM+qB,QAAgC,GAAG;MACvCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAG,gCAAgC;IACvD,MAAMC,eAAe,GACnBlrB,OAAO,CAACmrB,gBAAgB,IAAInrB,OAAO,CAACmrB,gBAAgB,CAACD,eAAe,GAChE,GAAGlrB,OAAO,CAACmrB,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAG/qB,OAAO;MACVmrB,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAzsB,IAAA,IAAAksB,iBAAA,GAAE9qB,OAAO,CAACqrB,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI9qB,OAAO,CAACsrB,OAAO,cAAA1sB,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAACwsB,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACnB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACE+mB,WAAWA,CACT9zB,IAAc,EACdld,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjBixC,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACbh0B,IAAc,EACdld,OAAuC,EACL;IAClC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjBmxC,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdl0B,IAA2B,EAC3Bld,OAAwC,EACL;IACnC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjBqxC,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,wBAAwBA,CACtBp0B,IAA6B,EAC7Bld,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjBuxC,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZt0B,IAAuB,EACvBld,OAAsC,EACL;IACjC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjByxC,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBx0B,IAA4B,EAC5Bld,OAA8C,EACL;IACzC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjB2xC,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClB10B,IAA0B,EAC1Bld,OAA4C,EACL;IACvC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjB6xC,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClB50B,IAAmB,EACnBld,OAA4C,EACL;IACvC,OAAO,IAAI,CAACurB,oBAAoB,CAC9B;MAAErO,IAAI;MAAEld;IAAQ,CAAC,EACjB+xC,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACd90B,IAA2B,EAC3Bld,O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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMqG,QAAQA,CACZxtD,MAA0B,EAC1BuM,IAAY,EACZ;IACE8gD,WAAW;IACXI,mBAAmB;IACnBC;EAC8E,CAAC,GAAG,CAAC,CAAC,EACvB;IAC/D,OAAO,IAAI,CAACxG,aAAa,CAAC,MAAM;MAC9BjR,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAAE;QAAEj2C;MAAO,CAAC,CAAC;MAC7C,OAAO;QACLiwC,OAAO,EAAE,MAAAA,CACPvf,CAAU,EACV11B,OAAuB,EACvBmsD,KAAmB,KACK,IAAI,CAACgG,gBAAgB,CAAC,UAAU,EAAEnyD,OAAO,EAAEmsD,KAAK,CAAC;QAC3EA,KAAK,EAAE;UACL56C,IAAI;UACJ8gD,WAAW;UACXI,mBAAmB;UACnBC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMvrC,OAAOA,CACXniB,MAA0B,EAC1BuM,IAAY,EACZ;IACE8gD,WAAW;IACXM,kBAAkB;IAClBC;EAC4E,CAAC,GAAG,CAAC,CAAC,EAC/B;IACrD,OAAO,IAAI,CAAC1G,aAAa,CAAC,MAAM;MAC9BjR,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAAE;QAAEj2C;MAAO,CAAC,CAAC;MAC5C,OAAO;QACLiwC,OAAO,EAAE,MAAAA,CACPvf,CAAU,EACV11B,OAAuB,EACvBmsD,KAAmB,KACK,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","sources":["webpack://Aeternity/webpack/universalModuleDefinition","webpack://Aeternity/./node_modules/blakejs/blake2b.js","webpack://Aeternity/./node_modules/blakejs/util.js","webpack://Aeternity/./node_modules/inherits/inherits.js","webpack://Aeternity/./node_modules/inherits/inherits_browser.js","webpack://Aeternity/./node_modules/safe-buffer/index.js","webpack://Aeternity/./node_modules/sha.js/hash.js","webpack://Aeternity/./node_modules/sha.js/sha256.js","webpack://Aeternity/external node-commonjs \"url\"","webpack://Aeternity/external node-commonjs \"util\"","webpack://Aeternity/external umd \"@aeternity/aepp-calldata\"","webpack://Aeternity/external umd \"@azure/core-client\"","webpack://Aeternity/external umd \"@azure/core-rest-pipeline\"","webpack://Aeternity/external umd \"@scure/bip39\"","webpack://Aeternity/external umd \"bignumber.js\"","webpack://Aeternity/external umd \"bs58\"","webpack://Aeternity/external umd \"buffer\"","webpack://Aeternity/external umd \"canonicalize\"","webpack://Aeternity/external umd \"eventemitter3\"","webpack://Aeternity/external umd \"events\"","webpack://Aeternity/external umd \"isomorphic-ws\"","webpack://Aeternity/external umd \"json-bigint\"","webpack://Aeternity/external umd \"rlp\"","webpack://Aeternity/external umd \"tweetnacl\"","webpack://Aeternity/external umd \"tweetnacl-auth\"","webpack://Aeternity/external umd \"varuint-bitcoin\"","webpack://Aeternity/external umd \"websocket\"","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/core-js-stable/instance/flags.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/defineProperty.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/toPrimitive.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/toPropertyKey.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/typeof.js","webpack://Aeternity/./node_modules/core-js-pure/actual/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/es/instance/flags.js","webpack://Aeternity/./node_modules/core-js-pure/es/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/es/regexp/flags.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/features/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/full/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-possible-prototype.js","webpack://Aeternity/./node_modules/core-js-pure/internals/add-to-unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/an-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-includes.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-iteration.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-method-has-species-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-slice.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-create.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof-raw.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof.js","webpack://Aeternity/./node_modules/core-js-pure/internals/correct-prototype-getter.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-iter-result-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-global-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/descriptors.js","webpack://Aeternity/./node_modules/core-js-pure/internals/document-create-element.js","webpack://Aeternity/./node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js","webpack://Aeternity/./node_modules/core-js-pure/internals/dom-iterables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/enum-bug-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/environment-user-agent.js","webpack://Aeternity/./node_modules/core-js-pure/internals/environment-v8-version.js","webpack://Aeternity/./node_modules/core-js-pure/internals/export.js","webpack://Aeternity/./node_modules/core-js-pure/internals/fails.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-apply.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-context.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-native.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-call.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-name.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-clause.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-json-replacer-function.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-method.js","webpack://Aeternity/./node_modules/core-js-pure/internals/global-this.js","webpack://Aeternity/./node_modules/core-js-pure/internals/has-own-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/hidden-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/html.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ie8-dom-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/inspect-source.js","webpack://Aeternity/./node_modules/core-js-pure/internals/internal-state.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-array.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-forced.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-null-or-undefined.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-possible-prototype.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-pure.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-create-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators-core.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators.js","webpack://Aeternity/./node_modules/core-js-pure/internals/length-of-array-like.js","webpack://Aeternity/./node_modules/core-js-pure/internals/math-trunc.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-create.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-properties.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names-external.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-is-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys-internal.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-set-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ordinary-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/path.js","webpack://Aeternity/./node_modules/core-js-pure/internals/regexp-flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/regexp-get-flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/require-object-coercible.js","webpack://Aeternity/./node_modules/core-js-pure/internals/set-to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-store.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared.js","webpack://Aeternity/./node_modules/core-js-pure/internals/string-multibyte.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-constructor-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-define-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-registry-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-absolute-index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-integer-or-infinity.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-length.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-property-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string-tag-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/try-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/use-symbol-as-uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/v8-prototype-define-bug.js","webpack://Aeternity/./node_modules/core-js-pure/internals/weak-map-basic-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-wrapped.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.concat.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.date.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.stringify.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.math.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.define-property.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.to-string.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.reflect.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.regexp.flags.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.string.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.async-iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.constructor.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.description.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.has-instance.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.key-for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.replace.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.search.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.species.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.split.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.function.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.custom-matcher.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.dispose.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.matcher.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.observable.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.replace-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/web.dom-collections.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/stable/instance/flags.js","webpack://Aeternity/./node_modules/core-js-pure/stable/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/to-primitive.js","webpack://Aeternity/webpack/bootstrap","webpack://Aeternity/webpack/runtime/compat get default export","webpack://Aeternity/webpack/runtime/define property getters","webpack://Aeternity/webpack/runtime/hasOwnProperty shorthand","webpack://Aeternity/webpack/runtime/make namespace object","webpack://Aeternity/./src/utils/bignumber.ts","webpack://Aeternity/./src/utils/errors.ts","webpack://Aeternity/./src/utils/amount-formatter.ts","webpack://Aeternity/./src/utils/other.ts","webpack://Aeternity/./src/utils/wrap-proxy.ts","webpack://Aeternity/./src/utils/encoder-types.ts","webpack://Aeternity/./src/utils/encoder.ts","webpack://Aeternity/./src/utils/crypto.ts","webpack://Aeternity/./src/utils/bytes.ts","webpack://Aeternity/./src/tx/builder/constants.ts","webpack://Aeternity/./src/tx/builder/helpers.ts","webpack://Aeternity/./src/chain.ts","webpack://Aeternity/./src/tx/builder/field-types/ct-version.ts","webpack://Aeternity/./src/tx/builder/field-types/abi-version.ts","webpack://Aeternity/./src/tx/builder/field-types/address.ts","webpack://Aeternity/./src/tx/builder/field-types/array.ts","webpack://Aeternity/./src/tx/builder/field-types/u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/coin-amount.ts","webpack://Aeternity/./src/tx/builder/field-types/encoded.ts","webpack://Aeternity/./src/tx/builder/field-types/entry.ts","webpack://Aeternity/./src/tx/builder/field-types/enumeration.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-price.ts","webpack://Aeternity/./src/tx/builder/field-types/fee.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-limit.ts","webpack://Aeternity/./src/tx/builder/field-types/field.ts","webpack://Aeternity/./src/tx/builder/field-types/name.ts","webpack://Aeternity/./src/tx/builder/field-types/name-fee.ts","webpack://Aeternity/./src/tx/builder/field-types/name-id.ts","webpack://Aeternity/./src/tx/builder/field-types/nonce.ts","webpack://Aeternity/./src/tx/builder/field-types/pointers.ts","webpack://Aeternity/./src/tx/builder/field-types/query-fee.ts","webpack://Aeternity/./src/tx/builder/field-types/raw.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int-const.ts","webpack://Aeternity/./src/tx/builder/field-types/string.ts","webpack://Aeternity/./src/tx/builder/field-types/transaction.ts","webpack://Aeternity/./src/tx/builder/field-types/ttl.ts","webpack://Aeternity/./src/tx/builder/field-types/with-default.ts","webpack://Aeternity/./src/tx/builder/field-types/with-formatting.ts","webpack://Aeternity/./src/tx/builder/entry/constants.ts","webpack://Aeternity/./src/tx/builder/schema.ts","webpack://Aeternity/./src/tx/builder/common.ts","webpack://Aeternity/./src/tx/builder/field-types/boolean.ts","webpack://Aeternity/./src/tx/builder/field-types/map.ts","webpack://Aeternity/./src/tx/builder/field-types/mptree.ts","webpack://Aeternity/./src/tx/builder/field-types/wrapped.ts","webpack://Aeternity/./src/tx/builder/entry/schema.ts","webpack://Aeternity/./src/tx/builder/entry/index.ts","webpack://Aeternity/./src/tx/builder/index.ts","webpack://Aeternity/./src/utils/semver-satisfies.ts","webpack://Aeternity/./src/utils/autorest.ts","webpack://Aeternity/./src/apis/node/models/mappers.ts","webpack://Aeternity/./src/apis/node/models/parameters.ts","webpack://Aeternity/./src/apis/node/node.ts","webpack://Aeternity/./src/Node.ts","webpack://Aeternity/./src/tx/transaction-signer.ts","webpack://Aeternity/./src/account/Base.ts","webpack://Aeternity/./src/utils/typed-data.ts","webpack://Aeternity/./src/account/Memory.ts","webpack://Aeternity/./src/tx/execution-cost.ts","webpack://Aeternity/./src/tx/validator.ts","webpack://Aeternity/./src/send-transaction.ts","webpack://Aeternity/./src/utils/jwt.ts","webpack://Aeternity/./src/tx/builder/delegation/schema.ts","webpack://Aeternity/./src/tx/builder/delegation/index.ts","webpack://Aeternity/./src/aens.ts","webpack://Aeternity/./src/contract/Contract.ts","webpack://Aeternity/./src/oracle/OracleBase.ts","webpack://Aeternity/./src/oracle/Oracle.ts","webpack://Aeternity/./src/oracle/OracleClient.ts","webpack://Aeternity/./src/spend.ts","webpack://Aeternity/./src/contract/ga.ts","webpack://Aeternity/./src/AeSdkMethods.ts","webpack://Aeternity/./src/AeSdkBase.ts","webpack://Aeternity/./src/AeSdk.ts","webpack://Aeternity/./src/aepp-wallet-communication/schema.ts","webpack://Aeternity/./src/account/Rpc.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/types.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/RpcClient.ts","webpack://Aeternity/./src/AeSdkAepp.ts","webpack://Aeternity/./src/aepp-wallet-communication/WalletConnectorFrameBase.ts","webpack://Aeternity/./src/aepp-wallet-communication/WalletConnectorFrame.ts","webpack://Aeternity/./src/aepp-wallet-communication/WalletConnectorFrameWithNode.ts","webpack://Aeternity/./src/utils/json-big.ts","webpack://Aeternity/./src/AeSdkWallet.ts","webpack://Aeternity/./src/account/BaseFactory.ts","webpack://Aeternity/./src/account/MnemonicFactory.ts","webpack://Aeternity/./src/account/Generalized.ts","webpack://Aeternity/./src/account/Ledger.ts","webpack://Aeternity/./src/account/LedgerFactory.ts","webpack://Aeternity/./src/account/Metamask.ts","webpack://Aeternity/./src/account/MetamaskFactory.ts","webpack://Aeternity/./src/contract/compiler/Base.ts","webpack://Aeternity/./src/apis/compiler/models/mappers.ts","webpack://Aeternity/./src/apis/compiler/models/parameters.ts","webpack://Aeternity/./src/apis/compiler/compiler.ts","webpack://Aeternity/./src/contract/compiler/Http.ts","webpack://Aeternity/./src/utils/string.ts","webpack://Aeternity/./src/channel/internal.ts","webpack://Aeternity/./src/channel/handlers.ts","webpack://Aeternity/./src/channel/Base.ts","webpack://Aeternity/./src/channel/Spend.ts","webpack://Aeternity/./src/channel/Contract.ts","webpack://Aeternity/./src/MiddlewareSubscriber.ts","webpack://Aeternity/./src/apis/middleware/models/parameters.ts","webpack://Aeternity/./src/apis/middleware/models/mappers.ts","webpack://Aeternity/./src/apis/middleware/middleware.ts","webpack://Aeternity/./src/utils/MiddlewarePage.ts","webpack://Aeternity/./src/Middleware.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection-proxy.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/Browser.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserWindowMessage.ts","webpack://Aeternity/./src/aepp-wallet-communication/wallet-detector.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserRuntime.ts","webpack://Aeternity/./src/index-browser.ts","webpack://Aeternity/external node-commonjs \"child_process\"","webpack://Aeternity/external node-commonjs \"os\"","webpack://Aeternity/external node-commonjs \"path\"","webpack://Aeternity/external node-commonjs \"fs/promises\"","webpack://Aeternity/./src/contract/compiler/Cli.ts","webpack://Aeternity/./src/contract/compiler/getFileSystem.ts","webpack://Aeternity/./src/contract/compiler/HttpNode.ts","webpack://Aeternity/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bignumber.js\"), require(\"@azure/core-rest-pipeline\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"bs58\"), require(\"buffer\"), require(\"rlp\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"eventemitter3\"), require(\"json-bigint\"), require(\"@scure/bip39\"), require(\"tweetnacl-auth\"), require(\"websocket\"), require(\"events\"), require(\"isomorphic-ws\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"bignumber.js\", \"@azure/core-rest-pipeline\", \"tweetnacl\", \"varuint-bitcoin\", \"bs58\", \"buffer\", \"rlp\", \"@azure/core-client\", \"@aeternity/aepp-calldata\", \"canonicalize\", \"eventemitter3\", \"json-bigint\", \"@scure/bip39\", \"tweetnacl-auth\", \"websocket\", \"events\", \"isomorphic-ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Aeternity\"] = factory(require(\"bignumber.js\"), require(\"@azure/core-rest-pipeline\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"bs58\"), require(\"buffer\"), require(\"rlp\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"eventemitter3\"), require(\"json-bigint\"), require(\"@scure/bip39\"), require(\"tweetnacl-auth\"), require(\"websocket\"), require(\"events\"), require(\"isomorphic-ws\"));\n\telse\n\t\troot[\"Aeternity\"] = factory(root[\"bignumber.js\"], root[\"@azure/core-rest-pipeline\"], root[\"tweetnacl\"], root[\"varuint-bitcoin\"], root[\"bs58\"], root[\"buffer\"], root[\"rlp\"], root[\"@azure/core-client\"], root[\"@aeternity/aepp-calldata\"], root[\"canonicalize\"], root[\"eventemitter3\"], root[\"json-bigint\"], root[\"@scure/bip39\"], root[\"tweetnacl-auth\"], root[\"websocket\"], root[\"events\"], root[\"isomorphic-ws\"]);\n})(global, (__WEBPACK_EXTERNAL_MODULE__6168__, __WEBPACK_EXTERNAL_MODULE__833__, __WEBPACK_EXTERNAL_MODULE__1655__, __WEBPACK_EXTERNAL_MODULE__4054__, __WEBPACK_EXTERNAL_MODULE__4578__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__6514__, __WEBPACK_EXTERNAL_MODULE__1081__, __WEBPACK_EXTERNAL_MODULE__2853__, __WEBPACK_EXTERNAL_MODULE__6016__, __WEBPACK_EXTERNAL_MODULE__1891__, __WEBPACK_EXTERNAL_MODULE__4146__, __WEBPACK_EXTERNAL_MODULE__8380__, __WEBPACK_EXTERNAL_MODULE__5196__, __WEBPACK_EXTERNAL_MODULE__8963__, __WEBPACK_EXTERNAL_MODULE__761__, __WEBPACK_EXTERNAL_MODULE__7250__) => {\nreturn ","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = __WEBPACK_EXTERNAL_MODULE__2853__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1081__;","module.exports = __WEBPACK_EXTERNAL_MODULE__833__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8380__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6168__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4578__;","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6016__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1891__;","module.exports = __WEBPACK_EXTERNAL_MODULE__761__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7250__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4146__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6514__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1655__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5196__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4054__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8963__;","module.exports = require(\"core-js-pure/stable/instance/flags\");","var _Object$defineProperty = require(\"core-js-pure/features/object/define-property.js\");\nvar toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? _Object$defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _Symbol$toPrimitive = require(\"core-js-pure/features/symbol/to-primitive.js\");\nvar _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[_Symbol$toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _Symbol = require(\"core-js-pure/features/symbol/index.js\");\nvar _Symbol$iterator = require(\"core-js-pure/features/symbol/iterator.js\");\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof _Symbol && o.constructor === _Symbol && o !== _Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\nvar parent = require('../../stable/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol');\n\nrequire('../../modules/esnext.function.metadata');\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.dispose');\nrequire('../../modules/esnext.symbol.metadata');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar flags = require('../regexp/flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (it) {\n  return (it === RegExpPrototype || isPrototypeOf(RegExpPrototype, it)) ? flags(it) : it.flags;\n};\n","'use strict';\nrequire('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n","'use strict';\nrequire('../../modules/es.regexp.flags');\nvar getRegExpFlags = require('../../internals/regexp-get-flags');\n\nmodule.exports = getRegExpFlags;\n","'use strict';\nrequire('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","'use strict';\nrequire('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/es.symbol.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","'use strict';\nrequire('../../modules/es.date.to-primitive');\nrequire('../../modules/es.symbol.to-primitive');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('toPrimitive');\n","'use strict';\nmodule.exports = require('../../full/object/define-property');\n","'use strict';\nmodule.exports = require('../../full/symbol');\n","'use strict';\nmodule.exports = require('../../full/symbol/iterator');\n","'use strict';\nmodule.exports = require('../../full/symbol/to-primitive');\n","'use strict';\nvar parent = require('../../actual/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol');\nrequire('../../modules/esnext.symbol.is-registered-symbol');\nrequire('../../modules/esnext.symbol.is-well-known-symbol');\nrequire('../../modules/esnext.symbol.custom-matcher');\nrequire('../../modules/esnext.symbol.observable');\n// TODO: Remove from `core-js@4`\nrequire('../../modules/esnext.symbol.is-registered');\nrequire('../../modules/esnext.symbol.is-well-known');\nrequire('../../modules/esnext.symbol.matcher');\nrequire('../../modules/esnext.symbol.metadata-key');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\nmodule.exports = function () { /* empty */ };\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE === 1;\n  var IS_FILTER = TYPE === 2;\n  var IS_SOME = TYPE === 3;\n  var IS_EVERY = TYPE === 4;\n  var IS_FIND_INDEX = TYPE === 6;\n  var IS_FILTER_REJECT = TYPE === 7;\n  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(self);\n    var boundFunction = bind(callbackfn, that);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/environment-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n","'use strict';\nvar arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  if (DESCRIPTORS) definePropertyModule.f(object, key, createPropertyDescriptor(0, value));\n  else object[key] = value;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n  return target;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(globalThis, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    globalThis[key] = value;\n  } return value;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar isObject = require('../internals/is-object');\n\nvar document = globalThis.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\n// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar globalThis = require('../internals/global-this');\n\nvar navigator = globalThis.navigator;\nvar userAgent = navigator && navigator.userAgent;\n\nmodule.exports = userAgent ? String(userAgent) : '';\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar userAgent = require('../internals/environment-user-agent');\n\nvar process = globalThis.process;\nvar Deno = globalThis.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n// add debugging info\nrequire('../internals/shared-store');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? globalThis : STATIC ? globalThis[TARGET] : globalThis[TARGET] && globalThis[TARGET].prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (!FORCED && !PROTO && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, globalThis);\n    // wrap global constructors for prevent changes in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar path = require('../internals/path');\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(globalThis[namespace])\n    : path[namespace] && path[namespace][method] || globalThis[namespace] && globalThis[namespace][method];\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar toString = require('../internals/to-string');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (replacer) {\n  if (isCallable(replacer)) return replacer;\n  if (!isArray(replacer)) return;\n  var rawLength = replacer.length;\n  var keys = [];\n  for (var i = 0; i < rawLength; i++) {\n    var element = replacer[i];\n    if (typeof element == 'string') push(keys, element);\n    else if (typeof element == 'number' || classof(element) === 'Number' || classof(element) === 'String') push(keys, toString(element));\n  }\n  var keysLength = keys.length;\n  var root = true;\n  return function (key, value) {\n    if (root) {\n      root = false;\n      return value;\n    }\n    if (isArray(this)) return value;\n    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n  };\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar globalThis = require('../internals/global-this');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = globalThis.TypeError;\nvar WeakMap = globalThis.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.test(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, [], argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n","'use strict';\nmodule.exports = true;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];\n\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    }\n\n    return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\n/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) === 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar isObject = require('../internals/is-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  var target = STATIC ? it : it && it.prototype;\n  if (target) {\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar globalThis = require('../internals/global-this');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.38.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.38.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\nvar store = require('../internals/shared-store');\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/environment-v8-version');\nvar fails = require('../internals/fails');\nvar globalThis = require('../internals/global-this');\n\nvar $String = globalThis.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar Symbol = getBuiltIn('Symbol');\nvar keyFor = Symbol.keyFor;\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\nmodule.exports = Symbol.isRegisteredSymbol || function isRegisteredSymbol(value) {\n  try {\n    return keyFor(thisSymbolValue(value)) !== undefined;\n  } catch (error) {\n    return false;\n  }\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isSymbol = require('../internals/is-symbol');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar Symbol = getBuiltIn('Symbol');\nvar $isWellKnownSymbol = Symbol.isWellKnownSymbol;\nvar getOwnPropertyNames = getBuiltIn('Object', 'getOwnPropertyNames');\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\nvar WellKnownSymbolsStore = shared('wks');\n\nfor (var i = 0, symbolKeys = getOwnPropertyNames(Symbol), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {\n  // some old engines throws on access to some keys like `arguments` or `caller`\n  try {\n    var symbolKey = symbolKeys[i];\n    if (isSymbol(Symbol[symbolKey])) wellKnownSymbol(symbolKey);\n  } catch (error) { /* empty */ }\n}\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\nmodule.exports = function isWellKnownSymbol(value) {\n  if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;\n  try {\n    var symbol = thisSymbolValue(value);\n    for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {\n      // eslint-disable-next-line eqeqeq -- polyfilled symbols case\n      if (WellKnownSymbolsStore[keys[j]] == symbol) return true;\n    }\n  } catch (error) { /* empty */ }\n  return false;\n};\n","'use strict';\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\n/* eslint-disable es/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = globalThis.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = globalThis.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/environment-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = null;\n    return createIterResultObject(undefined, true);\n  }\n  switch (state.kind) {\n    case 'keys': return createIterResultObject(index, false);\n    case 'values': return createIterResultObject(target[index], false);\n  } return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar getReplacerFunction = require('../internals/get-json-replacer-function');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nvar $String = String;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')('stringify detection');\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) !== '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) !== '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) !== '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = getReplacerFunction(replacer);\n  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined\n  args[1] = function (key, value) {\n    // some old implementations (like WebKit) could pass numbers as keys\n    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);\n    if (!isSymbol(value)) return value;\n  };\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag(globalThis.JSON, 'JSON', true);\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","// empty\n","// empty\n","// empty\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = globalThis.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar RangeError = globalThis.RangeError;\nvar TypeError = globalThis.TypeError;\nvar QObject = globalThis.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar fallbackDefineProperty = function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n};\n\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a !== 7;\n}) ? fallbackDefineProperty : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, nativeObjectCreate(null)));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw new TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      var $this = this === undefined ? globalThis : this;\n      if ($this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn($this, HIDDEN) && hasOwn($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;\n      var descriptor = createPropertyDescriptor(1, value);\n      try {\n        setSymbolDescriptor($this, tag, descriptor);\n      } catch (error) {\n        if (!(error instanceof RangeError)) throw error;\n        fallbackDefineProperty($this, tag, descriptor);\n      }\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    defineBuiltInAccessor(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","'use strict';\nvar $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw new TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol('matchAll');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag(getBuiltIn('Symbol'), 'Symbol');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar METADATA = wellKnownSymbol('metadata');\nvar FunctionPrototype = Function.prototype;\n\n// Function.prototype[@@metadata]\n// https://github.com/tc39/proposal-decorator-metadata\nif (FunctionPrototype[METADATA] === undefined) {\n  defineProperty(FunctionPrototype, METADATA, {\n    value: null\n  });\n}\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol('asyncDispose');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.customMatcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('customMatcher');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol('dispose');\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true }, {\n  isRegisteredSymbol: isRegisteredSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegistered` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true, name: 'isRegisteredSymbol' }, {\n  isRegistered: isRegisteredSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnown` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, name: 'isWellKnownSymbol', forced: true }, {\n  isWellKnown: isWellKnownSymbol\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('matcher');\n","'use strict';\n// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol('metadataKey');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol('metadata');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\ndefineWellKnownSymbol('replaceAll');\n","'use strict';\nrequire('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar globalThis = require('../internals/global-this');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  setToStringTag(globalThis[COLLECTION_NAME], COLLECTION_NAME);\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","'use strict';\nvar parent = require('../../es/instance/flags');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol/iterator');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol/to-primitive');\n\nmodule.exports = parent;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Big Number Helpers\n */\nimport { BigNumber } from 'bignumber.js';\n\n/**\n * Check if value is BigNumber, Number, BigInt or number string representation\n * @param number - number to check\n */\nexport const isBigNumber = (number: string | number | bigint | BigNumber): boolean => {\n  if (typeof number === 'bigint') return true;\n  return (\n    ['number', 'object', 'string'].includes(typeof number) &&\n    // eslint-disable-next-line no-restricted-globals\n    (!isNaN(number as number) || Number.isInteger(number) || BigNumber.isBigNumber(number))\n  );\n};\n\n/**\n * BigNumber ceil operation\n */\nexport const ceil = (bigNumber: BigNumber): BigNumber =>\n  bigNumber.integerValue(BigNumber.ROUND_CEIL);\n","// eslint-disable-next-line max-classes-per-file\nimport { BigNumber } from 'bignumber.js';\nimport { AensName, Int } from '../tx/builder/constants.js';\nimport * as Encoded from './encoder-types.js';\n\n/**\n * aepp-sdk originated error\n * @category exception\n */\nexport abstract class BaseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'BaseError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AccountError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AensError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AeppError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AeppError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CompilerError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CompilerError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ContractError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CryptographyError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CryptographyError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TransactionError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TransactionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class WalletError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'WalletError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentError extends BaseError {\n  constructor(argumentName: string, requirement: unknown, argumentValue: unknown) {\n    super(`${argumentName} should be ${requirement}, got ${argumentValue} instead`);\n    this.name = 'ArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalArgumentError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentCountMismatchError extends BaseError {\n  constructor(functionName: string, requiredCount: number, providedCount: number) {\n    super(`${functionName} expects ${requiredCount} arguments, got ${providedCount} instead`);\n    this.name = 'ArgumentCountMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientBalanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InsufficientBalanceError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingParamError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingParamError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSerializerFoundError extends BaseError {\n  constructor() {\n    super('Byte serialization not supported');\n    this.name = 'NoSerializerFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RequestTimedOutError extends BaseError {\n  constructor(height: number) {\n    super(`Giving up at height ${height}`);\n    this.name = 'RequestTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxTimedOutError extends BaseError {\n  constructor(blocks: number, th: Encoded.TxHash) {\n    super(`Giving up after ${blocks} blocks mined, transaction hash: ${th}`);\n    this.name = 'TxTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TypeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TypeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedPlatformError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedPlatformError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedProtocolError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedProtocolError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotImplementedError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NotImplementedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedVersionError extends BaseError {\n  constructor(dependency: string, version: string, geVersion: string, ltVersion?: string) {\n    super(\n      `Unsupported ${dependency} version ${version}. Supported: >= ${geVersion}` +\n        (ltVersion == null ? '' : ` < ${ltVersion}`),\n    );\n    this.name = 'UnsupportedVersionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class LogicError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'LogicError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InternalError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InternalError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedTsError extends InternalError {\n  constructor(message = 'Expected to not happen, required for TS') {\n    super(message);\n    this.name = 'UnexpectedTsError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnavailableAccountError extends AccountError {\n  constructor(address: Encoded.AccountAddress) {\n    super(`Account for ${address} not available`);\n    this.name = 'UnavailableAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensPointerContextError extends AensError {\n  constructor(nameOrId: AensName | Encoded.Name, prefix: string) {\n    super(`Name ${nameOrId} don't have pointers for ${prefix}`);\n    this.name = 'AensPointerContextError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientNameFeeError extends AensError {\n  constructor(nameFee: BigNumber, minNameFee: BigNumber) {\n    super(\n      `the provided fee ${nameFee.toString()} is not enough to execute the claim, required: ${minNameFee.toString()}`,\n    );\n    this.name = 'InsufficientNameFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAensNameError extends AensError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAensNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidRpcMessageError extends AeppError {\n  constructor(message: string) {\n    super(`Received invalid message: ${message}`);\n    this.name = 'InvalidRpcMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingCallbackError extends AeppError {\n  constructor(id: number) {\n    super(`Can't find callback for this messageId ${id}`);\n    this.name = 'MissingCallbackError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnAuthorizedAccountError extends AeppError {\n  constructor(onAccount: Encoded.AccountAddress) {\n    super(`You do not have access to account ${onAccount}`);\n    this.name = 'UnAuthorizedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownRpcClientError extends AeppError {\n  constructor(id: string) {\n    super(`RpcClient with id ${id} do not exist`);\n    this.name = 'UnknownRpcClientError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsubscribedAccountError extends AeppError {\n  constructor() {\n    super('You are not subscribed for an account.');\n    this.name = 'UnsubscribedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelCallError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelCallError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelConnectionError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelConnectionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelPingTimedOutError extends ChannelError {\n  constructor() {\n    super('Server pong timed out');\n    this.name = 'ChannelPingTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedChannelMessageError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnexpectedChannelMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelIncomingMessageError extends ChannelError {\n  handlerError: Error;\n\n  incomingMessage: { [key: string]: any };\n\n  constructor(handlerError: Error, incomingMessage: { [key: string]: any }) {\n    super(handlerError.message);\n    this.handlerError = handlerError;\n    this.incomingMessage = incomingMessage;\n    this.name = 'ChannelIncomingMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownChannelStateError extends ChannelError {\n  constructor() {\n    super('State Channels FSM entered unknown state');\n    this.name = 'UnknownChannelStateError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAuthDataError extends CompilerError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAuthDataError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class BytecodeMismatchError extends ContractError {\n  constructor(source: 'source code' | 'bytecode') {\n    super(`Contract ${source} do not correspond to the bytecode deployed on the chain`);\n    this.name = 'BytecodeMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateContractError extends ContractError {\n  constructor() {\n    super('Contract already deployed');\n    this.name = 'DuplicateContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InactiveContractError extends ContractError {\n  constructor(contractAddress: Encoded.ContractAddress) {\n    super(`Contract with address ${contractAddress} not active`);\n    this.name = 'InactiveContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidMethodInvocationError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidMethodInvocationError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractAddressError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingContractAddressError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractDefError extends ContractError {\n  constructor() {\n    super('Either ACI or sourceCode or sourceCodePath is required');\n    this.name = 'MissingContractDefError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingFunctionNameError extends ContractError {\n  constructor() {\n    super('Function name is required');\n    this.name = 'MissingFunctionNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeInvocationError extends ContractError {\n  transaction?: Encoded.Transaction;\n\n  constructor(message: string, transaction?: Encoded.Transaction) {\n    super(`Invocation failed${message == null ? '' : `: \"${message}\"`}`);\n    this.name = 'NodeInvocationError';\n    this.transaction = transaction;\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSuchContractFunctionError extends ContractError {\n  constructor(name: string) {\n    super(`Function ${name} doesn't exist in contract`);\n    this.name = 'NoSuchContractFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotPayableFunctionError extends ContractError {\n  constructor(amount: Int, fn: string) {\n    super(\n      `You try to pay \"${amount}\" to function \"${fn}\" which is not payable. ` +\n        'Only payable function can accept coins',\n    );\n    this.name = 'NotPayableFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingEventDefinitionError extends ContractError {\n  constructor(eventNameHash: string, eventAddress: Encoded.ContractAddress) {\n    super(\n      `Can't find definition of ${eventNameHash} event emitted by ${eventAddress}` +\n        ' (use omitUnknown option to ignore events like this)',\n    );\n    this.name = 'MissingEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AmbiguousEventDefinitionError extends ContractError {\n  constructor(eventAddress: Encoded.ContractAddress, matchedEvents: Array<[string, string]>) {\n    super(\n      `Found multiple definitions of \"${matchedEvents[0][1]}\" event with different types emitted by` +\n        ` ${eventAddress} in ${matchedEvents.map(([name]) => `\"${name}\"`).join(', ')} contracts` +\n        ' (use contractAddressToName option to specify contract name corresponding to address)',\n    );\n    this.name = 'AmbiguousEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidChecksumError extends CryptographyError {\n  constructor() {\n    super('Invalid checksum');\n    this.name = 'InvalidChecksumError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MerkleTreeHashMismatchError extends CryptographyError {\n  constructor() {\n    super('Node hash is not equal to provided one');\n    this.name = 'MerkleTreeHashMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingNodeInTreeError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingNodeInTreeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownNodeLengthError extends CryptographyError {\n  constructor(nodeLength: number) {\n    super(`Unknown node length: ${nodeLength}`);\n    this.name = 'UnknownNodeLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownPathNibbleError extends CryptographyError {\n  constructor(nibble: number) {\n    super(`Unknown path nibble: ${nibble}`);\n    this.name = 'UnknownPathNibbleError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateNodeError extends NodeError {\n  constructor(name: string) {\n    super(`Node with name ${name} already exist`);\n    this.name = 'DuplicateNodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeNotFoundError extends NodeError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DecodeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PayloadLengthError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PayloadLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DryRunError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DryRunError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalBidFeeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalBidFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidSignatureError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidSignatureError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PrefixNotFoundError extends TransactionError {\n  constructor(tag: number) {\n    super(`Prefix for id-tag ${tag} not found.`);\n    this.name = 'PrefixNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class SchemaNotFoundError extends TransactionError {\n  constructor(key: string, version: number) {\n    super(`Transaction schema not implemented for tag ${key} version ${version}`);\n    this.name = 'SchemaNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TagNotFoundError extends TransactionError {\n  constructor(prefix: string) {\n    super(`Id tag for prefix ${prefix} not found.`);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxNotInChainError extends TransactionError {\n  constructor(txHash: Encoded.TxHash) {\n    super(`Transaction ${txHash} is removed from chain`);\n    this.name = 'TxNotInChainError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AlreadyConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AlreadyConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoWalletConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NoWalletConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcConnectionError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RpcConnectionError';\n  }\n}\n","import { BigNumber } from 'bignumber.js';\nimport { isBigNumber } from './bignumber.js';\nimport { ArgumentError } from './errors.js';\n\nexport enum AE_AMOUNT_FORMATS {\n  AE = 'ae',\n  MILI_AE = 'miliAE',\n  MICRO_AE = 'microAE',\n  NANO_AE = 'nanoAE',\n  PICO_AE = 'picoAE',\n  FEMTO_AE = 'femtoAE',\n  AETTOS = 'aettos',\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nconst DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18,\n} as const;\n\n/**\n * Convert amount from one to other denomination\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n * @param options.targetDenomination - target denomination,\n * can be ['ae', 'aettos']\n */\nexport const formatAmount = (\n  value: string | number | bigint | BigNumber,\n  {\n    denomination = AE_AMOUNT_FORMATS.AETTOS,\n    targetDenomination = AE_AMOUNT_FORMATS.AETTOS,\n  }: { denomination?: AE_AMOUNT_FORMATS; targetDenomination?: AE_AMOUNT_FORMATS },\n): string => {\n  if (!isBigNumber(value)) throw new ArgumentError('value', 'a number', value);\n\n  return new BigNumber(typeof value === 'bigint' ? value.toString() : value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed();\n};\n\n/**\n * Convert amount to AE\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAe = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE });\n\n/**\n * Convert amount to aettos\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAettos = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AE }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination });\n\ninterface Prefix {\n  name: string;\n  magnitude: number;\n}\n\nconst prefixes: Prefix[] = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 },\n];\n\nconst getNearestPrefix = (exponent: number): Prefix =>\n  prefixes.reduce((p, n) =>\n    Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p,\n  );\n\nconst getLowerBoundPrefix = (exponent: number): Prefix =>\n  prefixes.find((p) => p.magnitude <= exponent) ?? prefixes[prefixes.length - 1];\n\nexport const prefixedAmount = (rawValue: string | number | BigNumber): string => {\n  const value: BigNumber = new BigNumber(rawValue);\n\n  const exp = value.e ?? 0;\n  const { name, magnitude } = (exp < 0 ? getNearestPrefix : getLowerBoundPrefix)(exp);\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(exp - magnitude, 0))\n    .toFixed();\n  return `${v}${name !== '' ? ' ' : ''}${name}`;\n};\n","import { RestError } from '@azure/core-rest-pipeline';\n\nexport const pause = async (duration: number): Promise<void> =>\n  new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  });\n\nexport const mapObject = <InputV, OutputV>(\n  object: { [k: string]: InputV },\n  fn: (\n    value: [string, InputV],\n    index: number,\n    array: Array<[string, InputV]>,\n  ) => [number | string, OutputV],\n): { [k: string]: OutputV } => Object.fromEntries(Object.entries(object).map(fn));\n\n// remove after dropping webpack4 support\nconst isWebpack4Buffer = (() => {\n  try {\n    Buffer.concat([Uint8Array.from([])]);\n    return false;\n  } catch (error) {\n    return true;\n  }\n})();\n\nexport const concatBuffers = isWebpack4Buffer\n  ? (list: readonly Uint8Array[], totalLength?: number): Buffer =>\n      Buffer.concat(\n        list.map((el) => Buffer.from(el)),\n        totalLength,\n      )\n  : Buffer.concat;\n\n/**\n * Object key type guard\n * @param key - Maybe object key\n * @param object - Object\n */\nexport function isKeyOfObject<T extends object>(\n  key: string | number | symbol,\n  object: T,\n): key is keyof T {\n  return key in object;\n}\n\n/**\n * Array item type guard\n * @param item - Maybe array item\n * @param array - Array\n */\nexport function isItemOfArray<T>(item: any, array: readonly T[]): item is T {\n  return array.includes(item);\n}\n\nexport function isAccountNotFoundError(error: Error): boolean {\n  return (\n    error instanceof RestError &&\n    error.statusCode === 404 &&\n    error.message.includes('Account not found')\n  );\n}\n\n// based on https://stackoverflow.com/a/50375286\nexport type UnionToIntersection<Union> = (Union extends any ? (k: Union) => void : never) extends (\n  k: infer Intersection,\n) => void\n  ? Intersection\n  : never;\n\n// based on https://stackoverflow.com/a/61108377\nexport type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport function ensureError(error: unknown): asserts error is Error {\n  if (error instanceof Error) return;\n  throw error;\n}\n","import { ArgumentError } from './errors.js';\n\nexport function wrapWithProxy<Value extends object | undefined>(\n  valueCb: () => Value,\n): NonNullable<Value> {\n  return new Proxy(\n    {},\n    Object.fromEntries(\n      (\n        [\n          'apply',\n          'construct',\n          'defineProperty',\n          'deleteProperty',\n          'getOwnPropertyDescriptor',\n          'getPrototypeOf',\n          'isExtensible',\n          'ownKeys',\n          'preventExtensions',\n          'set',\n          'setPrototypeOf',\n          'get',\n          'has',\n        ] as const\n      ).map((name) => [\n        name,\n        (t: {}, ...args: unknown[]) => {\n          const target = valueCb();\n          if (target == null) throw new ArgumentError('wrapped value', 'defined', target);\n          if (name === 'get' && args[0] === '_wrappedValue') return target;\n          const res = (Reflect[name] as any)(target, ...args);\n          return typeof res === 'function' && name === 'get' ? res.bind(target) : res;\n        },\n      ]),\n    ),\n  ) as NonNullable<Value>;\n}\n\nexport function unwrapProxy<Value extends object>(value: Value): Value {\n  return (value as { _wrappedValue?: Value })._wrappedValue ?? value;\n}\n","/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/master/node/api/api_encoding.md}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L205-L230}\n */\nexport enum Encoding {\n  KeyBlockHash = 'kh',\n  MicroBlockHash = 'mh',\n  BlockPofHash = 'bf',\n  BlockTxHash = 'bx',\n  BlockStateHash = 'bs',\n  Channel = 'ch',\n  ContractAddress = 'ct',\n  ContractBytearray = 'cb',\n  ContractStoreKey = 'ck',\n  ContractStoreValue = 'cv',\n  Transaction = 'tx',\n  TxHash = 'th',\n  OracleAddress = 'ok',\n  OracleQuery = 'ov',\n  OracleQueryId = 'oq',\n  OracleResponse = 'or',\n  AccountAddress = 'ak',\n  AccountSecretKey = 'sk',\n  Signature = 'sg',\n  Commitment = 'cm',\n  PeerPubkey = 'pp',\n  Name = 'nm',\n  State = 'st',\n  Poi = 'pi',\n  StateTrees = 'ss',\n  CallStateTree = 'cs',\n  Bytearray = 'ba',\n}\n\nexport type KeyBlockHash = `${Encoding.KeyBlockHash}_${string}`;\nexport type MicroBlockHash = `${Encoding.MicroBlockHash}_${string}`;\nexport type BlockPofHash = `${Encoding.BlockPofHash}_${string}`;\nexport type BlockTxHash = `${Encoding.BlockTxHash}_${string}`;\nexport type BlockStateHash = `${Encoding.BlockStateHash}_${string}`;\nexport type Channel = `${Encoding.Channel}_${string}`;\nexport type ContractAddress = `${Encoding.ContractAddress}_${string}`;\nexport type ContractBytearray = `${Encoding.ContractBytearray}_${string}`;\nexport type ContractStoreKey = `${Encoding.ContractStoreKey}_${string}`;\nexport type ContractStoreValue = `${Encoding.ContractStoreValue}_${string}`;\nexport type Transaction = `${Encoding.Transaction}_${string}`;\nexport type TxHash = `${Encoding.TxHash}_${string}`;\nexport type OracleAddress = `${Encoding.OracleAddress}_${string}`;\nexport type OracleQuery = `${Encoding.OracleQuery}_${string}`;\nexport type OracleQueryId = `${Encoding.OracleQueryId}_${string}`;\nexport type OracleResponse = `${Encoding.OracleResponse}_${string}`;\nexport type AccountAddress = `${Encoding.AccountAddress}_${string}`;\nexport type AccountSecretKey = `${Encoding.AccountSecretKey}_${string}`;\nexport type Signature = `${Encoding.Signature}_${string}`;\nexport type Commitment = `${Encoding.Commitment}_${string}`;\nexport type PeerPubkey = `${Encoding.PeerPubkey}_${string}`;\nexport type Name = `${Encoding.Name}_${string}`;\nexport type State = `${Encoding.State}_${string}`;\nexport type Poi = `${Encoding.Poi}_${string}`;\nexport type StateTrees = `${Encoding.StateTrees}_${string}`;\nexport type CallStateTree = `${Encoding.CallStateTree}_${string}`;\nexport type Bytearray = `${Encoding.Bytearray}_${string}`;\n\nexport type Generic<Type extends Encoding> = `${Type}_${string}`;\nexport type Any = `${Encoding}_${string}`;\n","import bs58 from 'bs58';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport Sha256 from 'sha.js/sha256.js';\nimport { DecodeError, ArgumentError, InvalidChecksumError, PayloadLengthError } from './errors.js';\nimport { concatBuffers, isKeyOfObject } from './other.js';\nimport * as Encoded from './encoder-types.js';\nimport { Encoding } from './encoder-types.js';\n\nexport { Encoded, Encoding };\n\n/**\n * Calculate SHA256 hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function sha256hash(input: Uint8Array | string): Buffer {\n  return new Sha256().update(input).digest();\n}\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L177-L202}\n */\nconst base64Types = [\n  Encoding.ContractBytearray,\n  Encoding.ContractStoreKey,\n  Encoding.ContractStoreValue,\n  Encoding.Transaction,\n  Encoding.OracleQuery,\n  Encoding.OracleResponse,\n  Encoding.State,\n  Encoding.Poi,\n  Encoding.StateTrees,\n  Encoding.CallStateTree,\n  Encoding.Bytearray,\n] as const;\nconst base58Types = [\n  Encoding.KeyBlockHash,\n  Encoding.MicroBlockHash,\n  Encoding.BlockPofHash,\n  Encoding.BlockTxHash,\n  Encoding.BlockStateHash,\n  Encoding.Channel,\n  Encoding.ContractAddress,\n  Encoding.TxHash,\n  Encoding.OracleAddress,\n  Encoding.OracleQueryId,\n  Encoding.AccountAddress,\n  Encoding.AccountSecretKey,\n  Encoding.Signature,\n  Encoding.Commitment,\n  Encoding.PeerPubkey,\n  Encoding.Name,\n] as const;\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L261-L286}\n */\nconst byteSizeForType = {\n  [Encoding.KeyBlockHash]: 32,\n  [Encoding.MicroBlockHash]: 32,\n  [Encoding.BlockPofHash]: 32,\n  [Encoding.BlockTxHash]: 32,\n  [Encoding.BlockStateHash]: 32,\n  [Encoding.Channel]: 32,\n  [Encoding.ContractAddress]: 32,\n  [Encoding.TxHash]: 32,\n  [Encoding.OracleAddress]: 32,\n  [Encoding.OracleQueryId]: 32,\n  [Encoding.AccountAddress]: 32,\n  [Encoding.AccountSecretKey]: 32,\n  [Encoding.Signature]: 64,\n  [Encoding.Commitment]: 32,\n  [Encoding.PeerPubkey]: 32,\n  [Encoding.State]: 32,\n} as const;\n\nfunction ensureValidLength(data: Uint8Array, type: Encoding): void {\n  if (!isKeyOfObject(type, byteSizeForType)) return;\n  const reqLen = byteSizeForType[type];\n  if (reqLen == null || data.length === reqLen) return;\n  throw new PayloadLengthError(`Payload should be ${reqLen} bytes, got ${data.length} instead`);\n}\n\nconst getChecksum = (payload: Uint8Array): Buffer => sha256hash(sha256hash(payload)).slice(0, 4);\n\nconst addChecksum = (payload: Uint8Array): Buffer => concatBuffers([payload, getChecksum(payload)]);\n\nfunction getPayload(buffer: Buffer): Buffer {\n  const payload = buffer.slice(0, -4);\n  if (!getChecksum(payload).equals(buffer.slice(-4))) throw new InvalidChecksumError();\n  return payload;\n}\n\nconst base64 = {\n  encode: (buffer: Uint8Array) => addChecksum(buffer).toString('base64'),\n  decode: (string: string) => getPayload(Buffer.from(string, 'base64')),\n};\n\nconst base58 = {\n  encode: (buffer: Uint8Array) => bs58.encode(addChecksum(buffer)),\n  decode: (string: string) => getPayload(Buffer.from(bs58.decode(string))),\n};\n\nconst parseType = (maybeType: unknown): [Encoding, typeof base64] => {\n  const base64Type = base64Types.find((t) => t === maybeType);\n  if (base64Type != null) return [base64Type, base64];\n  const base58Type = base58Types.find((t) => t === maybeType);\n  if (base58Type != null) return [base58Type, base58];\n  throw new ArgumentError(\n    'prefix',\n    `one of ${[...base58Types, ...base64Types].join(', ')}`,\n    maybeType,\n  );\n};\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @param data - An Base58/64check encoded and prefixed string\n * (ex tx_..., sg_..., ak_....)\n * @returns Decoded data\n */\nexport function decode(data: Encoded.Any): Buffer {\n  const [prefix, encodedPayload, extra] = data.split('_');\n  if (encodedPayload == null) throw new DecodeError(`Encoded string missing payload: ${data}`);\n  if (extra != null) throw new DecodeError(`Encoded string have extra parts: ${data}`);\n  const [type, encoder] = parseType(prefix);\n  const payload = encoder.decode(encodedPayload);\n  ensureValidLength(payload, type);\n  return payload;\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @param data - An decoded data\n * @param type - Prefix of Transaction\n * @returns Encoded string Base58check or Base64check data\n */\nexport function encode<Type extends Encoding>(data: Uint8Array, type: Type): Encoded.Generic<Type> {\n  const [, encoder] = parseType(type);\n  ensureValidLength(data, type);\n  return `${type}_${encoder.encode(data)}`;\n}\n","import nacl from 'tweetnacl';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport { blake2b } from 'blakejs/blake2b.js';\nimport { encode as varuintEncode } from 'varuint-bitcoin';\n\nimport { concatBuffers, isItemOfArray } from './other.js';\nimport { decode, encode, Encoded, Encoding } from './encoder.js';\nimport { ArgumentError } from './errors.js';\n\n/**\n * Check if address is valid\n * @param maybeAddress - Address to check\n */\nexport function isAddressValid(maybeAddress: string): maybeAddress is Encoded.AccountAddress;\n/**\n * Check if data is encoded in one of provided encodings\n * @param maybeEncoded - Data to check\n * @param encodings - Rest parameters with encodings to check against\n */\nexport function isAddressValid<E extends Encoding>(\n  maybeEncoded: string,\n  ...encodings: E[]\n): maybeEncoded is Encoded.Generic<E>;\nexport function isAddressValid(maybeEncoded: string, ...encodings: Encoding[]): boolean {\n  if (encodings.length === 0) encodings = [Encoding.AccountAddress];\n  try {\n    decode(maybeEncoded as Encoded.Any);\n    const encoding = maybeEncoded.split('_')[0];\n    if (!isItemOfArray(encoding, encodings)) {\n      throw new ArgumentError(\n        'Encoded string type',\n        encodings.length > 1 ? `one of ${encodings.join(', ')}` : encodings[0],\n        encoding,\n      );\n    }\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Generate a random salt (positive integer)\n * @returns random salt\n */\nexport function genSalt(): number {\n  const [random] = new BigUint64Array(nacl.randomBytes(8).buffer);\n  return Number(random % BigInt(Number.MAX_SAFE_INTEGER));\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @param value - Value to encode\n * @returns Encoded number\n */\nexport function encodeUnsigned(value: number): Buffer {\n  const binary = Buffer.allocUnsafe(4);\n  binary.writeUInt32BE(value);\n  return binary.slice(binary.findIndex((i) => i !== 0));\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function hash(input: string | Uint8Array): Buffer {\n  return Buffer.from(blake2b(input, undefined, 32)); // 256 bits\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @category contract\n * @param owner - Address of contract owner\n * @param nonce - Round when contract was created\n * @returns Contract address\n */\nexport function encodeContractAddress(\n  owner: Encoded.AccountAddress,\n  nonce: number,\n): Encoded.ContractAddress {\n  const publicKey = decode(owner);\n  const binary = concatBuffers([publicKey, encodeUnsigned(nonce)]);\n  return encode(hash(binary), Encoding.ContractAddress);\n}\n\n/**\n * Verify that signature was signed by public key\n * @param data - Data that was signed\n * @param signature - Signature of data\n * @param address - Address to verify against\n * @returns is data was signed by address\n */\nexport function verify(\n  data: Uint8Array,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return nacl.sign.detached.verify(data, signature, decode(address));\n}\n\nconst messagePrefix = Buffer.from('aeternity Signed Message:\\n', 'utf8');\nexport const messagePrefixLength = varuintEncode(messagePrefix.length).buffer;\n\n// TODO: consider rename to hashMessage\nexport function messageToHash(message: string): Buffer {\n  const msg = Buffer.from(message, 'utf8');\n  return hash(\n    concatBuffers([messagePrefixLength, messagePrefix, varuintEncode(msg.length).buffer, msg]),\n  );\n}\n\n/**\n * Verify that message was signed by address\n * @param message - Message that was signed\n * @param signature - Signature of message\n * @param address - Address to verify against\n * @returns is data was signed by address\n */\n// TODO: deprecate in favour of `verify(messageToHash(message), ...`, also the name is confusing\n// it should contain \"signature\"\nexport function verifyMessage(\n  message: string,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return verify(messageToHash(message), signature, address);\n}\n","import { BigNumber } from 'bignumber.js';\nimport { NoSerializerFoundError, TypeError } from './errors.js';\n\n/**\n * Convert string, number, or BigNumber to byte array\n * @param val - value to convert\n * @param big - enables force conversion to BigNumber\n * @returns Buffer\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function toBytes(val?: null | string | number | BigNumber, big = false): Buffer {\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val == null) return Buffer.from([]);\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = new BigNumber(val);\n    if (!val.isInteger()) throw new TypeError(`Unexpected not integer value: ${val.toFixed()}`);\n    let hexString = val.toString(16);\n    if (hexString.length % 2 === 1) hexString = `0${hexString}`;\n    return Buffer.from(hexString, 'hex');\n  }\n  if (typeof val === 'string') {\n    return Buffer.from(val);\n  }\n  throw new NoSerializerFoundError();\n}\n","import { BigNumber } from 'bignumber.js';\nimport { mapObject } from '../../utils/other.js';\n\nexport const DRY_RUN_ACCOUNT = {\n  pub: 'ak_11111111111111111111111111111111273Yts',\n  amount: 100000000000000000000000000000000000n,\n} as const;\n\nexport const MAX_AUTH_FUN_GAS = 50000;\nexport type Int = number | string | BigNumber;\nexport type AensName = `${string}.chain`;\nexport const MIN_GAS_PRICE = 1e9; // TODO: don't use number for ae\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 1e14; // 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05; // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480; // # ~1 day\n// # this is the max length for a domain that requires a base fee to be paid\nexport const NAME_MAX_LENGTH_FEE = 31;\n// # https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # https://github.com/aeternity/protocol/blob/master/AENS.md#protocol-fees-and-protection-times\n// # bid ranges:\nexport const NAME_BID_RANGES = mapObject(\n  {\n    31: 3,\n    30: 5,\n    29: 8,\n    28: 13,\n    27: 21,\n    26: 34,\n    25: 55,\n    24: 89,\n    23: 144,\n    22: 233,\n    21: 377,\n    20: 610,\n    19: 987,\n    18: 1597,\n    17: 2584,\n    16: 4181,\n    15: 6765,\n    14: 10946,\n    13: 17711,\n    12: 28657,\n    11: 46368,\n    10: 75025,\n    9: 121393,\n    8: 196418,\n    7: 317811,\n    6: 514229,\n    5: 832040,\n    4: 1346269,\n    3: 2178309,\n    2: 3524578,\n    1: 5702887,\n  },\n  ([key, value]) => [key, new BigNumber(value).times(NAME_FEE_MULTIPLIER)],\n);\n\nexport enum ConsensusProtocolVersion {\n  Ceres = 6,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum VmVersion {\n  NoVm = 0,\n  Sophia = 1,\n  SophiaImprovementsMinerva = 3,\n  SophiaImprovementsFortuna = 4,\n  Fate = 5,\n  SophiaImprovementsLima = 6,\n  Fate2 = 7,\n  Fate3 = 8,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum AbiVersion {\n  NoAbi = 0,\n  Sophia = 1,\n  Fate = 3,\n}\n\n/**\n * Enum with tag types\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/serializations.md#binary-serialization}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_chain_objects.erl#L39-L97}\n */\n// TODO: implement serialisation for commented-out tags\nexport enum Tag {\n  SignedTx = 11,\n  SpendTx = 12,\n  OracleRegisterTx = 22,\n  OracleQueryTx = 23,\n  OracleResponseTx = 24,\n  OracleExtendTx = 25,\n  NameClaimTx = 32,\n  NamePreclaimTx = 33,\n  NameUpdateTx = 34,\n  NameRevokeTx = 35,\n  NameTransferTx = 36,\n  ContractCreateTx = 42,\n  ContractCallTx = 43,\n  ChannelCreateTx = 50,\n  ChannelDepositTx = 51,\n  ChannelWithdrawTx = 52,\n  ChannelForceProgressTx = 521,\n  ChannelCloseMutualTx = 53,\n  ChannelCloseSoloTx = 54,\n  ChannelSlashTx = 55,\n  ChannelSettleTx = 56,\n  ChannelOffChainTx = 57,\n  ChannelSnapshotSoloTx = 59,\n  GaAttachTx = 80,\n  GaMetaTx = 81,\n  PayingForTx = 82,\n}\n","import { BigNumber } from 'bignumber.js';\nimport { genSalt, hash } from '../../utils/crypto.js';\nimport { decode, encode, Encoded, Encoding } from '../../utils/encoder.js';\nimport { toBytes } from '../../utils/bytes.js';\nimport { concatBuffers } from '../../utils/other.js';\nimport {\n  AensName,\n  NAME_BID_RANGES,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_FEE_BID_INCREMENT,\n  NAME_MAX_LENGTH_FEE,\n} from './constants.js';\nimport { ceil } from '../../utils/bignumber.js';\nimport { ArgumentError, IllegalBidFeeError } from '../../utils/errors.js';\n\n/**\n * JavaScript-based Transaction builder helper function's\n */\n\n/**\n * Build a contract public key\n * @category contract\n * @param ownerId - The public key of the owner account\n * @param nonce - the nonce of the transaction\n * @returns Contract public key\n */\nexport function buildContractId(\n  ownerId: Encoded.AccountAddress,\n  nonce: number | BigNumber,\n): Encoded.ContractAddress {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId), ...toBytes(nonce)]);\n  const b2bHash = hash(ownerIdAndNonce);\n  return encode(b2bHash, Encoding.ContractAddress);\n}\n\n/**\n * Build a oracle query id\n * @category oracle\n * @param senderId - The public key of the sender account\n * @param nonce - the nonce of the transaction\n * @param oracleId - The oracle public key\n * @returns Contract public key\n */\nexport function oracleQueryId(\n  senderId: Encoded.AccountAddress,\n  nonce: number | BigNumber | string,\n  oracleId: Encoded.OracleAddress,\n): Encoded.OracleQueryId {\n  function _int32(val: number | string | BigNumber): Buffer {\n    const nonceBE = toBytes(val, true);\n    return concatBuffers([Buffer.alloc(32 - nonceBE.length), nonceBE]);\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId), ..._int32(nonce), ...decode(oracleId)]));\n  return encode(b2bHash, Encoding.OracleQueryId);\n}\n\nconst AENS_SUFFIX = '.chain';\n\nexport function nameToPunycode(maybeName: string): AensName {\n  const [name, suffix, ...other] = maybeName.split('.');\n  if (other.length !== 0) throw new ArgumentError('aens name', 'including only one dot', maybeName);\n  if (suffix !== AENS_SUFFIX.slice(1)) {\n    throw new ArgumentError('aens name', `suffixed with ${AENS_SUFFIX}`, maybeName);\n  }\n  if (/\\p{Emoji_Presentation}/u.test(name)) {\n    throw new ArgumentError('aens name', 'not containing emoji', maybeName);\n  }\n  if (name[2] === '-' && name[3] === '-') {\n    throw new ArgumentError(\n      'aens name',\n      'without \"-\" char in both the third and fourth positions',\n      maybeName,\n    );\n  }\n  if (name[0] === '-') {\n    throw new ArgumentError('aens name', 'starting with no \"-\" char', maybeName);\n  }\n  if (name.at(-1) === '-') {\n    throw new ArgumentError('aens name', 'ending with no \"-\" char', maybeName);\n  }\n  let punycode;\n  try {\n    const u = new URL(`http://${name}.${suffix}`);\n    if (u.username + u.password + u.port + u.search + u.hash !== '' || u.pathname !== '/') {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    punycode = u.host;\n  } catch (error) {\n    if (error instanceof TypeError && error.message.includes('Invalid URL')) {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    throw error;\n  }\n  if (!/^[a-z0-9.-]+$/i.test(punycode)) {\n    throw new ArgumentError('aens name', 'without illegal chars', maybeName);\n  }\n  if (punycode.length > 63 + AENS_SUFFIX.length) {\n    throw new ArgumentError('aens name', 'not too long', maybeName);\n  }\n  return punycode as AensName;\n}\n\n/**\n * Encode an AENS name\n * @category AENS\n * @param name - Name to encode\n * @returns `nm_` prefixed encoded AENS name\n */\nexport function produceNameId(name: AensName): Encoded.Name {\n  return encode(hash(nameToPunycode(name)), Encoding.Name);\n}\n\n/**\n * Generate the commitment hash by hashing the salt and\n * name, base 58 encoding the result and prepending 'cm_'\n * @category transaction builder\n * @param name - Name to be registered\n * @param salt - Random number\n * @returns Commitment hash\n */\nexport function commitmentHash(name: AensName, salt: number = genSalt()): Encoded.Commitment {\n  return encode(\n    hash(\n      concatBuffers([\n        Buffer.from(nameToPunycode(name)),\n        Buffer.from(salt.toString(16).padStart(64, '0'), 'hex'),\n      ]),\n    ),\n    Encoding.Commitment,\n  );\n}\n\n/**\n * Utility function to convert bytes to int\n * @category transaction builder\n * @param buf - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function readInt(buf: Buffer = Buffer.from([])): string {\n  return new BigNumber(Buffer.from(buf).toString('hex'), 16).toString(10);\n}\n\n/**\n * Ensure that name is valid AENS name, would throw an exception otherwise\n * @category AENS\n * @param maybeName - AENS name\n */\nexport function ensureName(maybeName: string): asserts maybeName is AensName {\n  nameToPunycode(maybeName);\n}\n\n/**\n * Is AENS name valid\n * @category AENS\n * @param maybeName - AENS name\n */\n// TODO: consider renaming to isName\nexport function isNameValid(maybeName: string): maybeName is AensName {\n  try {\n    ensureName(maybeName);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nconst encodingToPointerKey = [\n  [Encoding.AccountAddress, 'account_pubkey'],\n  [Encoding.OracleAddress, 'oracle_pubkey'],\n  [Encoding.ContractAddress, 'contract_pubkey'],\n  [Encoding.Channel, 'channel'],\n] as const;\n\n/**\n * @category AENS\n * @param identifier - account/oracle/contract address, or channel\n * @returns default AENS pointer key\n */\nexport function getDefaultPointerKey(\n  identifier: Encoded.Generic<(typeof encodingToPointerKey)[number][0]>,\n): (typeof encodingToPointerKey)[number][1] {\n  decode(identifier);\n  const encoding = identifier.substring(0, 2);\n  const result = encodingToPointerKey.find(([e]) => e === encoding)?.[1];\n  if (result != null) return result;\n  throw new ArgumentError(\n    'identifier',\n    `prefixed with one of ${encodingToPointerKey.map(([e]) => `${e}_`).join(', ')}`,\n    identifier,\n  );\n}\n\n/**\n * Get the minimum AENS name fee\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @returns the minimum fee for the AENS name auction\n */\nexport function getMinimumNameFee(name: AensName): BigNumber {\n  const nameLength = nameToPunycode(name).length - AENS_SUFFIX.length;\n  return NAME_BID_RANGES[Math.min(nameLength, NAME_MAX_LENGTH_FEE)];\n}\n\n/**\n * Compute bid fee for AENS auction\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @param options - Options\n * @param options.startFee - Auction start fee\n * @param options.increment - Bid multiplier(In percentage, must be between 0 and 1)\n * @returns Bid fee\n */\nexport function computeBidFee(\n  name: AensName,\n  {\n    startFee,\n    increment = NAME_FEE_BID_INCREMENT,\n  }: { startFee?: number | string | BigNumber; increment?: number } = {},\n): BigNumber {\n  if (!(Number(increment) === increment && increment % 1 !== 0))\n    throw new IllegalBidFeeError(`Increment must be float. Current increment ${increment}`);\n  if (increment < NAME_FEE_BID_INCREMENT)\n    throw new IllegalBidFeeError(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`);\n  // FIXME: increment should be used somehow here\n  return ceil(\n    new BigNumber(startFee ?? getMinimumNameFee(name)).times(\n      new BigNumber(NAME_FEE_BID_INCREMENT).plus(1),\n    ),\n  );\n}\n\n/**\n * Compute auction end height\n * @category AENS\n * @param name - Name to compute auction end for\n * @param claimHeight - Auction starting height\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273}\n * @returns Auction end height\n */\nexport function computeAuctionEndBlock(name: AensName, claimHeight: number): number {\n  const length = nameToPunycode(name).length - AENS_SUFFIX.length;\n  const h =\n    (length <= 4 ? 62 * NAME_BID_TIMEOUT_BLOCKS : null) ??\n    (length <= 8 ? 31 * NAME_BID_TIMEOUT_BLOCKS : null) ??\n    (length <= 12 ? NAME_BID_TIMEOUT_BLOCKS : null) ??\n    0;\n  return h + claimHeight;\n}\n\n/**\n * Is name accept going to auction\n * @category AENS\n */\nexport function isAuctionName(name: AensName): boolean {\n  return nameToPunycode(name).length < 13 + AENS_SUFFIX.length;\n}\n","import { AE_AMOUNT_FORMATS, formatAmount } from './utils/amount-formatter.js';\nimport { isAccountNotFoundError, pause } from './utils/other.js';\nimport { unwrapProxy } from './utils/wrap-proxy.js';\nimport { isNameValid, produceNameId } from './tx/builder/helpers.js';\nimport { AensName, DRY_RUN_ACCOUNT } from './tx/builder/constants.js';\nimport {\n  AensPointerContextError,\n  DryRunError,\n  InvalidAensNameError,\n  TxTimedOutError,\n  TxNotInChainError,\n  InternalError,\n} from './utils/errors.js';\nimport Node from './Node.js';\nimport { DryRunResult, DryRunResults, SignedTx } from './apis/node/index.js';\nimport { decode, encode, Encoded, Encoding } from './utils/encoder.js';\n\n/**\n * @category chain\n * @param type - Type\n * @param options - Options\n */\nexport async function _getPollInterval(\n  type: 'key-block' | 'micro-block',\n  {\n    _expectedMineRate,\n    _microBlockCycle,\n    onNode,\n  }: { _expectedMineRate?: number; _microBlockCycle?: number; onNode: Node },\n): Promise<number> {\n  const getVal = async (\n    t: string,\n    val: number | undefined,\n    devModeDef: number,\n    def: number,\n  ): Promise<number | null> => {\n    if (t !== type) return null;\n    if (val != null) return val;\n    return (await onNode?.getNetworkId()) === 'ae_dev' ? devModeDef : def;\n  };\n\n  const base =\n    (await getVal('key-block', _expectedMineRate, 0, 180000)) ??\n    (await getVal('micro-block', _microBlockCycle, 0, 3000)) ??\n    (() => {\n      throw new InternalError(`Unknown type: ${type}`);\n    })();\n  return Math.floor(base / 3);\n}\n\nconst heightCache: WeakMap<Node, { time: number; height: number }> = new WeakMap();\n\n/**\n * Obtain current height of the chain\n * @category chain\n * @param options - Options\n * @param options.cached - Get height from the cache. The lag behind the actual height shouldn't\n * be more than 1 block. Use if needed to reduce requests count, and approximate value can be used.\n * For example, for timeout check in transaction status polling.\n * @returns Current chain height\n */\nexport async function getHeight({\n  cached = false,\n  ...options\n}: {\n  onNode: Node;\n  cached?: boolean;\n} & Parameters<typeof _getPollInterval>[1]): Promise<number> {\n  const onNode = unwrapProxy(options.onNode);\n  if (cached) {\n    const cache = heightCache.get(onNode);\n    if (cache != null && cache.time > Date.now() - (await _getPollInterval('key-block', options))) {\n      return cache.height;\n    }\n  }\n  const { height } = await onNode.getCurrentKeyBlockHeight();\n  heightCache.set(onNode, { height, time: Date.now() });\n  return height;\n}\n\n/**\n * Return transaction details if it is mined, fail otherwise.\n * If the transaction has ttl specified then would wait till it leaves the mempool.\n * Otherwise would fail if a specified amount of blocks were mined.\n * @category chain\n * @param th - The hash of transaction to poll\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.blocks - Number of blocks mined after which to fail if transaction ttl is not set\n * @param options.onNode - Node to use\n * @returns The transaction as it was mined\n */\nexport async function poll(\n  th: Encoded.TxHash,\n  {\n    blocks = 5,\n    interval,\n    ...options\n  }: { blocks?: number; interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): ReturnType<Node['getTransactionByHash']> {\n  interval ??= await _getPollInterval('micro-block', options);\n  let max;\n  do {\n    const tx = await options.onNode.getTransactionByHash(th);\n    if (tx.blockHeight !== -1) return tx;\n    if (max == null) {\n      max = tx.tx.ttl !== 0 ? -1 : (await getHeight({ ...options, cached: true })) + blocks;\n    }\n    await pause(interval);\n  } while (max === -1 ? true : (await getHeight({ ...options, cached: true })) < max);\n  throw new TxTimedOutError(blocks, th);\n}\n\n/**\n * Wait for the chain to reach a specific height\n * @category chain\n * @param height - Height to wait for\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.onNode - Node to use\n * @returns Current chain height\n */\nexport async function awaitHeight(\n  height: number,\n  {\n    interval,\n    ...options\n  }: { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<number> {\n  interval ??= Math.min(await _getPollInterval('key-block', options), 5000);\n  let currentHeight;\n  do {\n    if (currentHeight != null) await pause(interval);\n    currentHeight = await getHeight(options);\n  } while (currentHeight < height);\n  return currentHeight;\n}\n\n/**\n * Wait for transaction confirmation\n * @category chain\n * @param txHash - Transaction hash\n * @param options - Options\n * @param options.confirm - Number of micro blocks to wait for transaction confirmation\n * @param options.onNode - Node to use\n * @returns Current Height\n */\nexport async function waitForTxConfirm(\n  txHash: Encoded.TxHash,\n  {\n    confirm = 3,\n    onNode,\n    ...options\n  }: { confirm?: number; onNode: Node } & Parameters<typeof awaitHeight>[1],\n): Promise<number> {\n  const { blockHeight } = await onNode.getTransactionByHash(txHash);\n  const height = await awaitHeight(blockHeight + confirm, { onNode, ...options });\n  const { blockHeight: newBlockHeight } = await onNode.getTransactionByHash(txHash);\n  switch (newBlockHeight) {\n    case -1:\n      throw new TxNotInChainError(txHash);\n    case blockHeight:\n      return height;\n    default:\n      return waitForTxConfirm(txHash, { onNode, confirm, ...options });\n  }\n}\n\n/**\n * Get account by account public key\n * @category chain\n * @param address - Account address (public key)\n * @param options - Options\n * @param options.height - Get account on specific block by block height\n * @param options.hash - Get account on specific block by micro block hash or key block hash\n * @param options.onNode - Node to use\n */\nexport async function getAccount(\n  address: Encoded.AccountAddress | Encoded.ContractAddress,\n  {\n    height,\n    hash,\n    onNode,\n  }: { height?: number; hash?: Encoded.KeyBlockHash | Encoded.MicroBlockHash; onNode: Node },\n): ReturnType<Node['getAccountByPubkey']> {\n  if (height != null) return onNode.getAccountByPubkeyAndHeight(address, height);\n  if (hash != null) return onNode.getAccountByPubkeyAndHash(address, hash);\n  return onNode.getAccountByPubkey(address);\n}\n\n/**\n * Request the balance of specified account\n * @category chain\n * @param address - The public account address to obtain the balance for\n * @param options - Options\n * @param options.format\n * @param options.height - The chain height at which to obtain the balance for\n * (default: top of chain)\n * @param options.hash - The block hash on which to obtain the balance for (default: top of chain)\n */\nexport async function getBalance(\n  address: Encoded.AccountAddress | Encoded.ContractAddress | Encoded.OracleAddress,\n  {\n    format = AE_AMOUNT_FORMATS.AETTOS,\n    ...options\n  }: { format?: AE_AMOUNT_FORMATS } & Parameters<typeof getAccount>[1],\n): Promise<string> {\n  const addr = address.startsWith('ok_')\n    ? encode(decode(address), Encoding.AccountAddress)\n    : (address as Encoded.AccountAddress | Encoded.ContractAddress);\n\n  const { balance } = await getAccount(addr, options).catch((error) => {\n    if (!isAccountNotFoundError(error)) throw error;\n    return { balance: 0n };\n  });\n\n  return formatAmount(balance, { targetDenomination: format });\n}\n\n/**\n * Obtain current generation\n * @category chain\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Current Generation\n */\nexport async function getCurrentGeneration({\n  onNode,\n}: {\n  onNode: Node;\n}): ReturnType<Node['getCurrentGeneration']> {\n  return onNode.getCurrentGeneration();\n}\n\n/**\n * Get generation by hash or height\n * @category chain\n * @param hashOrHeight - Generation hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Generation\n */\nexport async function getGeneration(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getGenerationByHash']> {\n  if (typeof hashOrHeight === 'number') return onNode.getGenerationByHeight(hashOrHeight);\n  return onNode.getGenerationByHash(hashOrHeight);\n}\n\n/**\n * Get micro block transactions\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transactions\n */\nexport async function getMicroBlockTransactions(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<SignedTx[]> {\n  return (await onNode.getMicroBlockTransactionsByHash(hash)).transactions;\n}\n\n/**\n * Get key block\n * @category chain\n * @param hashOrHeight - Key block hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Key Block\n */\nexport async function getKeyBlock(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getKeyBlockByHash']> {\n  if (typeof hashOrHeight === 'number') return onNode.getKeyBlockByHeight(hashOrHeight);\n  return onNode.getKeyBlockByHash(hashOrHeight);\n}\n\n/**\n * Get micro block header\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Micro block header\n */\nexport async function getMicroBlockHeader(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getMicroBlockHeaderByHash']> {\n  return onNode.getMicroBlockHeaderByHash(hash);\n}\n\ninterface TxDryRunArguments {\n  tx: Encoded.Transaction;\n  accountAddress: Encoded.AccountAddress;\n  top?: number | Encoded.KeyBlockHash | Encoded.MicroBlockHash;\n  txEvents?: any;\n  resolve: Function;\n  reject: Function;\n}\nconst txDryRunRequests: Map<string, TxDryRunArguments[] & { timeout?: NodeJS.Timeout }> = new Map();\n\nasync function txDryRunHandler(key: string, onNode: Node): Promise<void> {\n  const rs = txDryRunRequests.get(key);\n  txDryRunRequests.delete(key);\n  if (rs == null) throw new InternalError(\"Can't get dry-run request\");\n\n  let dryRunRes;\n  try {\n    const top =\n      typeof rs[0].top === 'number' ? (await getKeyBlock(rs[0].top, { onNode })).hash : rs[0].top;\n    dryRunRes = await onNode.protectedDryRunTxs({\n      top,\n      txEvents: rs[0].txEvents,\n      txs: rs.map((req) => ({ tx: req.tx })),\n      accounts: Array.from(new Set(rs.map((req) => req.accountAddress))).map((pubKey) => ({\n        pubKey,\n        amount: DRY_RUN_ACCOUNT.amount,\n      })),\n    });\n  } catch (error) {\n    rs.forEach(({ reject }) => reject(error));\n    return;\n  }\n\n  const { results, txEvents } = dryRunRes;\n  results.forEach(({ result, reason, ...resultPayload }, idx) => {\n    const { resolve, reject, tx, accountAddress } = rs[idx];\n    if (result === 'ok') resolve({ ...resultPayload, txEvents });\n    else reject(Object.assign(new DryRunError(reason as string), { tx, accountAddress }));\n  });\n}\n\n/**\n * Transaction dry-run\n * @category chain\n * @param tx - transaction to execute\n * @param accountAddress - address that will be used to execute transaction\n * @param options - Options\n * @param options.top - hash of block on which to make dry-run\n * @param options.txEvents - collect and return on-chain tx events that would result from the call\n * @param options.combine - Enables combining of similar requests to a single dry-run call\n * @param options.onNode - Node to use\n */\nexport async function txDryRun(\n  tx: Encoded.Transaction,\n  accountAddress: Encoded.AccountAddress,\n  {\n    top,\n    txEvents,\n    combine,\n    onNode,\n  }: { top?: TxDryRunArguments['top']; txEvents?: boolean; combine?: boolean; onNode: Node },\n): Promise<{ txEvents?: DryRunResults['txEvents'] } & DryRunResult> {\n  const key = combine === true ? [top, txEvents].join() : 'immediate';\n  const requests = txDryRunRequests.get(key) ?? [];\n  txDryRunRequests.set(key, requests);\n  return new Promise((resolve, reject) => {\n    requests.push({\n      tx,\n      accountAddress,\n      top,\n      txEvents,\n      resolve,\n      reject,\n    });\n    if (combine !== true) {\n      void txDryRunHandler(key, onNode);\n      return;\n    }\n    requests.timeout ??= setTimeout(() => {\n      void txDryRunHandler(key, onNode);\n    });\n  });\n}\n\n/**\n * Get contract byte code\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContractByteCode(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getContractCode']> {\n  return onNode.getContractCode(contractId);\n}\n\n/**\n * Get contract entry\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContract(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getContract']> {\n  return onNode.getContract(contractId);\n}\n\n/**\n * Get name entry\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getName(\n  name: AensName,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getNameEntryByName']> {\n  return onNode.getNameEntryByName(name);\n}\n\n/**\n * Resolve AENS name and return name hash\n * @category AENS\n * @param nameOrId - AENS name or address\n * @param key - in AENS pointers record\n * @param options - Options\n * @param options.verify - To ensure that name exist and have a corresponding pointer\n * // TODO: avoid that to don't trust to current api gateway\n * @param options.resolveByNode - Enables pointer resolving using node\n * @param options.onNode - Node to use\n * @returns Address or AENS name hash\n */\nexport async function resolveName<Type extends Encoding.AccountAddress | Encoding.ContractAddress>(\n  nameOrId: AensName | Encoded.Generic<Type>,\n  key: string,\n  {\n    verify = true,\n    resolveByNode = false,\n    onNode,\n  }: { verify?: boolean; resolveByNode?: boolean; onNode: Node },\n): Promise<Encoded.Generic<Type | Encoding.Name>> {\n  if (isNameValid(nameOrId)) {\n    if (verify || resolveByNode) {\n      const name = await onNode.getNameEntryByName(nameOrId);\n      const pointer = name.pointers.find((p) => p.key === key);\n      if (pointer == null) throw new AensPointerContextError(nameOrId, key);\n      if (resolveByNode) return pointer.id as Encoded.Generic<Type>;\n    }\n    return produceNameId(nameOrId);\n  }\n  try {\n    decode(nameOrId);\n    return nameOrId;\n  } catch (error) {\n    throw new InvalidAensNameError(`Invalid name or address: ${nameOrId}`);\n  }\n}\n","import { ConsensusProtocolVersion, VmVersion, AbiVersion } from '../constants.js';\nimport Node from '../../../Node.js';\n\n/*\n * First abi/vm by default\n * @see {@link https://github.com/aeternity/protocol/blob/71cf111/contracts/contract_vms.md#virtual-machines-on-the-æternity-blockchain}\n */\nexport const ProtocolToVmAbi = {\n  [ConsensusProtocolVersion.Ceres]: {\n    'contract-create': {\n      vmVersion: [VmVersion.Fate3],\n      abiVersion: [AbiVersion.Fate],\n    },\n    'contract-call': {\n      vmVersion: [],\n      abiVersion: [AbiVersion.Fate],\n    },\n    'oracle-call': {\n      vmVersion: [],\n      abiVersion: [AbiVersion.NoAbi, AbiVersion.Fate],\n    },\n  },\n} as const;\n\nexport interface CtVersion {\n  vmVersion: VmVersion;\n  abiVersion: AbiVersion;\n}\n\nexport function getProtocolDetails(\n  protocolVersion: ConsensusProtocolVersion,\n  type: 'contract-create' | 'contract-call' | 'oracle-call',\n): CtVersion {\n  const protocol = ProtocolToVmAbi[protocolVersion][type];\n  return {\n    vmVersion: protocol.vmVersion[0] ?? VmVersion.Fate2,\n    abiVersion: protocol.abiVersion[0],\n  };\n}\n\nexport default {\n  serialize(\n    value: CtVersion | undefined,\n    params: {},\n    {\n      consensusProtocolVersion = ConsensusProtocolVersion.Ceres,\n    }: { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    value ??= getProtocolDetails(consensusProtocolVersion, 'contract-create');\n\n    return Buffer.from([value.vmVersion, 0, value.abiVersion]);\n  },\n\n  async prepare(\n    value: CtVersion | undefined,\n    params: {},\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<CtVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        'contract-create',\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): CtVersion {\n    const [vm, , abi] = buffer;\n    return { vmVersion: +vm, abiVersion: +abi };\n  },\n};\n","import { Tag, ConsensusProtocolVersion, AbiVersion } from '../constants.js';\nimport { getProtocolDetails } from './ct-version.js';\nimport Node from '../../../Node.js';\n\nexport default {\n  _getProtocolDetails(c: ConsensusProtocolVersion, tag: Tag): AbiVersion {\n    const kind =\n      Tag.ContractCallTx === tag || Tag.GaMetaTx === tag ? 'contract-call' : 'oracle-call';\n    return getProtocolDetails(c, kind).abiVersion;\n  },\n\n  serialize(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    {\n      consensusProtocolVersion = ConsensusProtocolVersion.Ceres,\n    }: { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    const result = value ?? this._getProtocolDetails(consensusProtocolVersion, tag);\n\n    return Buffer.from([result]);\n  },\n\n  async prepare(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<AbiVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return this._getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        tag,\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): AbiVersion {\n    return buffer[0];\n  },\n};\n","import { ArgumentError, PrefixNotFoundError, TagNotFoundError } from '../../../utils/errors.js';\nimport { toBytes } from '../../../utils/bytes.js';\nimport { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { isItemOfArray } from '../../../utils/other.js';\n\n/**\n * Map of prefix to ID tag constant\n * @see {@link https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_id.erl#L97-L102}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L163-L168}\n */\nexport const idTagToEncoding = [\n  Encoding.AccountAddress,\n  Encoding.Name,\n  Encoding.Commitment,\n  Encoding.OracleAddress,\n  Encoding.ContractAddress,\n  Encoding.Channel,\n] as const;\n\nexport type AddressEncodings = (typeof idTagToEncoding)[number];\n\nexport default function genAddressField<Encoding extends AddressEncodings>(\n  ...encodings: Encoding[]\n): {\n  serialize: (value: Encoded.Generic<Encoding>) => Buffer;\n  deserialize: (value: Buffer) => Encoded.Generic<Encoding>;\n} {\n  return {\n    /**\n     * Utility function to create and _id type\n     * @param hashId - Encoded hash\n     * @returns Buffer Buffer with ID tag and decoded HASh\n     */\n    serialize(hashId) {\n      const enc = hashId.slice(0, 2);\n      if (!isItemOfArray(enc, idTagToEncoding)) throw new TagNotFoundError(enc);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      const idTag = idTagToEncoding.indexOf(enc) + 1;\n      return Buffer.from([...toBytes(idTag), ...decode(hashId)]);\n    },\n\n    /**\n     * Utility function to read and _id type\n     * @param buf - Data\n     * @returns Encoded hash string with prefix\n     */\n    deserialize(buf) {\n      const idTag = Buffer.from(buf).readUIntBE(0, 1);\n      const enc = idTagToEncoding[idTag - 1];\n      if (enc == null) throw new PrefixNotFoundError(idTag);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      return encode(buf.subarray(1), enc) as Encoded.Generic<Encoding>;\n    },\n  };\n}\n","export default function genArrayField<Input, Output, Binary>(itemHandler: {\n  serialize: (value: Input, params: unknown) => Binary;\n  deserialize: (value: Binary, params: unknown) => Output;\n}): {\n  serialize: (value: readonly Input[], params: unknown) => Binary[];\n  deserialize: (value: Binary[], params: unknown) => Output[];\n} {\n  return {\n    serialize(items, params) {\n      return items.map((item) => itemHandler.serialize(item, params));\n    },\n\n    deserialize(buffers, params) {\n      return buffers.map((buffer) => itemHandler.deserialize(buffer, params));\n    },\n  };\n}\n","import { readInt } from '../helpers.js';\nimport { Int } from '../constants.js';\nimport { ArgumentError } from '../../../utils/errors.js';\nimport { toBytes } from '../../../utils/bytes.js';\n\nexport default {\n  serialize(value: Int): Buffer {\n    if (Number(value) < 0) throw new ArgumentError('value', 'greater or equal to 0', value);\n    return toBytes(value, true);\n  },\n\n  deserialize(value: Buffer): string {\n    return readInt(value);\n  },\n};\n","import uInt from './u-int.js';\nimport { Int } from '../constants.js';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter.js';\n\nexport default {\n  ...uInt,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  serializeAettos(value: string | undefined, params: {}, options: {}): string {\n    return value ?? '0';\n  },\n\n  serialize(\n    value: Int | undefined,\n    params: {},\n    { denomination = AE_AMOUNT_FORMATS.AETTOS, ...options }: { denomination?: AE_AMOUNT_FORMATS },\n  ): Buffer {\n    return uInt.serialize(\n      this.serializeAettos(\n        value != null ? formatAmount(value, { denomination }) : value,\n        params,\n        options,\n      ),\n    );\n  },\n};\n","import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { ArgumentError } from '../../../utils/errors.js';\n\nexport default function genEncodedField<E extends Encoding, Optional extends boolean = false>(\n  encoding: E,\n  optional?: Optional,\n): {\n  serialize: Optional extends true\n    ? (value?: Encoded.Generic<E>) => Buffer\n    : (value: Encoded.Generic<E>) => Buffer;\n  deserialize: (value: Buffer) => Encoded.Generic<E>;\n} {\n  return {\n    serialize(encodedData?: Encoded.Generic<E>) {\n      if (encodedData == null) {\n        if (optional === true) return Buffer.from([]);\n        throw new ArgumentError('Encoded data', 'provided', encodedData);\n      }\n      return decode(encodedData);\n    },\n\n    deserialize(buffer) {\n      return encode(buffer, encoding);\n    },\n  };\n}\n","import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { EntryTag } from '../entry/constants.js';\nimport type { unpackEntry as unpackEntryType, packEntry as packEntryType } from '../entry/index.js';\n\nexport default function genEntryField<T extends EntryTag = EntryTag>(\n  tag?: T,\n): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { packEntry: typeof packEntryType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackEntry: typeof unpackEntryType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n} {\n  return {\n    serialize(txParams, { packEntry }) {\n      if (ArrayBuffer.isView(txParams)) return Buffer.from(txParams as any);\n      if (typeof txParams === 'string' && txParams.startsWith('tx_')) {\n        return decode(txParams as Encoded.Transaction);\n      }\n      return decode(packEntry({ ...txParams, ...(tag != null && { tag }) }));\n    },\n\n    deserialize(buf, { unpackEntry }) {\n      return unpackEntry(encode(buf, Encoding.Bytearray), tag);\n    },\n  };\n}\n","import { ArgumentError } from '../../../utils/errors.js';\nimport { isItemOfArray } from '../../../utils/other.js';\n\nexport default function genEnumerationField<Enum extends { [key: string]: number | string }>(\n  enm: Enum,\n): {\n  serialize: (value: Enum[keyof Enum]) => Buffer;\n  deserialize: (value: Buffer) => Enum[keyof Enum];\n} {\n  const values = Object.values(enm).filter((v) => typeof v === 'number');\n  return {\n    serialize(value) {\n      if (typeof value !== 'number') throw new ArgumentError('value', 'to be a number', value);\n      if (value > 0xff) throw new ArgumentError('value', 'to be less than 256', value);\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return Buffer.from([value]);\n    },\n\n    deserialize(buffer) {\n      if (buffer.length !== 1) {\n        throw new ArgumentError('buffer', 'to have single element', buffer.length);\n      }\n      const value = buffer[0];\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return value as Enum[keyof Enum];\n    },\n  };\n}\n","import { BigNumber } from 'bignumber.js';\nimport coinAmount from './coin-amount.js';\nimport { ArgumentError, IllegalArgumentError } from '../../../utils/errors.js';\nimport { Int, MIN_GAS_PRICE } from '../constants.js';\nimport Node from '../../../Node.js';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter.js';\n\nconst gasPriceCache: WeakMap<Node, { time: number; gasPrice: bigint }> = new WeakMap();\n\nexport async function getCachedIncreasedGasPrice(node: Node): Promise<bigint> {\n  const cache = gasPriceCache.get(node);\n  if (cache != null && cache.time > Date.now() - 20 * 1000) {\n    return cache.gasPrice;\n  }\n\n  const { minGasPrice, utilization } = (await node.getRecentGasPrices())[0];\n  let gasPrice =\n    utilization < 70\n      ? 0n\n      : BigInt(new BigNumber(minGasPrice.toString()).times(1.01).integerValue().toFixed());\n\n  const maxSafeGasPrice = BigInt(MIN_GAS_PRICE) * 100000n; // max microblock fee is 600ae or 35usd\n  if (gasPrice > maxSafeGasPrice) {\n    console.warn(\n      `Estimated gas price ${gasPrice} exceeds the maximum safe value for unknown reason.` +\n        ` It will be limited to ${maxSafeGasPrice}.` +\n        ' To overcome this restriction provide `gasPrice`/`fee` in options.',\n    );\n    gasPrice = maxSafeGasPrice;\n  }\n\n  gasPriceCache.set(node, { gasPrice, time: Date.now() });\n  return gasPrice;\n}\n\n// TODO: use withFormatting after using a single type for coins representation\nexport default {\n  ...coinAmount,\n\n  async prepare(\n    value: Int | undefined,\n    params: {},\n    {\n      onNode,\n      denomination,\n    }: {\n      onNode?: Node;\n      denomination?: AE_AMOUNT_FORMATS;\n    },\n  ): Promise<Int | undefined> {\n    if (value != null) return value;\n    if (onNode == null) {\n      throw new ArgumentError('onNode', 'provided (or provide `gasPrice` instead)', onNode);\n    }\n    const gasPrice = await getCachedIncreasedGasPrice(onNode);\n    if (gasPrice === 0n) return undefined;\n    return formatAmount(gasPrice, { targetDenomination: denomination });\n  },\n\n  serializeAettos(value: string | undefined = MIN_GAS_PRICE.toString()): string {\n    if (+value < MIN_GAS_PRICE) {\n      throw new IllegalArgumentError(\n        `Gas price ${value.toString()} must be bigger than ${MIN_GAS_PRICE}`,\n      );\n    }\n    return value;\n  },\n};\n","import { BigNumber } from 'bignumber.js';\nimport { ArgumentError, IllegalArgumentError } from '../../../utils/errors.js';\nimport { Int, MIN_GAS_PRICE, Tag } from '../constants.js';\nimport uInt from './u-int.js';\nimport coinAmount from './coin-amount.js';\nimport { getCachedIncreasedGasPrice } from './gas-price.js';\nimport { isKeyOfObject } from '../../../utils/other.js';\nimport { decode, Encoded } from '../../../utils/encoder.js';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index.js';\nimport Node from '../../../Node.js';\n\nconst BASE_GAS = 15000;\nconst GAS_PER_BYTE = 20;\nconst KEY_BLOCK_INTERVAL = 3;\n\n/**\n * Calculate the base gas\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @returns The base gas\n * @example\n * ```js\n * TX_BASE_GAS(Tag.ChannelForceProgressTx) => 30 * 15000\n * ```\n */\nconst TX_BASE_GAS = (txType: Tag): number => {\n  const feeFactors = {\n    [Tag.ChannelForceProgressTx]: 30,\n    [Tag.ChannelOffChainTx]: 0,\n    [Tag.ContractCreateTx]: 5,\n    [Tag.ContractCallTx]: 12,\n    [Tag.GaAttachTx]: 5,\n    [Tag.GaMetaTx]: 5,\n    [Tag.PayingForTx]: 1 / 5,\n  } as const;\n  const factor = feeFactors[txType as keyof typeof feeFactors] ?? 1;\n  return factor * BASE_GAS;\n};\n\n/**\n * Calculate gas for other types of transactions\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @param txSize - The transaction size\n * @returns parameters - The transaction parameters\n * @returns parameters.relativeTtl - The relative ttl\n * @returns parameters.innerTxSize - The size of the inner transaction\n * @returns The other gas\n * @example\n * ```js\n * TX_OTHER_GAS(Tag.OracleResponseTx, 10, { relativeTtl: 12, innerTxSize: 0 })\n *  => 10 * 20 + Math.ceil(32000 * 12 / Math.floor(60 * 24 * 365 / 3))\n * ```\n */\nconst TX_OTHER_GAS = (\n  txType: Tag,\n  txSize: number,\n  { relativeTtl, innerTxSize }: { relativeTtl: number; innerTxSize: number },\n): number => {\n  switch (txType) {\n    case Tag.OracleRegisterTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleQueryTx:\n    case Tag.OracleResponseTx:\n      return (\n        txSize * GAS_PER_BYTE +\n        Math.ceil((32000 * relativeTtl) / Math.floor((60 * 24 * 365) / KEY_BLOCK_INTERVAL))\n      );\n    case Tag.GaMetaTx:\n    case Tag.PayingForTx:\n      return (txSize - innerTxSize) * GAS_PER_BYTE;\n    default:\n      return txSize * GAS_PER_BYTE;\n  }\n};\n\nfunction getOracleRelativeTtl(params: any): number {\n  const ttlKeys = {\n    [Tag.OracleRegisterTx]: 'oracleTtlValue',\n    [Tag.OracleExtendTx]: 'oracleTtlValue',\n    [Tag.OracleQueryTx]: 'queryTtlValue',\n    [Tag.OracleResponseTx]: 'responseTtlValue',\n  } as const;\n\n  const { tag } = params;\n  if (!isKeyOfObject(tag, ttlKeys)) return 1;\n  return params[ttlKeys[tag]];\n}\n\n/**\n * Calculate gas based on tx type and params\n */\nexport function buildGas(\n  builtTx: Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): number {\n  const { length } = decode(builtTx);\n  const txObject = unpackTx(builtTx);\n\n  let innerTxSize = 0;\n  if (txObject.tag === Tag.GaMetaTx || txObject.tag === Tag.PayingForTx) {\n    innerTxSize = decode(buildTx(txObject.tx.encodedTx)).length;\n  }\n\n  return (\n    TX_BASE_GAS(txObject.tag) +\n    TX_OTHER_GAS(txObject.tag, length, {\n      relativeTtl: getOracleRelativeTtl(txObject),\n      innerTxSize,\n    })\n  );\n}\n\n/**\n * Calculate min fee\n * @category transaction builder\n * @param rebuildTx - Callback to get built transaction with specific fee\n */\nfunction calculateMinFee(\n  rebuildTx: (value: BigNumber) => Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): BigNumber {\n  let fee = new BigNumber(0);\n  let previousFee;\n  do {\n    previousFee = fee;\n    fee = new BigNumber(MIN_GAS_PRICE).times(buildGas(rebuildTx(fee), unpackTx, buildTx));\n  } while (!fee.eq(previousFee));\n  return fee;\n}\n\n// TODO: Get rid of this workaround. Transaction builder can't accept/return gas price instead of\n// fee because it may get a decimal gas price. So, it should accept the optional `gasPrice` even\n// if it is not a contract-related transaction. And use this `gasPrice` to calculate `fee`.\nconst gasPricePrefix = '_gas-price:';\n\nexport interface SerializeAettosParams {\n  rebuildTx: (params: any) => Encoded.Transaction;\n  unpackTx: typeof unpackTxType;\n  buildTx: typeof buildTxType;\n  _computingMinFee?: BigNumber;\n}\n\nexport default {\n  ...coinAmount,\n\n  async prepare(\n    value: Int | undefined,\n    params: {},\n    { onNode }: { onNode?: Node },\n  ): Promise<Int | undefined> {\n    if (value != null) return value;\n    if (onNode == null) {\n      throw new ArgumentError('onNode', 'provided (or provide `fee` instead)', onNode);\n    }\n    const gasPrice = await getCachedIncreasedGasPrice(onNode);\n    if (gasPrice === 0n) return undefined;\n    return gasPricePrefix + gasPrice;\n  },\n\n  serializeAettos(\n    _value: string | undefined,\n    { rebuildTx, unpackTx, buildTx, _computingMinFee }: SerializeAettosParams,\n    { _canIncreaseFee }: { _canIncreaseFee?: boolean },\n  ): string {\n    if (_computingMinFee != null) return _computingMinFee.toFixed();\n    const minFee = calculateMinFee(\n      (fee) => rebuildTx({ _computingMinFee: fee }),\n      unpackTx,\n      buildTx,\n    );\n    const value =\n      _value?.startsWith(gasPricePrefix) === true\n        ? minFee.dividedBy(MIN_GAS_PRICE).times(_value.replace(gasPricePrefix, ''))\n        : new BigNumber(_value ?? minFee);\n    if (minFee.gt(value)) {\n      if (_canIncreaseFee === true) return minFee.toFixed();\n      throw new IllegalArgumentError(`Fee ${value.toString()} must be bigger than ${minFee}`);\n    }\n    return value.toFixed();\n  },\n\n  serialize(\n    value: Parameters<typeof coinAmount.serialize>[0],\n    params: Parameters<typeof coinAmount.serialize>[1] & SerializeAettosParams,\n    options: { _canIncreaseFee?: boolean } & Parameters<typeof coinAmount.serialize>[2],\n  ): Buffer {\n    if (typeof value === 'string' && value.startsWith(gasPricePrefix)) {\n      return uInt.serialize(this.serializeAettos(value, params, options));\n    }\n    return coinAmount.serialize.call(this, value, params, options);\n  },\n};\n","import uInt from './u-int.js';\n\nexport default {\n  serialize(value: number): Buffer {\n    return uInt.serialize(value);\n  },\n\n  deserialize(value: Buffer): number {\n    return +uInt.deserialize(value);\n  },\n};\n","import { IllegalArgumentError } from '../../../utils/errors.js';\nimport { Tag, MAX_AUTH_FUN_GAS } from '../constants.js';\nimport shortUInt from './short-u-int.js';\nimport { buildGas } from './fee.js';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index.js';\n\nfunction calculateGasLimitMax(\n  gasMax: number,\n  rebuildTx: (value: number) => any,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): number {\n  return gasMax - +buildGas(rebuildTx(gasMax), unpackTx, buildTx);\n}\n\nexport default {\n  ...shortUInt,\n\n  serialize(\n    _value: number | undefined,\n    {\n      tag,\n      rebuildTx,\n      unpackTx,\n      buildTx,\n      _computingGasLimit,\n    }: {\n      tag: Tag;\n      rebuildTx: (params: any) => any;\n      unpackTx: typeof unpackTxType;\n      buildTx: typeof buildTxType;\n      _computingGasLimit?: number;\n    },\n    { gasMax = 6e6 }: { gasMax?: number },\n  ): Buffer {\n    if (_computingGasLimit != null) return shortUInt.serialize(_computingGasLimit);\n\n    const gasLimitMax =\n      tag === Tag.GaMetaTx\n        ? MAX_AUTH_FUN_GAS\n        : calculateGasLimitMax(\n            gasMax,\n            (gasLimit) => rebuildTx({ _computingGasLimit: gasLimit, _canIncreaseFee: true }),\n            unpackTx,\n            buildTx,\n          );\n    const value = _value ?? gasLimitMax;\n    if (value > gasLimitMax) {\n      throw new IllegalArgumentError(`Gas limit ${value} must be less or equal to ${gasLimitMax}`);\n    }\n    return shortUInt.serialize(value);\n  },\n};\n","export default {\n  serialize(value: string): Buffer {\n    return Buffer.from(value);\n  },\n\n  deserialize(value: Buffer): string {\n    return value.toString();\n  },\n};\n","import field from './field.js';\nimport { AensName } from '../constants.js';\n\nexport default {\n  /**\n   * @param value - AENS name\n   */\n  serialize(value: AensName): Buffer {\n    return field.serialize(value);\n  },\n\n  /**\n   * @param value - AENS name\n   */\n  deserialize(value: Buffer): AensName {\n    return field.deserialize(value) as AensName;\n  },\n};\n","import { BigNumber } from 'bignumber.js';\nimport { getMinimumNameFee } from '../helpers.js';\nimport { InsufficientNameFeeError } from '../../../utils/errors.js';\nimport coinAmount from './coin-amount.js';\nimport { AensName, Int } from '../constants.js';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(_value: string | undefined, txFields: { name: AensName }): string {\n    const minNameFee = getMinimumNameFee(txFields.name);\n    const value = new BigNumber(_value ?? minNameFee);\n    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);\n    return value.toFixed();\n  },\n\n  /**\n   * @param value - AENS name fee\n   * @param txFields - Transaction fields\n   * @param txFields.name - AENS Name in transaction\n   */\n  serialize(\n    value: Int | undefined,\n    txFields: { name: AensName } & Parameters<(typeof coinAmount)['serialize']>[1],\n    parameters: Parameters<(typeof coinAmount)['serialize']>[2],\n  ): Buffer {\n    return coinAmount.serialize.call(this, value, txFields, parameters);\n  },\n};\n","import { AensName } from '../constants.js';\nimport { produceNameId, isNameValid } from '../helpers.js';\nimport address from './address.js';\nimport { Encoded, Encoding } from '../../../utils/encoder.js';\n\nconst addressName = address(Encoding.Name);\n\nexport default {\n  ...addressName,\n\n  /**\n   * @param value - AENS name ID\n   */\n  serialize(value: AensName | Encoded.Name): Buffer {\n    return addressName.serialize(isNameValid(value) ? produceNameId(value) : value);\n  },\n};\n","import { isAccountNotFoundError } from '../../../utils/other.js';\nimport shortUInt from './short-u-int.js';\nimport Node from '../../../Node.js';\nimport { ArgumentError } from '../../../utils/errors.js';\nimport { NextNonceStrategy } from '../../../apis/node/index.js';\nimport { Tag } from '../constants.js';\n\nexport default function genNonceField<SenderKey extends string>(\n  senderKey: SenderKey,\n): {\n  serialize: (value: number, params: { tag: Tag }) => Buffer;\n  // TODO: (value: number) => Promise<number> | (value: undefined, ...) => Promise<number>\n  prepare: (\n    value: number | undefined,\n    params: {},\n    // TODO: replace `string` with AddressEncodings\n    options: { [key in SenderKey]: string } & {\n      strategy?: NextNonceStrategy;\n      onNode?: Node;\n      _isInternalBuild?: boolean;\n    },\n  ) => Promise<number>;\n  deserialize: (value: Buffer) => number;\n  senderKey: string;\n} {\n  return {\n    ...shortUInt,\n\n    serialize(value: number, { tag }): Buffer {\n      if (Tag.GaAttachTx === tag && value !== 1) {\n        throw new ArgumentError('nonce', 'equal 1 if GaAttachTx', value);\n      }\n      return shortUInt.serialize(value);\n    },\n\n    async prepare(value, params, options) {\n      if (value != null) return value;\n      // TODO: uncomment the below line\n      // if (options._isInternalBuild === true) return 0;\n      const { onNode, strategy } = options;\n      const senderId = options[senderKey];\n      const requirement = 'provided (or provide `nonce` instead)';\n      if (onNode == null) throw new ArgumentError('onNode', requirement, onNode);\n      if (senderId == null) throw new ArgumentError('senderId', requirement, senderId);\n      return (\n        await onNode\n          .getAccountNextNonce(senderId.replace(/^ok_/, 'ak_'), { strategy })\n          .catch((error) => {\n            if (!isAccountNotFoundError(error)) throw error;\n            return { nextNonce: 1 };\n          })\n      ).nextNonce;\n    },\n\n    senderKey,\n  };\n}\n","import { NamePointer as NamePointerString } from '../../../apis/node/index.js';\nimport { toBytes } from '../../../utils/bytes.js';\nimport { Encoded, Encoding, decode, encode } from '../../../utils/encoder.js';\nimport { isAddressValid } from '../../../utils/crypto.js';\nimport { IllegalArgumentError, DecodeError, ArgumentError } from '../../../utils/errors.js';\nimport address, { AddressEncodings, idTagToEncoding } from './address.js';\n\nconst ID_TAG = Buffer.from([1]);\nconst DATA_TAG = Buffer.from([2]);\nconst DATA_LENGTH_MAX = 1024;\nconst addressAny = address(...idTagToEncoding);\n\n// TODO: remove after fixing node types\ntype NamePointer = NamePointerString & {\n  id: Encoded.Generic<AddressEncodings>;\n};\ntype NamePointerRaw = NamePointerString & {\n  id: Encoded.Generic<AddressEncodings | Encoding.Bytearray>;\n};\n\nexport default <AllowRaw extends boolean>(\n  allowRaw: AllowRaw,\n): {\n  serialize: (pointers: Array<AllowRaw extends true ? NamePointerRaw : NamePointer>) => Buffer[][];\n  deserialize: (\n    pointers: Array<[key: Buffer, id: Buffer]>,\n  ) => Array<AllowRaw extends true ? NamePointerRaw : NamePointer>;\n} => ({\n  /**\n   * Helper function to build pointers for name update TX\n   * @param pointers - Array of pointers\n   * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`\n   * @returns Serialized pointers array\n   */\n  serialize(pointers) {\n    if (pointers.length > 32) {\n      throw new IllegalArgumentError(\n        `Expected 32 pointers or less, got ${pointers.length} instead`,\n      );\n    }\n    return pointers.map(({ key, id }) => {\n      let payload;\n      if (isAddressValid(id, ...idTagToEncoding)) {\n        payload = [...(allowRaw ? [ID_TAG] : []), addressAny.serialize(id)];\n      }\n      if (isAddressValid(id, Encoding.Bytearray)) {\n        const data = decode(id);\n        if (data.length > DATA_LENGTH_MAX) {\n          throw new ArgumentError(\n            'Raw pointer',\n            `shorter than ${DATA_LENGTH_MAX + 1} bytes`,\n            `${data.length} bytes`,\n          );\n        }\n        payload = [DATA_TAG, data];\n      }\n      if (payload == null) throw new DecodeError(`Unknown AENS pointer value: ${id}`);\n      return [toBytes(key), Buffer.concat(payload)];\n    });\n  },\n\n  /**\n   * Helper function to read pointers from name update TX\n   * @param pointers - Array of pointers\n   * @returns Deserialize pointer array\n   */\n  deserialize(pointers) {\n    return pointers.map(([bKey, bId]) => {\n      if (!allowRaw) return { key: bKey.toString(), id: addressAny.deserialize(bId) };\n      const tag = bId.subarray(0, 1);\n      const payload = bId.subarray(1);\n      let id;\n      if (tag.equals(ID_TAG)) id = addressAny.deserialize(payload);\n      // TS can't figure out the real type depending on allowRaw\n      if (tag.equals(DATA_TAG)) id = encode(payload, Encoding.Bytearray) as Encoded.AccountAddress;\n      if (id == null) throw new DecodeError(`Unknown AENS pointer tag: ${tag}`);\n      return { key: bKey.toString(), id };\n    });\n  },\n});\n","import coinAmount from './coin-amount.js';\nimport { Int } from '../constants.js';\nimport Node from '../../../Node.js';\nimport { Encoded } from '../../../utils/encoder.js';\nimport { ArgumentError } from '../../../utils/errors.js';\n\n/**\n * Oracle query fee\n */\nexport default {\n  ...coinAmount,\n\n  async prepare(\n    value: Int | undefined,\n    params: {},\n    options: { oracleId?: Encoded.OracleAddress; onNode?: Node },\n  ) {\n    if (value != null) return value;\n    const { onNode, oracleId } = options;\n    const requirement = 'provided (or provide `queryFee` instead)';\n    if (onNode == null) throw new ArgumentError('onNode', requirement, onNode);\n    if (oracleId == null) throw new ArgumentError('oracleId', requirement, oracleId);\n    return (await onNode.getOracleByPubkey(oracleId)).queryFee.toString();\n  },\n};\n","export default {\n  serialize(buffer: Uint8Array): Buffer {\n    return Buffer.from(buffer);\n  },\n\n  deserialize(buffer: Buffer): Buffer {\n    return buffer;\n  },\n};\n","import { ArgumentError } from '../../../utils/errors.js';\nimport shortUInt from './short-u-int.js';\n\nexport default function genShortUIntConstField<\n  Value extends number,\n  Optional extends boolean = false,\n>(\n  constValue: Value,\n  optional?: Optional,\n): {\n  serialize: Optional extends true ? (value?: Value) => Buffer : (value: Value) => Buffer;\n  deserialize: (value: Buffer) => Value;\n  constValue: Value;\n  constValueOptional: boolean;\n} {\n  return {\n    serialize(value?: Value) {\n      if ((optional !== true || value != null) && value !== constValue) {\n        throw new ArgumentError('ShortUIntConst', constValue, value);\n      }\n      return shortUInt.serialize(constValue);\n    },\n\n    deserialize(buf) {\n      const value = shortUInt.deserialize(buf);\n      if (value !== constValue) throw new ArgumentError('ShortUIntConst', constValue, value);\n      return constValue;\n    },\n\n    constValue,\n\n    constValueOptional: optional === true,\n  };\n}\n","import { toBytes } from '../../../utils/bytes.js';\n\nexport default {\n  serialize(string: string): Buffer {\n    return toBytes(string);\n  },\n\n  deserialize(buffer: Buffer): string {\n    return buffer.toString();\n  },\n};\n","import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { Tag } from '../constants.js';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index.js';\n\nexport default function genTransactionField<T extends Tag = Tag>(\n  tag?: T,\n): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { buildTx: typeof buildTxType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n} {\n  return {\n    serialize(txParams, { buildTx }) {\n      if (ArrayBuffer.isView(txParams)) return Buffer.from(txParams as any);\n      if (typeof txParams === 'string' && txParams.startsWith('tx_')) {\n        return decode(txParams as Encoded.Transaction);\n      }\n      return decode(buildTx({ ...txParams, ...(tag != null && { tag }) }));\n    },\n\n    deserialize(buf, { unpackTx }) {\n      return unpackTx(encode(buf, Encoding.Transaction), tag);\n    },\n  };\n}\n","import shortUInt from './short-u-int.js';\nimport Node from '../../../Node.js';\nimport { ArgumentError } from '../../../utils/errors.js';\nimport { _getPollInterval, getHeight } from '../../../chain.js';\n\n/**\n * Time to leave\n */\nexport default {\n  ...shortUInt,\n\n  serialize(value: number | undefined): Buffer {\n    return shortUInt.serialize(value ?? 0);\n  },\n\n  async prepare(\n    value: number | undefined,\n    params: {},\n    // TODO: { absoluteTtl: true } | { absoluteTtl: false, onNode: Node }\n    {\n      onNode,\n      absoluteTtl,\n      _isInternalBuild,\n      ...options\n    }: {\n      onNode?: Node;\n      absoluteTtl?: boolean;\n      _isInternalBuild?: boolean;\n    } & Omit<Parameters<typeof _getPollInterval>[1], 'onNode'>,\n  ) {\n    if (absoluteTtl !== true && value !== 0 && (value != null || _isInternalBuild === true)) {\n      if (onNode == null) throw new ArgumentError('onNode', 'provided', onNode);\n      value = (value ?? 3) + (await getHeight({ ...options, onNode, cached: true }));\n    }\n    return value;\n  },\n};\n","export default function withDefault<Input, Output, Binary>(\n  defaultValue: Input,\n  field: {\n    serialize: (value: Input, params: unknown) => Binary;\n    deserialize: (value: Binary, params: unknown) => Output;\n  },\n): {\n  serialize: (value: Input | undefined, params: unknown) => Binary;\n  deserialize: (value: Binary, params: unknown) => Output;\n} {\n  return {\n    ...field,\n\n    serialize(value, params) {\n      return field.serialize(value ?? defaultValue, params);\n    },\n  };\n}\n","export default function withFormatting<Input, Output, Binary, Params, Options>(\n  format: (v: Input | undefined) => Input,\n  field: {\n    serialize: (value: Input, params: Params, options: Options) => Binary;\n    deserialize: (value: Binary) => Output;\n  },\n): {\n  serialize: (value: Input | undefined, params: Params, options: Options) => Binary;\n  deserialize: (value: Binary) => Output;\n} {\n  return {\n    ...field,\n\n    serialize(value, params, options) {\n      return field.serialize(format(value), params, options);\n    },\n  };\n}\n","export enum CallReturnType {\n  Ok = 0,\n  Error = 1,\n  Revert = 2,\n}\n\n/**\n * @category entry building\n */\nexport enum EntryTag {\n  Account = 10,\n  Oracle = 20,\n  // OracleQuery = 21,\n  Name = 30,\n  // NameCommitment = 31,\n  // NameAuction = 37,\n  Contract = 40,\n  ContractCall = 41,\n  ChannelOffChainUpdateTransfer = 570,\n  ChannelOffChainUpdateDeposit = 571,\n  ChannelOffChainUpdateWithdraw = 572,\n  ChannelOffChainUpdateCreateContract = 573,\n  ChannelOffChainUpdateCallContract = 574,\n  // ChannelOffChainUpdateMeta = 576,\n  Channel = 58,\n  TreesPoi = 60,\n  // TreesDb = 61,\n  StateTrees = 62,\n  Mtree = 63,\n  MtreeValue = 64,\n  ContractsMtree = 621,\n  CallsMtree = 622,\n  ChannelsMtree = 623,\n  NameserviceMtree = 624,\n  OraclesMtree = 625,\n  AccountsMtree = 626,\n  // CompilerSophia = 70,\n  GaMetaTxAuthData = 810,\n}\n","/**\n * Transaction Schema for TxBuilder\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport { Tag } from './constants.js';\nimport SchemaTypes from './SchemaTypes.js';\nimport abiVersion from './field-types/abi-version.js';\nimport address, { idTagToEncoding } from './field-types/address.js';\nimport array from './field-types/array.js';\nimport coinAmount from './field-types/coin-amount.js';\nimport ctVersion from './field-types/ct-version.js';\nimport encoded from './field-types/encoded.js';\nimport entry from './field-types/entry.js';\nimport enumeration from './field-types/enumeration.js';\nimport fee from './field-types/fee.js';\nimport gasLimit from './field-types/gas-limit.js';\nimport gasPrice from './field-types/gas-price.js';\nimport name from './field-types/name.js';\nimport nameFee from './field-types/name-fee.js';\nimport nameId from './field-types/name-id.js';\nimport nonce from './field-types/nonce.js';\nimport pointers from './field-types/pointers.js';\nimport queryFee from './field-types/query-fee.js';\nimport raw from './field-types/raw.js';\nimport shortUInt from './field-types/short-u-int.js';\nimport shortUIntConst from './field-types/short-u-int-const.js';\nimport string from './field-types/string.js';\nimport transaction from './field-types/transaction.js';\nimport ttl from './field-types/ttl.js';\nimport uInt from './field-types/u-int.js';\nimport withDefault from './field-types/with-default.js';\nimport withFormatting from './field-types/with-formatting.js';\nimport { Encoded, Encoding } from '../../utils/encoder.js';\nimport { ArgumentError } from '../../utils/errors.js';\nimport { EntryTag } from './entry/constants.js';\nimport { EntParams, EntUnpacked } from './entry/schema.generated.js';\n\nexport enum ORACLE_TTL_TYPES {\n  delta = 0,\n  block = 1,\n}\n\n// TODO: figure out how to omit overriding types of recursive fields\ninterface TransactionAny {\n  serialize: (value: TxParams | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked;\n  recursiveType: true;\n}\n\nconst transactionAny = transaction() as unknown as TransactionAny;\n\ninterface TransactionSignedTx {\n  serialize: (\n    value: (TxParams & { tag: Tag.SignedTx }) | Uint8Array | Encoded.Transaction,\n  ) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked & { tag: Tag.SignedTx };\n  recursiveType: true;\n}\n\nconst transactionSignedTx = transaction(Tag.SignedTx) as unknown as TransactionSignedTx;\n\ninterface EntryTreesPoi {\n  serialize: (\n    value: (EntParams & { tag: EntryTag.TreesPoi }) | Uint8Array | Encoded.Transaction,\n  ) => Buffer;\n  deserialize: (value: Buffer) => EntUnpacked & { tag: EntryTag.TreesPoi };\n  recursiveType: true;\n}\n\nconst entryTreesPoi = entry(EntryTag.TreesPoi) as unknown as EntryTreesPoi;\n\nconst clientTtl = withDefault(60 * 60, shortUInt);\n// https://github.com/aeternity/protocol/blob/fd17982/AENS.md#update\n/**\n * Name ttl represented in number of blocks (Max value is 50000 blocks)\n */\nconst nameTtl = withFormatting((value) => {\n  const NAME_TTL = 180000;\n  value ??= NAME_TTL;\n  if (value >= 1 && value <= NAME_TTL) return value;\n  throw new ArgumentError('nameTtl', `a number between 1 and ${NAME_TTL} blocks`, value);\n}, shortUInt);\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/c007deeac4a01e401238412801ac7084ac72d60e/serializations.md#accounts-version-1-basic-accounts}\n */\nexport const txSchema = [\n  {\n    tag: shortUIntConst(Tag.SignedTx),\n    version: shortUIntConst(1, true),\n    signatures: array(raw), // TODO: use sg_ (Encoding.Signature) instead\n    encodedTx: transactionAny,\n  },\n  {\n    tag: shortUIntConst(Tag.SpendTx),\n    version: shortUIntConst(1, true),\n    senderId: address(Encoding.AccountAddress),\n    // TODO: accept also an AENS name\n    recipientId: address(Encoding.AccountAddress, Encoding.ContractAddress, Encoding.Name),\n    amount: coinAmount,\n    fee,\n    ttl,\n    nonce: nonce('senderId'),\n    payload: encoded(Encoding.Bytearray, true),\n  },\n  {\n    tag: shortUIntConst(Tag.NamePreclaimTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    commitmentId: address(Encoding.Commitment),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameClaimTx),\n    version: shortUIntConst(2, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    name,\n    nameSalt: withDefault(0, uInt),\n    nameFee,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameUpdateTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    nameTtl,\n    pointers: pointers(false),\n    clientTtl,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameUpdateTx),\n    version: shortUIntConst(2),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    nameTtl,\n    pointers: pointers(true),\n    clientTtl,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameTransferTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    // TODO: accept also an AENS name\n    recipientId: address(Encoding.AccountAddress, Encoding.Name),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameRevokeTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.ContractCreateTx),\n    version: shortUIntConst(1, true),\n    ownerId: address(Encoding.AccountAddress),\n    nonce: nonce('ownerId'),\n    code: encoded(Encoding.ContractBytearray),\n    ctVersion,\n    fee,\n    ttl,\n    deposit: withFormatting((value = 0) => {\n      if (+value === 0) return value;\n      throw new ArgumentError('deposit', 'equal 0 (because is not refundable)', value);\n    }, coinAmount),\n    amount: coinAmount,\n    gasLimit,\n    gasPrice,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(Tag.ContractCallTx),\n    version: shortUIntConst(1, true),\n    callerId: address(Encoding.AccountAddress),\n    nonce: nonce('callerId'),\n    // TODO: accept also an AENS name\n    contractId: address(Encoding.ContractAddress, Encoding.Name),\n    abiVersion,\n    fee,\n    ttl,\n    amount: coinAmount,\n    gasLimit,\n    gasPrice,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(Tag.OracleRegisterTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    queryFormat: string,\n    responseFormat: string,\n    queryFee: coinAmount,\n    oracleTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    oracleTtlValue: withDefault(500, shortUInt),\n    fee,\n    ttl,\n    abiVersion,\n  },\n  {\n    tag: shortUIntConst(Tag.OracleExtendTx),\n    version: shortUIntConst(1, true),\n    // TODO: accept also an AENS name\n    oracleId: address(Encoding.OracleAddress, Encoding.Name),\n    nonce: nonce('oracleId'),\n    oracleTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    oracleTtlValue: withDefault(500, shortUInt),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.OracleQueryTx),\n    version: shortUIntConst(1, true),\n    senderId: address(Encoding.AccountAddress),\n    nonce: nonce('senderId'),\n    // TODO: accept also an AENS name\n    oracleId: address(Encoding.OracleAddress, Encoding.Name),\n    query: string,\n    queryFee,\n    queryTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    queryTtlValue: withDefault(10, shortUInt),\n    responseTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    responseTtlValue: withDefault(10, shortUInt),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.OracleResponseTx),\n    version: shortUIntConst(1, true),\n    oracleId: address(Encoding.OracleAddress),\n    nonce: nonce('oracleId'),\n    queryId: encoded(Encoding.OracleQueryId),\n    response: string,\n    responseTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    responseTtlValue: withDefault(10, shortUInt),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelCreateTx),\n    version: shortUIntConst(2, true),\n    initiator: address(Encoding.AccountAddress),\n    initiatorAmount: uInt,\n    responder: address(Encoding.AccountAddress),\n    responderAmount: uInt,\n    channelReserve: uInt,\n    lockPeriod: uInt,\n    ttl,\n    fee,\n    initiatorDelegateIds: array(address(...idTagToEncoding)),\n    responderDelegateIds: array(address(...idTagToEncoding)),\n    stateHash: encoded(Encoding.State),\n    nonce: nonce('initiator'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelCloseMutualTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    initiatorAmountFinal: uInt,\n    responderAmountFinal: uInt,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelCloseSoloTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    poi: entryTreesPoi,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelSlashTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    poi: entryTreesPoi,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelDepositTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    amount: uInt,\n    ttl,\n    fee,\n    stateHash: encoded(Encoding.State),\n    round: shortUInt,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelWithdrawTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    toId: address(Encoding.AccountAddress),\n    amount: uInt,\n    ttl,\n    fee,\n    stateHash: encoded(Encoding.State),\n    round: shortUInt,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelSettleTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    initiatorAmountFinal: uInt,\n    responderAmountFinal: uInt,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelForceProgressTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    round: shortUInt,\n    update: encoded(Encoding.ContractBytearray),\n    stateHash: encoded(Encoding.State),\n    offChainTrees: encoded(Encoding.StateTrees),\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelOffChainTx),\n    version: shortUIntConst(2, true),\n    channelId: address(Encoding.Channel),\n    round: shortUInt,\n    stateHash: encoded(Encoding.State),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelSnapshotSoloTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.GaAttachTx),\n    version: shortUIntConst(1, true),\n    ownerId: address(Encoding.AccountAddress),\n    nonce: nonce('ownerId'),\n    code: encoded(Encoding.ContractBytearray),\n    authFun: raw,\n    ctVersion,\n    fee,\n    ttl,\n    gasLimit,\n    gasPrice,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(Tag.GaMetaTx),\n    version: shortUIntConst(2, true),\n    gaId: address(Encoding.AccountAddress),\n    authData: encoded(Encoding.ContractBytearray),\n    abiVersion,\n    fee,\n    gasLimit,\n    gasPrice,\n    tx: transactionSignedTx,\n  },\n  {\n    tag: shortUIntConst(Tag.PayingForTx),\n    version: shortUIntConst(1, true),\n    payerId: address(Encoding.AccountAddress),\n    nonce: nonce('payerId'),\n    fee,\n    tx: transactionSignedTx,\n  },\n] as const;\n\ntype TxSchema = SchemaTypes<typeof txSchema>;\nexport type TxParams = TxSchema['TxParams'];\nexport type TxParamsAsync = TxSchema['TxParamsAsync'];\nexport type TxUnpacked = TxSchema['TxUnpacked'];\n","import { decode as rlpDecode, encode as rlpEncode } from 'rlp';\nimport { Field, BinaryData } from './field-types/interface.js';\nimport {\n  ArgumentError,\n  DecodeError,\n  SchemaNotFoundError,\n  InternalError,\n} from '../../utils/errors.js';\nimport { Encoding, Encoded, encode, decode } from '../../utils/encoder.js';\nimport { readInt } from './helpers.js';\n\ntype Schemas = ReadonlyArray<{\n  tag: { constValue: number } & Field;\n  version: { constValue: number; constValueOptional: boolean } & Field;\n}>;\n\nexport function getSchema(\n  schemas: Schemas,\n  Tag: { [key: number]: string },\n  tag: number,\n  version: number | undefined,\n): Array<[string, Field]> {\n  const subSchemas = schemas.filter((s) => s.tag.constValue === tag);\n  if (subSchemas.length === 0) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, 0);\n  if (version == null) {\n    const defaultSchema = subSchemas.find((schema) => schema.version.constValueOptional);\n    if (defaultSchema == null)\n      throw new InternalError(`Can't find default schema of ${Tag[tag]} (${tag})`);\n    version = defaultSchema.version.constValue;\n  }\n  const schema = subSchemas.find((s) => s.version.constValue === version);\n  if (schema == null) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, version);\n  return Object.entries(schema);\n}\n\nexport function packRecord<E extends Encoding>(\n  schemas: Schemas,\n  Tag: { [key: number]: string },\n  params: {\n    tag: number;\n    version?: number;\n    [k: string]: unknown;\n  },\n  extraParams: { [k: string]: unknown },\n  encoding: E,\n): Encoded.Generic<E> {\n  const schema = getSchema(schemas, Tag, params.tag, params.version);\n  const binary = schema.map(([key, field]) =>\n    field.serialize(params[key], { ...params, ...extraParams }, params),\n  );\n  return encode(rlpEncode(binary), encoding);\n}\n\nexport function unpackRecord(\n  schemas: Schemas,\n  Tag: { [key: number]: string },\n  encodedRecord: Encoded.Any,\n  expectedTag: number | undefined,\n  extraParams: { [k: string]: unknown },\n): unknown {\n  const binary = rlpDecode(decode(encodedRecord));\n  const tag = +readInt(binary[0] as Buffer);\n  const version = +readInt(binary[1] as Buffer);\n  const schema = getSchema(schemas, Tag, tag, version);\n  if (expectedTag != null && expectedTag !== tag) {\n    throw new DecodeError(`Expected ${Tag[expectedTag]} tag, got ${Tag[tag]} instead`);\n  }\n  if (binary.length !== schema.length) {\n    throw new ArgumentError('RLP length', schema.length, binary.length);\n  }\n  return Object.fromEntries(\n    schema.map(([name, field], index) => [\n      name,\n      field.deserialize(binary[index] as BinaryData, extraParams),\n    ]),\n  );\n}\n","export default {\n  serialize(value: boolean): Buffer {\n    return Buffer.from([value ? 1 : 0]);\n  },\n\n  deserialize(buffer: Buffer): boolean {\n    return buffer[0] === 1;\n  },\n};\n","import { EntryTag } from '../entry/constants.js';\nimport { encode, Encoding, Encoded, decode } from '../../../utils/encoder.js';\nimport type { unpackEntry as unpackEntryType, packEntry as packEntryType } from '../entry/index.js';\n\nexport default function genMapField<E extends Encoding, T extends EntryTag>(\n  encoding: E,\n  tag: T,\n): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: Record<Encoded.Generic<E>, any>,\n    options: { packEntry: typeof packEntryType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackEntry: typeof unpackEntryType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => Record<Encoded.Generic<E>, any>;\n  recursiveType: true;\n} {\n  return {\n    serialize(object, { packEntry }) {\n      return decode(\n        packEntry({\n          tag: EntryTag.Mtree,\n          values: Object.entries(object).map(\n            ([key, value]) =>\n              ({\n                tag: EntryTag.MtreeValue,\n                key: decode(key as Encoded.Generic<E>),\n                value: decode(packEntry({ ...(value as any), tag })),\n              }) as const,\n          ),\n        }),\n      );\n    },\n\n    deserialize(buffer, { unpackEntry }) {\n      const { values } = unpackEntry(encode(buffer, Encoding.Bytearray), EntryTag.Mtree);\n      return Object.fromEntries(\n        values\n          // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n          .filter(({ key }) => encoding !== Encoding.ContractAddress || key.length === 32)\n          .map(({ key, value }) => [\n            encode(key, encoding),\n            unpackEntry(encode(value, Encoding.Bytearray), tag),\n          ]),\n      ) as Record<Encoded.Generic<E>, any>;\n    },\n\n    recursiveType: true,\n  };\n}\n","import { encode as rlpEncode, Input } from 'rlp';\nimport { EntryTag } from '../entry/constants.js';\nimport { hash } from '../../../utils/crypto.js';\nimport {\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownPathNibbleError,\n  UnexpectedTsError,\n  UnknownNodeLengthError,\n  InternalError,\n} from '../../../utils/errors.js';\nimport { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport type { unpackEntry } from '../entry/index.js';\nimport type { EntUnpacked } from '../entry/schema.generated.js';\n\nenum NodeType {\n  Branch,\n  Extension,\n  Leaf,\n}\n\ntype MPTreeBinary = [Buffer, Array<[Buffer, Buffer[]]>];\n\nclass MPTree<E extends Encoding, T extends EntryTag> {\n  readonly #rootHash: string;\n\n  #isComplete = true;\n\n  get isComplete(): boolean {\n    return this.#isComplete;\n  }\n\n  readonly #nodes: { [key: string]: Buffer[] };\n\n  readonly #encoding: E;\n\n  readonly #tag: T;\n\n  readonly #unpackEntry: typeof unpackEntry;\n\n  static #nodeHash(node: Input): string {\n    return Buffer.from(hash(rlpEncode(node))).toString('hex');\n  }\n\n  /**\n   * Deserialize Merkle Patricia Tree\n   * @param binary - Binary\n   * @param tag - Tag to use to decode value\n   * @param unpEnt - Implementation of unpackEntry use to decode values\n   * @returns Merkle Patricia Tree\n   */\n  constructor(binary: MPTreeBinary, encoding: E, tag: T, unpEnt: typeof unpackEntry) {\n    this.#encoding = encoding;\n    this.#tag = tag;\n    this.#unpackEntry = unpEnt;\n    this.#rootHash = binary[0].toString('hex');\n    this.#nodes = Object.fromEntries(binary[1].map((node) => [node[0].toString('hex'), node[1]]));\n\n    if (this.#nodes[this.#rootHash] == null) {\n      if (Object.keys(this.#nodes).length !== 0) {\n        throw new MissingNodeInTreeError(\"Can't find a node by root hash\");\n      }\n      this.#isComplete = false;\n      return;\n    }\n    Object.entries(this.#nodes).forEach(([key, node]) => {\n      if (MPTree.#nodeHash(node) !== key) throw new MerkleTreeHashMismatchError();\n      const { type } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .filter((n) => n.length)\n            .forEach((n) => {\n              // TODO: enable after resolving https://github.com/aeternity/aeternity/issues/4066\n              // if (n.length !== 32) {\n              //   throw new ArgumentError('MPTree branch item length', 32, n.length);\n              // }\n              if (this.#nodes[n.toString('hex')] == null) this.#isComplete = false;\n            });\n          break;\n        case NodeType.Extension:\n          if (this.#nodes[node[1].toString('hex')] == null) {\n            throw new MissingNodeInTreeError(\"Can't find a node by hash in extension node\");\n          }\n          break;\n        case NodeType.Leaf:\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    });\n  }\n\n  isEqual(tree: MPTree<E, T>): boolean {\n    return this.#rootHash === tree.#rootHash;\n  }\n\n  static #parseNode(node: Buffer[]): { type: NodeType; value?: Buffer; path?: string } {\n    switch (node.length) {\n      case 17:\n        return {\n          type: NodeType.Branch,\n          ...(node[16].length !== 0 && { value: node[16] }),\n        };\n      case 2: {\n        const nibble = node[0][0] >> 4; // eslint-disable-line no-bitwise\n        if (nibble > 3) throw new UnknownPathNibbleError(nibble);\n        const type = nibble <= 1 ? NodeType.Extension : NodeType.Leaf;\n        const slice = [0, 2].includes(nibble) ? 2 : 1;\n        return {\n          type,\n          ...(type === NodeType.Leaf && { value: node[1] }),\n          path: node[0].toString('hex').slice(slice),\n        };\n      }\n      default:\n        throw new UnknownNodeLengthError(node.length);\n    }\n  }\n\n  /**\n   * Serialize Merkle Patricia Tree\n   * @returns Binary\n   */\n  serialize(): MPTreeBinary {\n    return [\n      Buffer.from(this.#rootHash, 'hex'),\n      Object.entries(this.#nodes).map(([mptHash, value]) => [Buffer.from(mptHash, 'hex'), value]),\n    ];\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param _key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  #getRaw(_key: string): Buffer | undefined {\n    let searchFrom = this.#rootHash;\n    let key = _key;\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return undefined;\n        throw new InternalError(\"Can't find node in complete tree\");\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          if (key.length === 0) return value;\n          searchFrom = node[+`0x${key[0]}`].toString('hex');\n          key = key.substring(1);\n          break;\n        case NodeType.Extension:\n          if (key.substring(0, path?.length) !== path) return undefined;\n          searchFrom = node[1].toString('hex');\n          key = key.substring(path.length);\n          break;\n        case NodeType.Leaf:\n          if (path !== key) return undefined;\n          return value;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    }\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  get(key: Encoded.Generic<E>): (EntUnpacked & { tag: T }) | undefined {\n    const d = this.#getRaw(decode(key).toString('hex'));\n    if (d == null) return d;\n    return this.#unpackEntry(encode(d, Encoding.Bytearray), this.#tag);\n  }\n\n  #entriesRaw(): Array<[string, Buffer]> {\n    const entries: Array<[string, Buffer]> = [];\n    const rec = (searchFrom: string, key: string): void => {\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return;\n        throw new InternalError(\"Can't find node in complete tree\");\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .map((t, idx): [typeof t, number] => [t, idx])\n            .filter(([t]) => t.length)\n            .forEach(([t, idx]) => rec(t.toString('hex'), key + idx.toString(16)));\n          if (value != null) entries.push([key, value]);\n          break;\n        case NodeType.Extension:\n          rec(node[1].toString('hex'), key + path);\n          break;\n        case NodeType.Leaf:\n          if (value == null) throw new UnexpectedTsError();\n          entries.push([key + path, value]);\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    };\n    rec(this.#rootHash, '');\n    return entries;\n  }\n\n  toObject(): Record<Encoded.Generic<E>, EntUnpacked & { tag: T }> {\n    return Object.fromEntries(\n      this.#entriesRaw()\n        // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n        .filter(([k]) => this.#encoding !== Encoding.ContractAddress || k.length !== 66)\n        .map(([k, v]) => [\n          encode(Buffer.from(k, 'hex'), this.#encoding),\n          this.#unpackEntry(encode(v, Encoding.Bytearray), this.#tag),\n        ]),\n    ) as Record<Encoded.Generic<E>, EntUnpacked & { tag: T }>;\n  }\n}\n\nexport default function genMPTreeField<E extends Encoding, T extends EntryTag>(\n  encoding: E,\n  tag: T,\n): {\n  serialize: (value: MPTree<E, T>) => MPTreeBinary;\n  deserialize: (value: MPTreeBinary, o: { unpackEntry: typeof unpackEntry }) => MPTree<E, T>;\n} {\n  return {\n    serialize(value) {\n      return value.serialize();\n    },\n\n    deserialize(value, { unpackEntry }) {\n      return new MPTree(value, encoding, tag, unpackEntry);\n    },\n  };\n}\n","import { EntryTag } from '../entry/constants.js';\nimport { encode, Encoding, decode } from '../../../utils/encoder.js';\nimport type { unpackEntry as unpackEntryType, packEntry as packEntryType } from '../entry/index.js';\n\ntype TagWrapping =\n  | EntryTag.AccountsMtree\n  | EntryTag.CallsMtree\n  | EntryTag.ChannelsMtree\n  | EntryTag.ContractsMtree\n  | EntryTag.NameserviceMtree\n  | EntryTag.OraclesMtree;\n\nexport default function genWrappedField<T extends TagWrapping>(\n  tag: T,\n): {\n  serialize: (\n    // TODO: replace with `(EntParams & { tag: T })['payload']`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { packEntry: typeof packEntryType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackEntry: typeof unpackEntryType },\n    // TODO: replace with `(EntUnpacked & { tag: T })['payload']`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n  recursiveType: true;\n} {\n  return {\n    serialize(payload, { packEntry }) {\n      return decode(packEntry({ tag, payload }));\n    },\n\n    deserialize(buffer, { unpackEntry }) {\n      return unpackEntry<TagWrapping>(encode(buffer, Encoding.Bytearray), tag).payload;\n    },\n\n    recursiveType: true,\n  };\n}\n","import SchemaTypes from '../SchemaTypes.js';\nimport abiVersion from '../field-types/abi-version.js';\nimport address, { idTagToEncoding } from '../field-types/address.js';\nimport array from '../field-types/array.js';\nimport boolean from '../field-types/boolean.js';\nimport coinAmount from '../field-types/coin-amount.js';\nimport ctVersion from '../field-types/ct-version.js';\nimport encoded from '../field-types/encoded.js';\nimport entry from '../field-types/entry.js';\nimport enumeration from '../field-types/enumeration.js';\nimport gasLimit from '../field-types/gas-limit.js';\nimport gasPrice from '../field-types/gas-price.js';\nimport map from '../field-types/map.js';\nimport mptree from '../field-types/mptree.js';\nimport pointers from '../field-types/pointers.js';\nimport raw from '../field-types/raw.js';\nimport shortUInt from '../field-types/short-u-int.js';\nimport shortUIntConst from '../field-types/short-u-int-const.js';\nimport string from '../field-types/string.js';\nimport uInt from '../field-types/u-int.js';\nimport wrapped from '../field-types/wrapped.js';\nimport { Encoded, Encoding } from '../../../utils/encoder.js';\nimport { EntryTag, CallReturnType } from './constants.js';\n\ninterface EntryMtreeValueArray {\n  serialize: (\n    value: Array<(EntParams & { tag: EntryTag.MtreeValue }) | Uint8Array | Encoded.Transaction>,\n  ) => Buffer[];\n  deserialize: (value: Buffer[]) => Array<EntUnpacked & { tag: EntryTag.MtreeValue }>;\n  recursiveType: true;\n}\n\nconst entryMtreeValueArray = array(entry(EntryTag.MtreeValue)) as unknown as EntryMtreeValueArray;\n\ninterface MapContracts {\n  serialize: (\n    value: Record<Encoded.ContractAddress, EntParams & { tag: EntryTag.Contract }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.ContractAddress, EntUnpacked & { tag: EntryTag.Contract }>;\n  recursiveType: true;\n}\n\nconst mapContracts = map(Encoding.ContractAddress, EntryTag.Contract) as unknown as MapContracts;\n\ninterface MapAccounts {\n  serialize: (\n    value: Record<Encoded.AccountAddress, EntParams & { tag: EntryTag.Account }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.AccountAddress, EntUnpacked & { tag: EntryTag.Account }>;\n  recursiveType: true;\n}\n\nconst mapAccounts = map(Encoding.AccountAddress, EntryTag.Account) as unknown as MapAccounts;\n\ninterface MapCalls {\n  serialize: (\n    value: Record<Encoded.Bytearray, EntParams & { tag: EntryTag.ContractCall }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.Bytearray, EntUnpacked & { tag: EntryTag.ContractCall }>;\n  recursiveType: true;\n}\n\nconst mapCalls = map(Encoding.Bytearray, EntryTag.ContractCall) as unknown as MapCalls;\n\ninterface MapChannels {\n  serialize: (value: Record<Encoded.Channel, EntParams & { tag: EntryTag.Channel }>) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Channel, EntUnpacked & { tag: EntryTag.Channel }>;\n  recursiveType: true;\n}\n\nconst mapChannels = map(Encoding.Channel, EntryTag.Channel) as unknown as MapChannels;\n\ninterface MapNames {\n  serialize: (value: Record<Encoded.Name, EntParams & { tag: EntryTag.Name }>) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Name, EntUnpacked & { tag: EntryTag.Name }>;\n  recursiveType: true;\n}\n\nconst mapNames = map(Encoding.Name, EntryTag.Name) as unknown as MapNames;\n\ninterface MapOracles {\n  serialize: (value: Record<Encoded.OracleAddress, EntParams & { tag: EntryTag.Oracle }>) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.OracleAddress, EntUnpacked & { tag: EntryTag.Oracle }>;\n  recursiveType: true;\n}\n\nconst mapOracles = map(Encoding.OracleAddress, EntryTag.Oracle) as unknown as MapOracles;\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/8a9d1d1206174627f6aaef86159dc9c643080653/contracts/fate.md#from-ceres-serialized-signature-data}\n */\nexport const schemas = [\n  {\n    tag: shortUIntConst(EntryTag.Account),\n    version: shortUIntConst(1),\n    nonce: shortUInt,\n    balance: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Account),\n    version: shortUIntConst(2, true),\n    flags: uInt,\n    nonce: shortUInt,\n    balance: uInt,\n    gaContract: address(Encoding.ContractAddress, Encoding.Name),\n    gaAuthFun: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(EntryTag.Name),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nameTtl: shortUInt,\n    status: raw,\n    /**\n     * a suggestion as to how long any clients should cache this information\n     */\n    clientTtl: shortUInt,\n    pointers,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Contract),\n    version: shortUIntConst(1, true),\n    owner: address(Encoding.AccountAddress),\n    ctVersion,\n    code: encoded(Encoding.ContractBytearray),\n    log: encoded(Encoding.ContractBytearray),\n    active: boolean,\n    referers: array(address(Encoding.AccountAddress)),\n    deposit: coinAmount,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ContractCall),\n    version: shortUIntConst(2, true),\n    callerId: address(Encoding.AccountAddress),\n    callerNonce: shortUInt,\n    height: shortUInt,\n    contractId: address(Encoding.ContractAddress),\n    // TODO: rename after resolving https://github.com/aeternity/protocol/issues/506\n    gasPrice: uInt,\n    gasUsed: shortUInt,\n    returnValue: encoded(Encoding.ContractBytearray),\n    returnType: enumeration(CallReturnType),\n    // TODO: add serialization for\n    //  <log> :: [ { <address> :: id, [ <topics> :: binary() }, <data> :: binary() } ]\n    log: array(raw),\n  },\n  {\n    tag: shortUIntConst(EntryTag.Oracle),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    queryFormat: string,\n    responseFormat: string,\n    queryFee: coinAmount,\n    oracleTtlValue: shortUInt,\n    abiVersion,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Channel),\n    version: shortUIntConst(3, true),\n    initiator: address(Encoding.AccountAddress),\n    responder: address(Encoding.AccountAddress),\n    channelAmount: uInt,\n    initiatorAmount: uInt,\n    responderAmount: uInt,\n    channelReserve: uInt,\n    initiatorDelegateIds: array(address(...idTagToEncoding)),\n    responderDelegateIds: array(address(...idTagToEncoding)),\n    stateHash: encoded(Encoding.State),\n    round: shortUInt,\n    soloRound: uInt,\n    lockPeriod: uInt,\n    lockedUntil: uInt,\n    initiatorAuth: encoded(Encoding.ContractBytearray),\n    responderAuth: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateTransfer),\n    version: shortUIntConst(1, true),\n    from: address(Encoding.AccountAddress),\n    to: address(Encoding.AccountAddress),\n    amount: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateDeposit),\n    version: shortUIntConst(1, true),\n    from: address(Encoding.AccountAddress),\n    amount: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateWithdraw),\n    version: shortUIntConst(1, true),\n    from: address(Encoding.AccountAddress),\n    amount: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateCreateContract),\n    version: shortUIntConst(1, true),\n    owner: address(Encoding.AccountAddress),\n    ctVersion,\n    code: encoded(Encoding.ContractBytearray),\n    deposit: uInt,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateCallContract),\n    version: shortUIntConst(1, true),\n    caller: address(Encoding.AccountAddress),\n    contract: address(Encoding.ContractAddress),\n    abiVersion,\n    amount: uInt,\n    callData: encoded(Encoding.ContractBytearray),\n    callStack: raw,\n    gasPrice,\n    gasLimit,\n  },\n  {\n    tag: shortUIntConst(EntryTag.TreesPoi),\n    version: shortUIntConst(1, true),\n    // TODO: inline an extra wrapping array after resolving https://github.com/aeternity/protocol/issues/505\n    accounts: array(mptree(Encoding.AccountAddress, EntryTag.Account)),\n    calls: array(mptree(Encoding.Bytearray, EntryTag.ContractCall)),\n    channels: array(mptree(Encoding.Channel, EntryTag.Channel)),\n    contracts: array(mptree(Encoding.ContractAddress, EntryTag.Contract)),\n    ns: array(mptree(Encoding.Name, EntryTag.Name)),\n    oracles: array(mptree(Encoding.OracleAddress, EntryTag.Oracle)),\n  },\n  {\n    tag: shortUIntConst(EntryTag.StateTrees),\n    version: shortUIntConst(0, true),\n    contracts: wrapped(EntryTag.ContractsMtree) as unknown as MapContracts,\n    calls: wrapped(EntryTag.CallsMtree) as unknown as MapCalls,\n    channels: wrapped(EntryTag.ChannelsMtree) as unknown as MapChannels,\n    ns: wrapped(EntryTag.NameserviceMtree) as unknown as MapNames,\n    oracles: wrapped(EntryTag.OraclesMtree) as unknown as MapOracles,\n    accounts: wrapped(EntryTag.AccountsMtree) as unknown as MapAccounts,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Mtree),\n    version: shortUIntConst(1, true),\n    values: entryMtreeValueArray,\n  },\n  {\n    tag: shortUIntConst(EntryTag.MtreeValue),\n    version: shortUIntConst(1, true),\n    key: raw,\n    value: raw,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ContractsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapContracts,\n  },\n  {\n    tag: shortUIntConst(EntryTag.CallsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapCalls,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapChannels,\n  },\n  {\n    tag: shortUIntConst(EntryTag.NameserviceMtree),\n    version: shortUIntConst(1, true),\n    payload: mapNames,\n  },\n  {\n    tag: shortUIntConst(EntryTag.OraclesMtree),\n    version: shortUIntConst(1, true),\n    payload: mapOracles,\n  },\n  {\n    tag: shortUIntConst(EntryTag.AccountsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapAccounts,\n  },\n  {\n    tag: shortUIntConst(EntryTag.GaMetaTxAuthData),\n    version: shortUIntConst(1, true),\n    fee: coinAmount,\n    gasPrice,\n    txHash: encoded(Encoding.TxHash),\n  },\n] as const;\n\ntype Schemas = SchemaTypes<typeof schemas>;\nexport type EntParams = Schemas['TxParams'];\nexport type EntUnpacked = Schemas['TxUnpacked'];\n","import { Encoded, Encoding } from '../../../utils/encoder.js';\nimport { packRecord, unpackRecord } from '../common.js';\nimport { schemas } from './schema.js';\nimport { EntryTag } from './constants.js';\nimport { EntParams, EntUnpacked } from './schema.generated.js';\n\nconst encodingTag = [\n  [EntryTag.CallsMtree, Encoding.CallStateTree],\n  [EntryTag.StateTrees, Encoding.StateTrees],\n  [EntryTag.TreesPoi, Encoding.Poi],\n] as const;\n\nexport function packEntry(params: EntParams & { tag: EntryTag.CallsMtree }): Encoded.CallStateTree;\nexport function packEntry(params: EntParams & { tag: EntryTag.StateTrees }): Encoded.StateTrees;\nexport function packEntry(params: EntParams & { tag: EntryTag.TreesPoi }): Encoded.Poi;\n/**\n * Pack entry\n * @category entry builder\n * @param params - Params of entry\n * @returns Encoded entry\n */\nexport function packEntry(params: EntParams): Encoded.Any;\nexport function packEntry(params: EntParams): Encoded.Any {\n  const encoding = encodingTag.find(([tag]) => tag === params.tag)?.[1] ?? Encoding.Bytearray;\n  return packRecord(schemas, EntryTag, params, { packEntry }, encoding);\n}\n\nexport function unpackEntry(\n  encoded: Encoded.CallStateTree,\n): EntUnpacked & { tag: EntryTag.CallsMtree };\nexport function unpackEntry(\n  encoded: Encoded.StateTrees,\n): EntUnpacked & { tag: EntryTag.StateTrees };\nexport function unpackEntry(encoded: Encoded.Poi): EntUnpacked & { tag: EntryTag.TreesPoi };\n/**\n * Unpack entry\n * @category entry builder\n * @param encoded - Encoded entry\n * @param expectedTag - Expected entry type\n * @returns Params of entry\n */\nexport function unpackEntry<T extends EntryTag>(\n  encoded: Encoded.Any,\n  expectedTag?: T,\n): EntUnpacked & { tag: T };\nexport function unpackEntry(encoded: Encoded.Any, expectedTag?: EntryTag): EntUnpacked {\n  expectedTag ??= encodingTag.find(([, enc]) => encoded.startsWith(enc))?.[0];\n  return unpackRecord(schemas, EntryTag, encoded, expectedTag, { unpackEntry }) as any;\n}\n","import { decode, encode, Encoded, Encoding } from '../../utils/encoder.js';\nimport { hash } from '../../utils/crypto.js';\nimport { Field } from './field-types/interface.js';\nimport { txSchema } from './schema.js';\nimport { TxUnpacked, TxParams, TxParamsAsync } from './schema.generated.js';\nimport { Tag } from './constants.js';\nimport { buildContractId } from './helpers.js';\nimport { getSchema as getSchemaCommon, packRecord, unpackRecord } from './common.js';\nimport { ArgumentError } from '../../utils/errors.js';\nimport { packEntry, unpackEntry } from './entry/index.js';\n\n/**\n * JavaScript-based Transaction builder\n */\n\nexport function getSchema(tag: Tag, version?: number): Array<[string, Field]> {\n  return getSchemaCommon(txSchema, Tag, tag, version);\n}\n\ntype TxEncoding =\n  | Encoding.Transaction\n  | Encoding.Poi\n  | Encoding.StateTrees\n  | Encoding.CallStateTree;\n\n/**\n * Build transaction\n * @category transaction builder\n * @param params - Transaction params\n */\nexport function buildTx(params: TxParams): Encoded.Transaction {\n  return packRecord(\n    txSchema,\n    Tag,\n    params,\n    {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      unpackTx,\n      buildTx,\n      rebuildTx: (overrideParams: any) => buildTx({ ...params, ...overrideParams }),\n      packEntry,\n    },\n    Encoding.Transaction,\n  );\n}\n\nexport type BuildTxOptions<TxType extends Tag, OmitFields extends string> = Omit<\n  TxParamsAsync & { tag: TxType },\n  'tag' | OmitFields\n>;\n\n// TODO: require onNode because it is the only reason this builder is async [breaking change]\n/**\n * Build transaction async (may request node for additional data)\n * @category transaction builder\n * @param params - Transaction params\n * @returns tx_-encoded transaction\n */\nexport async function buildTxAsync(params: TxParamsAsync): Promise<Encoded.Transaction> {\n  await Promise.all(\n    getSchema(params.tag, params.version).map(async ([key, field]) => {\n      if (field.prepare == null) return;\n      // @ts-expect-error the type of `params[key]` can't be determined accurately\n      params[key] = await field.prepare(params[key], params, params);\n    }),\n  );\n\n  // @ts-expect-error after preparation properties should be compatible with sync tx builder\n  return buildTx(params);\n}\n\n/**\n * Unpack transaction encoded as string\n * @category transaction builder\n * @param encodedTx - Encoded transaction\n * @param txType - Expected transaction type\n * @returns Transaction params\n */\nexport function unpackTx<TxType extends Tag>(\n  encodedTx: Encoded.Generic<TxEncoding>,\n  txType?: TxType,\n): TxUnpacked & { tag: TxType } {\n  return unpackRecord(txSchema, Tag, encodedTx, txType, { unpackTx, unpackEntry }) as any;\n}\n\n/**\n * Build a transaction hash\n * @category transaction builder\n * @param rawTx - base64 or rlp encoded transaction\n * @returns Transaction hash\n */\nexport function buildTxHash(rawTx: Encoded.Transaction | Uint8Array): Encoded.TxHash {\n  const data = typeof rawTx === 'string' && rawTx.startsWith('tx_') ? decode(rawTx) : rawTx;\n  return encode(hash(data), Encoding.TxHash);\n}\n\n/**\n * Build a contract public key by contractCreateTx, gaAttach or signedTx\n * @category contract\n * @param contractTx - Transaction\n * @returns Contract public key\n */\nexport function buildContractIdByContractTx(\n  contractTx: Encoded.Transaction,\n): Encoded.ContractAddress {\n  let params = unpackTx(contractTx);\n  if (Tag.SignedTx === params.tag) params = params.encodedTx;\n  if (Tag.ContractCreateTx !== params.tag && Tag.GaAttachTx !== params.tag) {\n    throw new ArgumentError('contractTx', 'a contractCreateTx or gaAttach', params.tag);\n  }\n  return buildContractId(params.ownerId, params.nonce);\n}\n","function verCmp(a: string, b: string): number {\n  const getComponents = (v: string): number[] =>\n    v\n      .split(/[-+]/)[0]\n      .split('.')\n      .map((i) => +i);\n\n  const aComponents = getComponents(a);\n  const bComponents = getComponents(b);\n\n  const base = Math.max(...aComponents, ...bComponents) + 1;\n  const componentsToNumber = (components: number[]): number =>\n    components.reverse().reduce((acc, n, idx) => acc + n * base ** idx, 0);\n\n  return componentsToNumber(aComponents) - componentsToNumber(bComponents);\n}\n\nexport default function semverSatisfies(\n  version: string,\n  geVersion: string,\n  ltVersion?: string,\n): boolean {\n  return verCmp(version, geVersion) >= 0 && (ltVersion == null || verCmp(version, ltVersion) < 0);\n}\n","import { RestError, PipelineResponse, PipelinePolicy } from '@azure/core-rest-pipeline';\nimport {\n  AdditionalPolicyConfig,\n  FullOperationResponse,\n  OperationOptions,\n  createSerializer as createSerializerOrig,\n} from '@azure/core-client';\nimport { pause } from './other.js';\nimport semverSatisfies from './semver-satisfies.js';\nimport { InternalError, UnexpectedTsError, UnsupportedVersionError } from './errors.js';\n\nconst bigIntPrefix = '_sdk-big-int-';\n\nexport const createSerializer = (\n  ...args: Parameters<typeof createSerializerOrig>\n): ReturnType<typeof createSerializerOrig> => {\n  const serializer = createSerializerOrig(...args);\n  const { serialize, deserialize } = serializer;\n  return Object.assign(serializer, {\n    serialize(\n      ...[mapper, object, objectName, options]: Parameters<typeof serialize>\n    ): ReturnType<typeof serialize> {\n      // @ts-expect-error we are extending autorest with BigInt support\n      if (mapper.type.name !== 'BigInt' || object == null) {\n        return serialize.call(this, mapper, object, objectName, options);\n      }\n      if (typeof object !== 'bigint') {\n        objectName ??= mapper.serializedName;\n        throw new Error(`${objectName} with value ${object} must be of type bigint.`);\n      }\n      return object.toString();\n    },\n\n    deserialize(\n      ...[mapper, responseBody, objectName, options]: Parameters<typeof deserialize>\n    ): ReturnType<typeof deserialize> {\n      // @ts-expect-error we are extending autorest with BigInt support\n      if (mapper.type.name !== 'BigInt' || responseBody == null) {\n        if (typeof responseBody === 'string' && responseBody.startsWith(bigIntPrefix)) {\n          console.warn(`AeSdk internal error: BigInt value ${responseBody} handled incorrectly`);\n          responseBody = +responseBody.replace(bigIntPrefix, '');\n        }\n        const result = deserialize.call(this, mapper, responseBody, objectName, options);\n        // TODO: remove after fixing https://github.com/aeternity/ae_mdw/issues/1891\n        // and https://github.com/aeternity/aeternity/issues/4386\n        if (result instanceof Date) return new Date(+result / 1000);\n        return result;\n      }\n      if (typeof responseBody === 'number' && responseBody > Number.MAX_SAFE_INTEGER) {\n        throw new InternalError(`Number ${responseBody} is not accurate to be converted to BigInt`);\n      }\n      return BigInt(responseBody.toString().replace(bigIntPrefix, ''));\n    },\n  });\n};\n\nconst safeLength = Number.MAX_SAFE_INTEGER.toString().length;\nconst bigIntPropertyRe = new RegExp(String.raw`(\"\\w+\":\\s*)(\\d{${safeLength},})(\\s*[,}])`, 'm');\nconst bigIntArrayItemRe = new RegExp(String.raw`([[,]\\s*)(\\d{${safeLength},})\\b`, 'm');\nexport const parseBigIntPolicy: PipelinePolicy = {\n  name: 'parse-big-int',\n  async sendRequest(request, next) {\n    const response = await next(request);\n    if (response.bodyAsText == null) return response;\n    // TODO: replace with https://caniuse.com/mdn-javascript_builtins_json_parse_reviver_parameter_context_argument when it gets support in FF and Safari\n    response.bodyAsText = response.bodyAsText.replaceAll(\n      new RegExp(bigIntPropertyRe, 'g'),\n      (matched) => {\n        const match = matched.match(bigIntPropertyRe);\n        if (match == null) throw new UnexpectedTsError();\n        const [, name, value, end] = match;\n        return [\n          name,\n          +value > Number.MAX_SAFE_INTEGER ? `\"${bigIntPrefix}${value}\"` : value,\n          end,\n        ].join('');\n      },\n    );\n    // FIXME: may break strings inside json\n    response.bodyAsText = response.bodyAsText.replaceAll(\n      new RegExp(bigIntArrayItemRe, 'g'),\n      (matched) => {\n        const match = matched.match(bigIntArrayItemRe);\n        if (match == null) throw new UnexpectedTsError();\n        const [, prefix, value] = match;\n        return `${prefix}\"${bigIntPrefix}${value}\"`;\n      },\n    );\n    return response;\n  },\n};\n\nexport const genRequestQueuesPolicy = (): AdditionalPolicyConfig => {\n  const requestQueues = new Map<string, Promise<unknown>>();\n\n  return {\n    policy: {\n      name: 'request-queues',\n      async sendRequest(request, next) {\n        const key = request.headers.get('__queue');\n        request.headers.delete('__queue');\n        const getResponse = async (): Promise<PipelineResponse> => next(request);\n        if (key == null) return getResponse();\n        const req = (requestQueues.get(key) ?? Promise.resolve()).then(getResponse);\n        requestQueues.set(\n          key,\n          req.catch(() => {}),\n        );\n        return req;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genCombineGetRequestsPolicy = (): AdditionalPolicyConfig => {\n  const pendingGetRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'combine-get-requests',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = pendingGetRequests.get(key) ?? next(request);\n        pendingGetRequests.set(key, response);\n        try {\n          return await response;\n        } finally {\n          pendingGetRequests.delete(key);\n        }\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genAggressiveCacheGetResponsesPolicy = (): AdditionalPolicyConfig => {\n  const getRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'aggressive-cache-get-responses',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = getRequests.get(key) ?? next(request);\n        getRequests.set(key, response);\n        return response;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genErrorFormatterPolicy = (\n  getMessage: (b: any) => string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'error-formatter',\n    async sendRequest(request, next) {\n      try {\n        return await next(request);\n      } catch (error) {\n        if (\n          !(error instanceof RestError) ||\n          error.request == null ||\n          error.message.startsWith('Error ')\n        )\n          throw error;\n        const prefix = `${new URL(error.request.url).pathname.slice(1)} error`;\n\n        if (error.response?.bodyAsText == null) {\n          if (error.message === '') error.message = `${prefix}: ${error.code}`;\n          throw error;\n        }\n\n        const body = (error.response as FullOperationResponse).parsedBody;\n        error.message = prefix;\n        const message = body == null ? ` ${error.response.status} status code` : getMessage(body);\n        if (message !== '') error.message += `:${message}`;\n        throw error;\n      }\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genVersionCheckPolicy = (\n  name: string,\n  versionCb: (options: OperationOptions) => Promise<string>,\n  geVersion: string,\n  ltVersion: string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'version-check',\n    async sendRequest(request, next) {\n      if (request.headers.has('__version-check')) {\n        request.headers.delete('__version-check');\n        return next(request);\n      }\n      const options = { requestOptions: { customHeaders: { '__version-check': 'true' } } };\n      const args = [await versionCb(options), geVersion, ltVersion] as const;\n      if (!semverSatisfies(...args)) throw new UnsupportedVersionError(name, ...args);\n      return next(request);\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genRetryOnFailurePolicy = (\n  retryCount: number,\n  retryOverallDelay: number,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'retry-on-failure',\n    async sendRequest(request, next) {\n      const retryCode = request.headers.get('__retry-code') ?? NaN;\n      request.headers.delete('__retry-code');\n      const statusesToNotRetry = [200, 400, 403, 410, 500].filter((c) => c !== +retryCode);\n\n      const intervals = new Array(retryCount)\n        .fill(0)\n        .map((_, idx) => ((idx + 1) / retryCount) ** 2);\n      const intervalSum = intervals.reduce((a, b) => a + b, 0);\n      const intervalsInMs = intervals.map((e) => Math.floor((e / intervalSum) * retryOverallDelay));\n\n      let error = new RestError('Not expected to be thrown');\n      for (let attempt = 0; attempt <= retryCount; attempt += 1) {\n        if (attempt !== 0) {\n          await pause(intervalsInMs[attempt - 1]);\n          const urlParsed = new URL(request.url);\n          urlParsed.searchParams.set('__sdk-retry', attempt.toString());\n          request.url = urlParsed.toString();\n        }\n        try {\n          return await next(request);\n        } catch (e) {\n          if (!(e instanceof RestError)) throw e;\n          if (statusesToNotRetry.includes(e.response?.status ?? 0)) throw e;\n          error = e;\n        }\n      }\n      throw error;\n    },\n  },\n  position: 'perCall',\n});\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Account: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Account\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      balance: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"balance\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      payable: {\n        serializedName: \"payable\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"basic\", \"generalized\"],\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"error_code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NextNonceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NextNonceResponse\",\n    modelProperties: {\n      nextNonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"next_nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const SignedTxs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTxs\",\n    modelProperties: {\n      transactions: {\n        serializedName: \"transactions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedTx\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const SignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\",\n        },\n      },\n      blockHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: -1,\n        },\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedTx: {\n        serializedName: \"encoded_tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      toId: {\n        serializedName: \"to_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\",\n        },\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      queryId: {\n        serializedName: \"query_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"String\",\n        },\n      },\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nameSalt: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_salt\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      nameFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nameId: {\n        serializedName: \"name_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nameTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      clientTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"client_ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callerId: {\n        serializedName: \"caller_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\"),\n        },\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\",\n        },\n      },\n      gaId: {\n        serializedName: \"ga_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n      payerId: {\n        serializedName: \"payer_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTx\",\n            \"ChannelCreateTx\",\n            \"ChannelDepositTx\",\n            \"ChannelWithdrawTx\",\n            \"ChannelForceProgressTx\",\n            \"ChannelCloseMutualTx\",\n            \"ChannelCloseSoloTx\",\n            \"ChannelSlashTx\",\n            \"ChannelSettleTx\",\n            \"ChannelSnapshotSoloTx\",\n            \"ChannelSetDelegatesTx\",\n            \"OracleRegisterTx\",\n            \"OracleExtendTx\",\n            \"OracleQueryTx\",\n            \"OracleRespondTx\",\n            \"NamePreclaimTx\",\n            \"NameClaimTx\",\n            \"NameUpdateTx\",\n            \"NameTransferTx\",\n            \"NameRevokeTx\",\n            \"ContractCreateTx\",\n            \"ContractCallTx\",\n            \"GAAttachTx\",\n            \"GAMetaTx\",\n            \"PayingForTx\",\n          ],\n        },\n      },\n    },\n  },\n};\n\nexport const Delegates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegates\",\n    modelProperties: {\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OffChainUpdate\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: {\n      serializedName: \"op\",\n      clientName: \"op\",\n    },\n    modelProperties: {\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RelativeTTL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelativeTTL\",\n    modelProperties: {\n      type: {\n        defaultValue: \"delta\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Ttl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ttl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delta\", \"block\"],\n        },\n      },\n      value: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NamePointer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointer\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedKey: {\n        serializedName: \"encoded_key\",\n        type: {\n          name: \"String\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AuctionEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      startedAt: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"started_at\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      endsAt: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ends_at\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      highestBidder: {\n        serializedName: \"highest_bidder\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      highestBid: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"highest_bid\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      channelAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      soloRound: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockedUntil: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractObject\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      referrerIds: {\n        serializedName: \"referrer_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const ByteCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCode\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PoI: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PoI\",\n    modelProperties: {\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Currency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Currency\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      symbol: {\n        serializedName: \"symbol\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      subunit: {\n        serializedName: \"subunit\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      subunitsPerUnit: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"subunits_per_unit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fiatConverstionUrl: {\n        serializedName: \"fiat_converstion_url\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fiatConversionUrl: {\n        serializedName: \"fiat_conversion_url\",\n        type: {\n          name: \"String\",\n        },\n      },\n      logo: {\n        serializedName: \"logo\",\n        type: {\n          name: \"Composite\",\n          className: \"Image\",\n        },\n      },\n      primaryColour: {\n        serializedName: \"primary_colour\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      secondaryColour: {\n        serializedName: \"secondary_colour\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      networkName: {\n        serializedName: \"network_name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Image: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Image\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInput\",\n    modelProperties: {\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunAccount\",\n            },\n          },\n        },\n      },\n      txs: {\n        serializedName: \"txs\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunInputItem\",\n            },\n          },\n        },\n      },\n      txEvents: {\n        defaultValue: false,\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunAccount\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunInputItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInputItem\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callReq: {\n        serializedName: \"call_req\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallReq\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunCallReq: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallReq\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      caller: {\n        serializedName: \"caller\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallContext\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunCallContext: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallContext\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      stateful: {\n        serializedName: \"stateful\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResults\",\n    modelProperties: {\n      results: {\n        serializedName: \"results\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunResult\",\n            },\n          },\n        },\n      },\n      txEvents: {\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResult\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callObj: {\n        serializedName: \"call_obj\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCallObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callerNonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"caller_nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gasUsed: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      log: {\n        serializedName: \"log\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\",\n            },\n          },\n        },\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\", \"revert\"],\n        },\n      },\n    },\n  },\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      address: {\n        serializedName: \"address\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topics: {\n        serializedName: \"topics\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMinimum: 0,\n            },\n            type: {\n              // @ts-expect-error we are extending autorest with BigInt support\n              name: \"BigInt\",\n            },\n          },\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Generation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Generation\",\n    modelProperties: {\n      keyBlock: {\n        serializedName: \"key_block\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyBlock\",\n        },\n      },\n      microBlocks: {\n        serializedName: \"micro_blocks\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      miner: {\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42,\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMaximum: 4294967295,\n              InclusiveMinimum: 0,\n            },\n            type: {\n              name: \"Number\",\n            },\n          },\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Header: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Header\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\",\n        },\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42,\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMaximum: 4294967295,\n              InclusiveMinimum: 0,\n            },\n            type: {\n              name: \"Number\",\n            },\n          },\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\",\n        },\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signature: {\n        serializedName: \"signature\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HashResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HashResponse\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HeightResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeightResponse\",\n    modelProperties: {\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const MicroBlockHeader: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockHeader\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      signature: {\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const CountResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CountResponse\",\n    modelProperties: {\n      count: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      owner: {\n        serializedName: \"owner\",\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const RegisteredOracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegisteredOracle\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueries\",\n    modelProperties: {\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleQuery\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      senderNonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"sender_nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerPubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerPubKey\",\n    modelProperties: {\n      pubkey: {\n        serializedName: \"pubkey\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GasPricesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GasPricesItem\",\n    modelProperties: {\n      minGasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"min_gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      utilization: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"utilization\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      minutes: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"minutes\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      genesisKeyBlockHash: {\n        serializedName: \"genesis_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      solutions: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"solutions\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      difficulty: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"difficulty\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hashrate: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"hashrate\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      syncing: {\n        serializedName: \"syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      syncProgress: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"sync_progress\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      uptime: {\n        serializedName: \"uptime\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      listening: {\n        serializedName: \"listening\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      protocols: {\n        serializedName: \"protocols\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Protocol\",\n            },\n          },\n        },\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      peerCount: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"peer_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      peerConnections: {\n        serializedName: \"peer_connections\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerConnections\",\n        },\n      },\n      pendingTransactionsCount: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"pending_transactions_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      peerPubkey: {\n        serializedName: \"peer_pubkey\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topKeyBlockHash: {\n        serializedName: \"top_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topBlockHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"top_block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Protocol: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Protocol\",\n    modelProperties: {\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      effectiveAtHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"effective_at_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerConnections: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerConnections\",\n    modelProperties: {\n      inbound: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"inbound\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      outbound: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"outbound\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const SyncStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncStatus\",\n    modelProperties: {\n      progress: {\n        serializedName: \"progress\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      speed: {\n        serializedName: \"speed\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      estimate: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"estimate\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const EncodedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncodedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PostTxResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PostTxResponse\",\n    modelProperties: {\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TxInfoObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TxInfoObject\",\n    modelProperties: {\n      callInfo: {\n        serializedName: \"call_info\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\",\n        },\n      },\n      gaInfo: {\n        serializedName: \"ga_info\",\n        type: {\n          name: \"Composite\",\n          className: \"GAObject\",\n        },\n      },\n      txInfo: {\n        serializedName: \"tx_info\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gasUsed: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\"],\n        },\n      },\n      innerObject: {\n        serializedName: \"inner_object\",\n        type: {\n          name: \"Composite\",\n          className: \"TxInfoObject\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCloseMutualTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseMutualTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCloseSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCreateTx\",\n    modelProperties: {\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelDepositTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelDepositTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelForceProgressTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelForceProgressTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSetDelegatesTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSetDelegatesTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSettleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSettleTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSlashTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSlashTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSnapshotSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSnapshotSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelWithdrawTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelWithdrawTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toId: {\n        serializedName: \"to_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const CheckTxInPoolResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckTxInPoolResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CommitmentId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommitmentId\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCallTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallTx\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCreateTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const UnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UnsignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAAttachTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAAttachTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\"),\n        },\n        serializedName: \"auth_fun\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAMetaTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAMetaTx\",\n    modelProperties: {\n      gaId: {\n        serializedName: \"ga_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameClaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimTx\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameSalt: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_salt\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nameFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameHash: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameHash\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NamePreclaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePreclaimTx\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameRevokeTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameRevokeTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTransferTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransferTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameUpdateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdateTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      clientTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"client_ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerDetails\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      port: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      firstSeen: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"first_seen\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastSeen: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"last_seen\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      genesisHash: {\n        serializedName: \"genesis_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topHash: {\n        serializedName: \"top_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topDifficulty: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"top_difficulty\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeVendor: {\n        serializedName: \"node_vendor\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeOs: {\n        serializedName: \"node_os\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQueryTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueryTx\",\n    modelProperties: {\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleRegisterTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRegisterTx\",\n    modelProperties: {\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleRespondTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRespondTx\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PayingForTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PayingForTx\",\n    modelProperties: {\n      payerId: {\n        serializedName: \"payer_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCount\",\n    modelProperties: {\n      connected: {\n        serializedName: \"connected\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountConnected\",\n        },\n      },\n      available: {\n        serializedName: \"available\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountAvailable\",\n        },\n      },\n      blocked: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerCountConnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountConnected\",\n    modelProperties: {\n      inbound: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"inbound\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      outbound: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"outbound\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerCountAvailable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountAvailable\",\n    modelProperties: {\n      verified: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"verified\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      unverified: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"unverified\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Peers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Peers\",\n    modelProperties: {\n      peers: {\n        serializedName: \"peers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const PubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PubKey\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SpendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpendTx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TokenSupply: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TokenSupply\",\n    modelProperties: {\n      accounts: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"accounts\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contracts: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"contracts\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractOracles: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"contract_oracles\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      locked: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"locked\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracles: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"oracles\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleQueries: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"oracle_queries\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pendingRewards: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"pending_rewards\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      total: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"total\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainCallContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainCallContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainCallContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      caller: {\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainDeposit: coreClient.CompositeMapper = {\n  serializedName: \"OffChainDeposit\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainDeposit\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainNewContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainNewContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainNewContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      owner: {\n        serializedName: \"owner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Composite\",\n          className: \"ByteCode\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainTransfer: coreClient.CompositeMapper = {\n  serializedName: \"OffChainTransfer\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainTransfer\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainWithdrawal: coreClient.CompositeMapper = {\n  serializedName: \"OffChainWithdrawal\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainWithdrawal\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const CreateContractUnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateContractUnsignedTx\",\n    modelProperties: {\n      ...UnsignedTx.type.modelProperties,\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport let discriminators = {\n  OffChainUpdate: OffChainUpdate,\n  \"OffChainUpdate.OffChainCallContract\": OffChainCallContract,\n  \"OffChainUpdate.OffChainDeposit\": OffChainDeposit,\n  \"OffChainUpdate.OffChainNewContract\": OffChainNewContract,\n  \"OffChainUpdate.OffChainTransfer\": OffChainTransfer,\n  \"OffChainUpdate.OffChainWithdrawal\": OffChainWithdrawal,\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper,\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0,\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"],\n    },\n  },\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper,\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const nameHash: OperationURLParameter = {\n  parameterPath: \"nameHash\",\n  mapper: {\n    serializedName: \"name_hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"],\n    },\n  },\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper,\n};\n","import { createSerializer } from \"../../utils/autorest.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  NodeOptionalParams,\n  GetAccountByPubkeyOptionalParams,\n  GetAccountByPubkeyResponse,\n  GetAccountByPubkeyAndHashOptionalParams,\n  GetAccountByPubkeyAndHashResponse,\n  GetAccountByPubkeyAndHeightOptionalParams,\n  GetAccountByPubkeyAndHeightResponse,\n  GetAccountNextNonceOptionalParams,\n  GetAccountNextNonceResponse,\n  GetPendingAccountTransactionsByPubkeyOptionalParams,\n  GetPendingAccountTransactionsByPubkeyResponse,\n  GetAuctionEntryByNameOptionalParams,\n  GetAuctionEntryByNameResponse,\n  GetChannelByPubkeyOptionalParams,\n  GetChannelByPubkeyResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetContractCodeOptionalParams,\n  GetContractCodeResponse,\n  GetContractPoIOptionalParams,\n  GetContractPoIResponse,\n  GetCurrencyOptionalParams,\n  GetCurrencyResponse,\n  DryRunInput,\n  ProtectedDryRunTxsOptionalParams,\n  ProtectedDryRunTxsResponse,\n  GetCurrentGenerationOptionalParams,\n  GetCurrentGenerationResponse,\n  GetGenerationByHashOptionalParams,\n  GetGenerationByHashResponse,\n  GetGenerationByHeightOptionalParams,\n  GetGenerationByHeightResponse,\n  GetTopHeaderOptionalParams,\n  GetTopHeaderResponse,\n  GetCurrentKeyBlockOptionalParams,\n  GetCurrentKeyBlockResponse,\n  GetCurrentKeyBlockHashOptionalParams,\n  GetCurrentKeyBlockHashResponse,\n  GetCurrentKeyBlockHeightOptionalParams,\n  GetCurrentKeyBlockHeightResponse,\n  GetKeyBlockByHashOptionalParams,\n  GetKeyBlockByHashResponse,\n  GetKeyBlockByHeightOptionalParams,\n  GetKeyBlockByHeightResponse,\n  GetPendingKeyBlockOptionalParams,\n  GetPendingKeyBlockResponse,\n  GetMicroBlockHeaderByHashOptionalParams,\n  GetMicroBlockHeaderByHashResponse,\n  GetMicroBlockTransactionsByHashOptionalParams,\n  GetMicroBlockTransactionsByHashResponse,\n  GetMicroBlockTransactionsCountByHashOptionalParams,\n  GetMicroBlockTransactionsCountByHashResponse,\n  GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  GetMicroBlockTransactionByHashAndIndexResponse,\n  GetNameEntryByNameOptionalParams,\n  GetNameEntryByNameResponse,\n  GetNameEntryByNameHashOptionalParams,\n  GetNameEntryByNameHashResponse,\n  GetOracleByPubkeyOptionalParams,\n  GetOracleByPubkeyResponse,\n  GetOracleQueriesByPubkeyOptionalParams,\n  GetOracleQueriesByPubkeyResponse,\n  GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  GetOracleQueryByPubkeyAndQueryIdResponse,\n  GetPeerPubkeyOptionalParams,\n  GetPeerPubkeyResponse,\n  GetRecentGasPricesOptionalParams,\n  GetRecentGasPricesResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetChainEndsOptionalParams,\n  GetChainEndsResponse,\n  GetSyncStatusOptionalParams,\n  GetSyncStatusResponse,\n  EncodedTx,\n  PostTransactionOptionalParams,\n  PostTransactionResponse,\n  GetTransactionByHashOptionalParams,\n  GetTransactionByHashResponse,\n  GetTransactionInfoByHashOptionalParams,\n  GetTransactionInfoByHashResponse,\n} from \"./models/index.js\";\n\nexport class Node extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Node class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: NodeOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: NodeOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-node/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountByPubkey(\n    pubkey: string,\n    options?: GetAccountByPubkeyOptionalParams,\n  ): Promise<GetAccountByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account by public key after the block indicated by hash. Can be either a micro block or a\n   * keyblock hash\n   * @param pubkey The public key of the account\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHash(\n    pubkey: string,\n    hash: string,\n    options?: GetAccountByPubkeyAndHashOptionalParams,\n  ): Promise<GetAccountByPubkeyAndHashResponse> {\n    return this.sendOperationRequest(\n      { pubkey, hash, options },\n      getAccountByPubkeyAndHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account by public key after the opening key block of the generation at height\n   * @param pubkey The public key of the account\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHeight(\n    pubkey: string,\n    height: number,\n    options?: GetAccountByPubkeyAndHeightOptionalParams,\n  ): Promise<GetAccountByPubkeyAndHeightResponse> {\n    return this.sendOperationRequest(\n      { pubkey, height, options },\n      getAccountByPubkeyAndHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account's next nonce; This is computed according to whatever is the current account nonce and\n   * what transactions are currently present in the transaction pool\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountNextNonce(\n    pubkey: string,\n    options?: GetAccountNextNonceOptionalParams,\n  ): Promise<GetAccountNextNonceResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountNextNonceOperationSpec,\n    );\n  }\n\n  /**\n   * Get pending account transactions by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getPendingAccountTransactionsByPubkey(\n    pubkey: string,\n    options?: GetPendingAccountTransactionsByPubkeyOptionalParams,\n  ): Promise<GetPendingAccountTransactionsByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getPendingAccountTransactionsByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get auction entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getAuctionEntryByName(\n    name: string,\n    options?: GetAuctionEntryByNameOptionalParams,\n  ): Promise<GetAuctionEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getAuctionEntryByNameOperationSpec,\n    );\n  }\n\n  /**\n   * Get channel by public key\n   * @param pubkey The pubkey of the channel\n   * @param options The options parameters.\n   */\n  getChannelByPubkey(\n    pubkey: string,\n    options?: GetChannelByPubkeyOptionalParams,\n  ): Promise<GetChannelByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getChannelByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get a contract by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContract(\n    pubkey: string,\n    options?: GetContractOptionalParams,\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get contract code by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractCode(\n    pubkey: string,\n    options?: GetContractCodeOptionalParams,\n  ): Promise<GetContractCodeResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractCodeOperationSpec,\n    );\n  }\n\n  /**\n   * Get a proof of inclusion for a contract\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractPoI(\n    pubkey: string,\n    options?: GetContractPoIOptionalParams,\n  ): Promise<GetContractPoIResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractPoIOperationSpec,\n    );\n  }\n\n  /**\n   * Get the currency metadata of a node\n   * @param options The options parameters.\n   */\n  getCurrency(\n    options?: GetCurrencyOptionalParams,\n  ): Promise<GetCurrencyResponse> {\n    return this.sendOperationRequest({ options }, getCurrencyOperationSpec);\n  }\n\n  /**\n   * Dry-run unsigned transactions on top of a given block. Supports all TXs except GAMetaTx, PayingForTx\n   * and OffchainTx. The maximum gas limit of all calls is capped. The maximum gas limit per request is a\n   * global node setting. Since DryRunCallReq object do not have a mandatory gas field, if not set a\n   * default value of 1000000 is being used instead.\n   * @param body transactions\n   * @param options The options parameters.\n   */\n  protectedDryRunTxs(\n    body: DryRunInput,\n    options?: ProtectedDryRunTxsOptionalParams,\n  ): Promise<ProtectedDryRunTxsResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      protectedDryRunTxsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the current generation\n   * @param options The options parameters.\n   */\n  getCurrentGeneration(\n    options?: GetCurrentGenerationOptionalParams,\n  ): Promise<GetCurrentGenerationResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentGenerationOperationSpec,\n    );\n  }\n\n  /**\n   * Get a generation by hash\n   * @param hash The hash of the key block\n   * @param options The options parameters.\n   */\n  getGenerationByHash(\n    hash: string,\n    options?: GetGenerationByHashOptionalParams,\n  ): Promise<GetGenerationByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getGenerationByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get a generation by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getGenerationByHeight(\n    height: number,\n    options?: GetGenerationByHeightOptionalParams,\n  ): Promise<GetGenerationByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getGenerationByHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get the top header (either key or micro block)\n   * @param options The options parameters.\n   */\n  getTopHeader(\n    options?: GetTopHeaderOptionalParams,\n  ): Promise<GetTopHeaderResponse> {\n    return this.sendOperationRequest({ options }, getTopHeaderOperationSpec);\n  }\n\n  /**\n   * Get the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlock(\n    options?: GetCurrentKeyBlockOptionalParams,\n  ): Promise<GetCurrentKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get the hash of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHash(\n    options?: GetCurrentKeyBlockHashOptionalParams,\n  ): Promise<GetCurrentKeyBlockHashResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get the height of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHeight(\n    options?: GetCurrentKeyBlockHeightOptionalParams,\n  ): Promise<GetCurrentKeyBlockHeightResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get a key block by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getKeyBlockByHash(\n    hash: string,\n    options?: GetKeyBlockByHashOptionalParams,\n  ): Promise<GetKeyBlockByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getKeyBlockByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get a key block by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getKeyBlockByHeight(\n    height: number,\n    options?: GetKeyBlockByHeightOptionalParams,\n  ): Promise<GetKeyBlockByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getKeyBlockByHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get the pending key block\n   * @param options The options parameters.\n   */\n  getPendingKeyBlock(\n    options?: GetPendingKeyBlockOptionalParams,\n  ): Promise<GetPendingKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block header by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getMicroBlockHeaderByHash(\n    hash: string,\n    options?: GetMicroBlockHeaderByHashOptionalParams,\n  ): Promise<GetMicroBlockHeaderByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockHeaderByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get micro block transactions by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsByHashOptionalParams,\n  ): Promise<GetMicroBlockTransactionsByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get micro block transaction count by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsCountByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsCountByHashOptionalParams,\n  ): Promise<GetMicroBlockTransactionsCountByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsCountByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block transaction by hash and index\n   * @param hash The hash of the micro block\n   * @param index The index of the transaction in a block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionByHashAndIndex(\n    hash: string,\n    index: number,\n    options?: GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  ): Promise<GetMicroBlockTransactionByHashAndIndexResponse> {\n    return this.sendOperationRequest(\n      { hash, index, options },\n      getMicroBlockTransactionByHashAndIndexOperationSpec,\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByName(\n    name: string,\n    options?: GetNameEntryByNameOptionalParams,\n  ): Promise<GetNameEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getNameEntryByNameOperationSpec,\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param nameHash The name hash of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByNameHash(\n    nameHash: string,\n    options?: GetNameEntryByNameHashOptionalParams,\n  ): Promise<GetNameEntryByNameHashResponse> {\n    return this.sendOperationRequest(\n      { nameHash, options },\n      getNameEntryByNameHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleByPubkey(\n    pubkey: string,\n    options?: GetOracleByPubkeyOptionalParams,\n  ): Promise<GetOracleByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get oracle queries by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleQueriesByPubkey(\n    pubkey: string,\n    options?: GetOracleQueriesByPubkeyOptionalParams,\n  ): Promise<GetOracleQueriesByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleQueriesByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle query by public key and query ID\n   * @param pubkey The public key of the oracle\n   * @param queryId The ID of the query\n   * @param options The options parameters.\n   */\n  getOracleQueryByPubkeyAndQueryId(\n    pubkey: string,\n    queryId: string,\n    options?: GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  ): Promise<GetOracleQueryByPubkeyAndQueryIdResponse> {\n    return this.sendOperationRequest(\n      { pubkey, queryId, options },\n      getOracleQueryByPubkeyAndQueryIdOperationSpec,\n    );\n  }\n\n  /**\n   * Get peer public key\n   * @param options The options parameters.\n   */\n  getPeerPubkey(\n    options?: GetPeerPubkeyOptionalParams,\n  ): Promise<GetPeerPubkeyResponse> {\n    return this.sendOperationRequest({ options }, getPeerPubkeyOperationSpec);\n  }\n\n  /**\n   * Get minimum gas prices in recent blocks\n   * @param options The options parameters.\n   */\n  getRecentGasPrices(\n    options?: GetRecentGasPricesOptionalParams,\n  ): Promise<GetRecentGasPricesResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getRecentGasPricesOperationSpec,\n    );\n  }\n\n  /**\n   * Get the status of a node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get oldest keyblock hashes counting from genesis including orphans\n   * @param options The options parameters.\n   */\n  getChainEnds(\n    options?: GetChainEndsOptionalParams,\n  ): Promise<GetChainEndsResponse> {\n    return this.sendOperationRequest({ options }, getChainEndsOperationSpec);\n  }\n\n  /**\n   * Get the sync status of a node\n   * @param options The options parameters.\n   */\n  getSyncStatus(\n    options?: GetSyncStatusOptionalParams,\n  ): Promise<GetSyncStatusResponse> {\n    return this.sendOperationRequest({ options }, getSyncStatusOperationSpec);\n  }\n\n  /**\n   * Post a new transaction\n   * @param body The new transaction\n   * @param options The options parameters.\n   */\n  postTransaction(\n    body: EncodedTx,\n    options?: PostTransactionOptionalParams,\n  ): Promise<PostTransactionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      postTransactionOperationSpec,\n    );\n  }\n\n  /**\n   * Get a transaction by hash\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionByHash(\n    hash: string,\n    options?: GetTransactionByHashOptionalParams,\n  ): Promise<GetTransactionByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionByHashOperationSpec,\n    );\n  }\n\n  /**\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionInfoByHash(\n    hash: string,\n    options?: GetTransactionInfoByHashOptionalParams,\n  ): Promise<GetTransactionInfoByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionInfoByHashOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountByPubkeyAndHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountByPubkeyAndHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    410: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountNextNonceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/next-nonce\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NextNonceResponse,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.strategy],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingAccountTransactionsByPubkeyOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/accounts/{pubkey}/transactions/pending\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SignedTxs,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.pubkey],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAuctionEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/auctions/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuctionEntry,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContractObject,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/code\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ByteCode,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractPoIOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/poi\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PoI,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrencyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/currency\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Currency,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst protectedDryRunTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dry-run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DryRunResults,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    403: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getCurrentGenerationOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getGenerationByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getGenerationByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTopHeaderOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/headers/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Header,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrentKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrentKeyBlockHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/hash\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HashResponse,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrentKeyBlockHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/height\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HeightResponse,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockHeaderByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/header\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockHeader,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsCountByHashOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/micro-blocks/hash/{hash}/transactions/count\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CountResponse,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.hash],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getMicroBlockTransactionByHashAndIndexOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/micro-blocks/hash/{hash}/transactions/index/{index}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SignedTx,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.hash, Parameters.index],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getNameEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameEntryByNameHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/hash/{name_hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nameHash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegisteredOracle,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueriesByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQueries,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.fromParam,\n    Parameters.limit,\n    Parameters.typeParam,\n  ],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueryByPubkeyAndQueryIdOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/oracles/{pubkey}/queries/{query-id}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.OracleQuery,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.queryId],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPeerPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/peers/pubkey\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PeerPubKey,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getRecentGasPricesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/recent-gas-prices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"GasPricesItem\" } },\n        },\n      },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChainEndsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status/chain-ends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Sequence\", element: { type: { name: \"String\" } } },\n      },\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSyncStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/sync-status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncStatus,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst postTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PostTxResponse,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getTransactionByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionInfoByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}/info\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TxInfoObject,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    410: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","// eslint-disable-next-line max-classes-per-file\nimport { OperationOptions } from '@azure/core-client';\nimport { userAgentPolicyName, setClientRequestIdPolicyName } from '@azure/core-rest-pipeline';\nimport {\n  genRequestQueuesPolicy,\n  genCombineGetRequestsPolicy,\n  genErrorFormatterPolicy,\n  parseBigIntPolicy,\n  genVersionCheckPolicy,\n  genRetryOnFailurePolicy,\n} from './utils/autorest.js';\nimport { Node as NodeApi, NodeOptionalParams, ErrorModel } from './apis/node/index.js';\nimport { UnsupportedVersionError } from './utils/errors.js';\nimport { ConsensusProtocolVersion } from './tx/builder/constants.js';\n\ninterface NodeInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\nexport default class Node extends NodeApi {\n  /**\n   * @param url - Url for node API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the node is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false,\n      retryCount = 3,\n      retryOverallDelay = 800,\n      ...options\n    }: NodeOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    const getVersion = async (opts: OperationOptions): Promise<string> =>\n      (await this._getCachedStatus(opts)).nodeVersion;\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        ...(ignoreVersion ? [] : [genVersionCheckPolicy('node', getVersion, '7.1.0', '8.0.0')]),\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorModel) =>\n          [' ', body.reason, body.errorCode == null ? '' : ` (${body.errorCode})`].join(''),\n        ),\n      ],\n      ...options,\n    });\n    this.pipeline.addPolicy(parseBigIntPolicy, { phase: 'Deserialize' });\n    this.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n    // TODO: use instead our retry policy\n    this.pipeline.removePolicy({ name: 'defaultRetryPolicy' });\n  }\n\n  #cachedStatusPromise?: ReturnType<NodeApi['getStatus']>;\n\n  async _getCachedStatus(options?: OperationOptions): ReturnType<NodeApi['getStatus']> {\n    if (this.#cachedStatusPromise != null) return this.#cachedStatusPromise;\n    return this.getStatus(options);\n  }\n\n  override async getStatus(\n    ...args: Parameters<NodeApi['getStatus']>\n  ): ReturnType<NodeApi['getStatus']> {\n    const promise = super.getStatus(...args);\n    promise.then(\n      () => {\n        this.#cachedStatusPromise = promise;\n      },\n      () => {},\n    );\n    return promise;\n  }\n\n  /**\n   * Returns network ID provided by node.\n   * This method won't do extra requests on subsequent calls.\n   */\n  async getNetworkId(): Promise<string> {\n    return (await this._getCachedStatus()).networkId;\n  }\n\n  async getNodeInfo(): Promise<NodeInfo> {\n    const {\n      nodeVersion,\n      networkId: nodeNetworkId,\n      protocols,\n      topBlockHeight,\n    } = await this.getStatus();\n\n    const consensusProtocolVersion = protocols\n      .filter(({ effectiveAtHeight }) => topBlockHeight >= effectiveAtHeight)\n      .reduce((acc, p) => (p.effectiveAtHeight > acc.effectiveAtHeight ? p : acc), {\n        effectiveAtHeight: -1,\n        version: 0,\n      }).version;\n    if (ConsensusProtocolVersion[consensusProtocolVersion] == null) {\n      const version = consensusProtocolVersion.toString();\n      const versions = Object.values(ConsensusProtocolVersion)\n        .filter((el) => typeof el === 'number')\n        .map((el) => +el);\n      const geVersion = Math.min(...versions).toString();\n      const ltVersion = (Math.max(...versions) + 1).toString();\n      throw new UnsupportedVersionError('consensus protocol', version, geVersion, ltVersion);\n    }\n\n    return {\n      url: this.$host,\n      nodeNetworkId,\n      version: nodeVersion,\n      consensusProtocolVersion,\n    };\n  }\n}\n","import { Encoded } from '../utils/encoder.js';\nimport { buildTx, getSchema, unpackTx } from './builder/index.js';\nimport { Tag } from './builder/constants.js';\nimport { TransactionError, UnexpectedTsError } from '../utils/errors.js';\n\n/**\n * Returns account address that signed a transaction\n * @param transaction - transaction to get a signer of\n */\nexport default function getTransactionSignerAddress(\n  transaction: Encoded.Transaction,\n): Encoded.AccountAddress {\n  const params = unpackTx(transaction);\n  switch (params.tag) {\n    case Tag.SignedTx:\n      return getTransactionSignerAddress(buildTx(params.encodedTx));\n    case Tag.GaMetaTx:\n      return params.gaId;\n    default:\n  }\n\n  const nonce = getSchema(params.tag, params.version).find(([name]) => name === 'nonce')?.[1];\n  if (nonce == null)\n    throw new TransactionError(`Transaction doesn't have nonce: ${Tag[params.tag]}`);\n  if (!('senderKey' in nonce)) throw new UnexpectedTsError();\n  const address = params[nonce.senderKey as keyof typeof params] as unknown as string;\n  return address.replace(/^ok_/, 'ak_') as Encoded.AccountAddress;\n}\n","import { Encoded } from '../utils/encoder.js';\nimport Node from '../Node.js';\nimport CompilerBase from '../contract/compiler/Base.js';\nimport { Int } from '../tx/builder/constants.js';\nimport { AciValue, Domain } from '../utils/typed-data.js';\n\ninterface AuthData {\n  fee?: Int;\n  gasLimit?: number;\n  gasPrice?: Int;\n  callData?: Encoded.ContractBytearray;\n  sourceCode?: string;\n  args?: any[];\n}\n\n/**\n * Account is one of the three basic building blocks of an\n * {@link AeSdk} and provides access to a signing key pair.\n */\nexport default abstract class AccountBase {\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param options - Options\n   * @param options.innerTx - Sign as inner transaction for PayingFor\n   * @param options.authData - Object with gaMeta params\n   * @returns Signed transaction\n   */\n  abstract signTransaction(\n    tx: Encoded.Transaction,\n    options: {\n      innerTx?: boolean;\n      networkId?: string;\n      authData?: AuthData | ((tx: Encoded.Transaction) => Promise<AuthData>);\n      onNode?: Node;\n      onCompiler?: CompilerBase;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Transaction>;\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signMessage(\n    message: string,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Sign typed data\n   * @param data - Encoded data to sign\n   * @param aci - Type of data to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    options?: Domain & {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Signature>;\n\n  /**\n   * Sign data blob\n   * @param data - Data blob to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract sign(\n    data: string | Uint8Array,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Account address\n   */\n  readonly address!: Encoded.AccountAddress;\n\n  /**\n   * Sign delegation, works only in Ceres\n   * @param delegation - Delegation to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signDelegation(\n    delegation: Encoded.Bytearray,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Signature>;\n}\n","import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport canonicalize from 'canonicalize';\nimport { Encoded, decode } from './encoder.js';\nimport { hash, messagePrefixLength } from './crypto.js';\nimport { concatBuffers } from './other.js';\n\n/**\n * Hashes arbitrary object, can be used to inline the aci hash to contract source code\n */\nexport function hashJson(data: unknown): Buffer {\n  return hash(canonicalize(data) ?? '');\n}\n\n// TODO: move this type to calldata library https://github.com/aeternity/aepp-calldata-js/issues/215\n// based on https://github.com/aeternity/aepp-calldata-js/blob/82b5a98f9b308482627da8d7484d213e9cf87151/src/AciTypeResolver.js#L129\nexport type AciValue =\n  | 'void'\n  | 'unit'\n  | 'int'\n  | 'bool'\n  | 'string'\n  | 'bits'\n  | 'hash'\n  | 'signature'\n  | 'address'\n  | 'contract_pubkey'\n  | 'Chain.ttl'\n  | 'Chain.ga_meta_tx'\n  | 'Chain.paying_for_tx'\n  | 'Chain.base_tx'\n  | 'AENS.pointee'\n  | 'AENS.name'\n  | 'MCL_BLS12_381.fr'\n  | 'MCL_BLS12_381.fp'\n  | { 'Set.set': readonly [AciValue] }\n  | { bytes: number }\n  | { list: readonly [AciValue] }\n  | { map: readonly [AciValue, AciValue] }\n  | { tuple: readonly AciValue[] }\n  | { record: ReadonlyArray<{ name: string; type: AciValue }> }\n  | { variant: ReadonlyArray<{ [key: string]: readonly AciValue[] }> }\n  | { option: readonly [AciValue] }\n  | { oracle: readonly [AciValue, AciValue] }\n  | { oracle_query: readonly [AciValue, AciValue] };\n\nexport interface Domain {\n  name?: string;\n  version?: number;\n  networkId?: string;\n  contractAddress?: Encoded.ContractAddress;\n}\n\n/**\n * Hashes domain object, can be used to inline domain hash to contract source code\n */\nexport function hashDomain(domain: Domain): Buffer {\n  const domainAci = {\n    record: [\n      {\n        name: 'name',\n        type: { option: ['string'] },\n      },\n      {\n        name: 'version',\n        type: { option: ['int'] },\n      },\n      {\n        name: 'networkId',\n        type: { option: ['string'] },\n      },\n      {\n        name: 'contractAddress',\n        type: { option: ['contract_pubkey'] },\n      },\n    ],\n  } as const;\n  const domainType = new TypeResolver().resolveType(domainAci, {});\n  const fateValue = new ContractByteArrayEncoder().encodeWithType(domain, domainType);\n  return hash(decode(fateValue));\n}\n\nexport function hashTypedData(\n  data: Encoded.ContractBytearray,\n  aci: AciValue,\n  domain: Domain,\n): Buffer {\n  return hash(\n    concatBuffers([\n      messagePrefixLength,\n      new Uint8Array([0]),\n      hashDomain(domain),\n      hashJson(aci),\n      hash(decode(data)),\n    ]),\n  );\n}\n","import nacl from 'tweetnacl';\nimport AccountBase from './Base.js';\nimport { hash, messageToHash, messagePrefixLength } from '../utils/crypto.js';\nimport { ArgumentError } from '../utils/errors.js';\nimport { decode, encode, Encoded, Encoding } from '../utils/encoder.js';\nimport { concatBuffers } from '../utils/other.js';\nimport { hashTypedData, AciValue } from '../utils/typed-data.js';\nimport { buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\nexport function getBufferToSign(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  innerTx: boolean,\n): Uint8Array {\n  const prefixes = [networkId];\n  if (innerTx) prefixes.push('inner_tx');\n  const rlpBinaryTx = decode(transaction);\n  return concatBuffers([Buffer.from(prefixes.join('-')), hash(rlpBinaryTx)]);\n}\n\n/**\n * In-memory account class\n */\nexport default class AccountMemory extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  readonly #secretKeyDecoded: Uint8Array;\n\n  /**\n   * @param secretKey - Secret key\n   */\n  constructor(public readonly secretKey: Encoded.AccountSecretKey) {\n    super();\n    const keyPair = nacl.sign.keyPair.fromSeed(decode(secretKey));\n    this.#secretKeyDecoded = keyPair.secretKey;\n    this.address = encode(keyPair.publicKey, Encoding.AccountAddress);\n  }\n\n  /**\n   * Generates a new AccountMemory using a random secret key\n   */\n  static generate(): AccountMemory {\n    const secretKey = encode(nacl.randomBytes(32), Encoding.AccountSecretKey);\n    return new AccountMemory(secretKey);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override async sign(data: string | Uint8Array, options?: any): Promise<Uint8Array> {\n    return nacl.sign.detached(Buffer.from(data), this.#secretKeyDecoded);\n  }\n\n  override async signTransaction(\n    transaction: Encoded.Transaction,\n    { innerTx, networkId, ...options }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) {\n      throw new ArgumentError('networkId', 'provided', networkId);\n    }\n    const rlpBinaryTx = decode(transaction);\n    const txWithNetworkId = getBufferToSign(transaction, networkId, innerTx === true);\n\n    const signatures = [await this.sign(txWithNetworkId, options)];\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rlpBinaryTx, signatures });\n  }\n\n  override async signMessage(message: string, options?: any): Promise<Uint8Array> {\n    return this.sign(messageToHash(message), options);\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    {\n      name,\n      version,\n      networkId,\n      contractAddress,\n      ...options\n    }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const dHash = hashTypedData(data, aci, {\n      name,\n      version,\n      networkId,\n      contractAddress,\n    });\n    const signature = await this.sign(dHash, options);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signDelegation(\n    delegation: Encoded.Bytearray,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      messagePrefixLength,\n      new Uint8Array([1]),\n      Buffer.from(networkId),\n      decode(delegation),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n}\n","import { Encoded } from '../utils/encoder.js';\nimport { buildTx, buildTxHash, unpackTx } from './builder/index.js';\nimport { Tag } from './builder/constants.js';\nimport { verify } from '../utils/crypto.js';\nimport { getBufferToSign } from '../account/Memory.js';\nimport { IllegalArgumentError, InternalError, TransactionError } from '../utils/errors.js';\nimport Node from '../Node.js';\nimport getTransactionSignerAddress from './transaction-signer.js';\n\n/**\n * Calculates the cost of transaction execution\n * Provides an upper cost of contract-call-related transactions because of `gasLimit`.\n * Also assumes that oracle query fee is 0 unless it is provided in options.\n *\n * The idea is that if you need to show transaction details with some accuracy you can define\n * expense fields that you want to show separately. And to show `getExecutionCost` result as a fee,\n * subtracting all fields shown separately.\n *\n * @example\n * ```vue\n * <template>\n * Amount: {{ txUnpacked.amount }}\n * Name fee: {{ txUnpacked.nameFee }}\n * Other fees: {{ getExecutionCost(txEncoded) - txUnpacked.amount - txUnpacked.nameFee }}\n * </template>\n * ```\n *\n * Doing this way you won't worry to show wrong fee for a transaction you may not support. Because\n * the SDK calculates the overall price of any transaction on its side.\n *\n * @param transaction - Transaction to calculate the cost of\n * @param options - Options\n * @param options.innerTx - Should be provided if transaction wrapped with Tag.PayingForTx\n * @param options.gasUsed - Amount of gas actually used to make calculation more accurate\n * @param options.queryFee - Oracle query fee\n * @param options.isInitiator - Is transaction signer an initiator of state channel\n */\nexport function getExecutionCost(\n  transaction: Encoded.Transaction,\n  {\n    innerTx,\n    gasUsed,\n    queryFee,\n    isInitiator,\n  }: {\n    innerTx?: 'fee-payer' | 'freeloader';\n    gasUsed?: number;\n    queryFee?: string;\n    isInitiator?: boolean;\n  } = {},\n): bigint {\n  const params = unpackTx(transaction);\n  if (params.tag === Tag.SignedTx) {\n    throw new IllegalArgumentError(\n      \"Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead\",\n    );\n  }\n\n  let res = 0n;\n  if ('fee' in params && innerTx !== 'freeloader') {\n    res += BigInt(params.fee);\n  }\n  if (params.tag === Tag.NameClaimTx) {\n    res += BigInt(params.nameFee);\n  }\n  if (params.tag === Tag.OracleQueryTx) {\n    res += BigInt(params.queryFee);\n  }\n  if (params.tag === Tag.OracleResponseTx) {\n    res -= BigInt(queryFee ?? 0);\n  }\n  if (params.tag === Tag.ChannelSettleTx) {\n    if (isInitiator === true) res -= BigInt(params.initiatorAmountFinal);\n    if (isInitiator === false) res -= BigInt(params.responderAmountFinal);\n  }\n  if (\n    (params.tag === Tag.SpendTx ||\n      params.tag === Tag.ContractCreateTx ||\n      params.tag === Tag.ContractCallTx ||\n      params.tag === Tag.ChannelDepositTx) &&\n    innerTx !== 'fee-payer'\n  ) {\n    res += BigInt(params.amount);\n  }\n  if (params.tag === Tag.ContractCreateTx) res += BigInt(params.deposit);\n  if (\n    (params.tag === Tag.ContractCreateTx ||\n      params.tag === Tag.ContractCallTx ||\n      params.tag === Tag.GaAttachTx ||\n      params.tag === Tag.GaMetaTx) &&\n    innerTx !== 'freeloader'\n  ) {\n    res += BigInt(params.gasPrice) * BigInt(gasUsed ?? params.gasLimit);\n  }\n  if (params.tag === Tag.GaMetaTx || params.tag === Tag.PayingForTx) {\n    res += getExecutionCost(\n      buildTx(params.tx.encodedTx),\n      params.tag === Tag.PayingForTx ? { innerTx: 'fee-payer' } : {},\n    );\n  }\n  return res;\n}\n\n/**\n * Calculates the cost of signed transaction execution\n * @param transaction - Transaction to calculate the cost of\n * @param networkId - Network id used to sign the transaction\n * @param options - Options\n */\nexport function getExecutionCostBySignedTx(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  options?: Omit<Parameters<typeof getExecutionCost>[1], 'innerTx'>,\n): bigint {\n  const params = unpackTx(transaction, Tag.SignedTx);\n  if (params.encodedTx.tag === Tag.GaMetaTx) {\n    return getExecutionCost(buildTx(params.encodedTx), options);\n  }\n\n  const tx = buildTx(params.encodedTx);\n  const address = getTransactionSignerAddress(tx);\n  const [isInnerTx, isNotInnerTx] = [true, false].map((f) =>\n    verify(getBufferToSign(tx, networkId, f), params.signatures[0], address),\n  );\n  if (!isInnerTx && !isNotInnerTx) throw new TransactionError(\"Can't verify signature\");\n  return getExecutionCost(buildTx(params.encodedTx), {\n    ...(isInnerTx && { innerTx: 'freeloader' }),\n    ...options,\n  });\n}\n\n/**\n * Calculates the cost of signed and not signed transaction execution using node\n * @param transaction - Transaction to calculate the cost of\n * @param node - Node to use\n * @param options - Options\n * @param options.isMined - Is transaction already mined or not\n */\nexport async function getExecutionCostUsingNode(\n  transaction: Encoded.Transaction,\n  node: Node,\n  { isMined, ...options }: { isMined?: boolean } & Parameters<typeof getExecutionCost>[1] = {},\n): Promise<bigint> {\n  let params = unpackTx(transaction);\n  const isSignedTx = params.tag === Tag.SignedTx;\n  const txHash = isSignedTx && isMined === true && buildTxHash(transaction);\n  if (params.tag === Tag.SignedTx) params = params.encodedTx;\n\n  // TODO: set gasUsed for PayingForTx after solving https://github.com/aeternity/aeternity/issues/4087\n  if (\n    options.gasUsed == null &&\n    txHash !== false &&\n    [Tag.ContractCreateTx, Tag.ContractCallTx, Tag.GaAttachTx, Tag.GaMetaTx].includes(params.tag)\n  ) {\n    const { callInfo, gaInfo } = await node.getTransactionInfoByHash(txHash);\n    const combinedInfo = callInfo ?? gaInfo;\n    if (combinedInfo == null) {\n      throw new InternalError(`callInfo and gaInfo is not available for transaction ${txHash}`);\n    }\n    options.gasUsed = combinedInfo.gasUsed;\n  }\n\n  if (options.queryFee == null && Tag.OracleResponseTx === params.tag) {\n    options.queryFee = (await node.getOracleByPubkey(params.oracleId)).queryFee.toString();\n  }\n\n  if (options.isInitiator == null && Tag.ChannelSettleTx === params.tag && isMined !== true) {\n    const { initiatorId } = await node.getChannelByPubkey(params.channelId);\n    options.isInitiator = params.fromId === initiatorId;\n  }\n\n  return isSignedTx\n    ? getExecutionCostBySignedTx(transaction, await node.getNetworkId(), options)\n    : getExecutionCost(transaction, options);\n}\n","import { RestError } from '@azure/core-rest-pipeline';\nimport { hash, isAddressValid, verify } from '../utils/crypto.js';\nimport { TxUnpacked } from './builder/schema.generated.js';\nimport { CtVersion, ProtocolToVmAbi } from './builder/field-types/ct-version.js';\nimport { Tag, ConsensusProtocolVersion } from './builder/constants.js';\nimport { buildTx, unpackTx } from './builder/index.js';\nimport { concatBuffers, isAccountNotFoundError } from '../utils/other.js';\nimport { Encoded, Encoding, decode } from '../utils/encoder.js';\nimport Node from '../Node.js';\nimport { Account } from '../apis/node/index.js';\nimport { genAggressiveCacheGetResponsesPolicy } from '../utils/autorest.js';\nimport { UnexpectedTsError } from '../utils/errors.js';\nimport getTransactionSignerAddress from './transaction-signer.js';\nimport { getExecutionCostUsingNode } from './execution-cost.js';\n\nexport interface ValidatorResult {\n  message: string;\n  key: string;\n  checkedKeys: string[];\n}\n\ntype Validator = (\n  tx: TxUnpacked,\n  options: {\n    // TODO: remove after fixing node types\n    account: Account & { id: Encoded.AccountAddress };\n    nodeNetworkId: string;\n    parentTxTypes: Tag[];\n    node: Node;\n    height: number;\n    consensusProtocolVersion: ConsensusProtocolVersion;\n  },\n) => ValidatorResult[] | Promise<ValidatorResult[]>;\n\nconst validators: Validator[] = [];\n\nasync function verifyTransactionInternal(\n  tx: TxUnpacked,\n  node: Node,\n  parentTxTypes: Tag[],\n): Promise<ValidatorResult[]> {\n  const address = getTransactionSignerAddress(buildTx(tx));\n  const [account, { height }, { consensusProtocolVersion, nodeNetworkId }] = await Promise.all([\n    node\n      .getAccountByPubkey(address)\n      .catch((error) => {\n        if (!isAccountNotFoundError(error)) throw error;\n        return { id: address, balance: 0n, nonce: 0 };\n      })\n      // TODO: remove after fixing https://github.com/aeternity/aepp-sdk-js/issues/1537\n      .then((acc) => ({ ...acc, id: acc.id as Encoded.AccountAddress })),\n    node.getCurrentKeyBlockHeight(), // TODO: don't request height on each validation, use caching\n    node.getNodeInfo(),\n  ]);\n\n  return (\n    await Promise.all(\n      validators.map(async (v) =>\n        v(tx, {\n          node,\n          account,\n          height,\n          consensusProtocolVersion,\n          nodeNetworkId,\n          parentTxTypes,\n        }),\n      ),\n    )\n  ).flat();\n}\n\n/**\n * Transaction Validator\n * This function validates some transaction properties,\n * to make sure it can be posted it to the chain\n * @category transaction builder\n * @param transaction - Base64Check-encoded transaction\n * @param nodeNotCached - Node to validate transaction against\n * @returns Array with verification errors\n * @example const errors = await verifyTransaction(transaction, node)\n */\nexport default async function verifyTransaction(\n  transaction: Parameters<typeof unpackTx>[0],\n  nodeNotCached: Node,\n): Promise<ValidatorResult[]> {\n  const pipeline = nodeNotCached.pipeline.clone();\n  pipeline.removePolicy({ name: 'parse-big-int' });\n  const node = new Node(nodeNotCached.$host, {\n    ignoreVersion: true,\n    pipeline,\n    additionalPolicies: [genAggressiveCacheGetResponsesPolicy()],\n  });\n  return verifyTransactionInternal(unpackTx(transaction), node, []);\n}\n\nvalidators.push(\n  (tx, { account, nodeNetworkId, parentTxTypes }) => {\n    if (tx.tag !== Tag.SignedTx) return [];\n    const { encodedTx, signatures } = tx;\n    if ((encodedTx ?? signatures) == null) return [];\n    if (signatures.length !== 1) return []; // TODO: Support multisignature like in state channels\n    const prefix = Buffer.from(\n      [nodeNetworkId, ...(parentTxTypes.includes(Tag.PayingForTx) ? ['inner_tx'] : [])].join('-'),\n    );\n    const txBinary = decode(buildTx(encodedTx));\n    const txWithNetworkId = concatBuffers([prefix, txBinary]);\n    const txHashWithNetworkId = concatBuffers([prefix, hash(txBinary)]);\n    if (\n      verify(txWithNetworkId, signatures[0], account.id) ||\n      verify(txHashWithNetworkId, signatures[0], account.id)\n    )\n      return [];\n    return [\n      {\n        message:\n          'Signature cannot be verified, please ensure that you transaction have' +\n          ' the correct prefix and the correct private key for the sender address',\n        key: 'InvalidSignature',\n        checkedKeys: ['encodedTx', 'signatures'],\n      },\n    ];\n  },\n  async (tx, { node, parentTxTypes }) => {\n    let nestedTx;\n    if ('encodedTx' in tx) nestedTx = tx.encodedTx;\n    if ('tx' in tx) nestedTx = tx.tx;\n    if (nestedTx == null) return [];\n    return verifyTransactionInternal(nestedTx, node, [...parentTxTypes, tx.tag]);\n  },\n  (tx, { height }) => {\n    if (!('ttl' in tx)) return [];\n    if (tx.ttl === 0 || tx.ttl > height) return [];\n    return [\n      {\n        message: `TTL ${tx.ttl} is already expired, current height is ${height}`,\n        key: 'ExpiredTTL',\n        checkedKeys: ['ttl'],\n      },\n    ];\n  },\n  async (tx, { account, parentTxTypes, node }) => {\n    if (parentTxTypes.length !== 0) return [];\n    const cost = await getExecutionCostUsingNode(buildTx(tx), node).catch(() => 0n);\n    if (cost <= account.balance) return [];\n    return [\n      {\n        message: `Account balance ${account.balance} is not enough to execute the transaction that costs ${cost}`,\n        key: 'InsufficientBalance',\n        checkedKeys: ['amount', 'fee', 'nameFee', 'gasLimit', 'gasPrice'],\n      },\n    ];\n  },\n  async (tx, { node }) => {\n    if (tx.tag !== Tag.SpendTx || isAddressValid(tx.recipientId, Encoding.Name)) return [];\n    const recipient = await node.getAccountByPubkey(tx.recipientId).catch((error) => {\n      if (!isAccountNotFoundError(error)) throw error;\n      return null;\n    });\n    if (recipient == null || recipient.payable === true) return [];\n    return [\n      {\n        message: 'Recipient account is not payable',\n        key: 'RecipientAccountNotPayable',\n        checkedKeys: ['recipientId'],\n      },\n    ];\n  },\n  (tx, { account }) => {\n    let message;\n    if (tx.tag === Tag.SignedTx && account.kind === 'generalized' && tx.signatures.length !== 0) {\n      message = \"Generalized account can't be used to generate SignedTx with signatures\";\n    }\n    if (tx.tag === Tag.GaMetaTx && account.kind === 'basic') {\n      message = \"Basic account can't be used to generate GaMetaTx\";\n    }\n    if (message == null) return [];\n    return [{ message, key: 'InvalidAccountType', checkedKeys: ['tag'] }];\n  },\n  // TODO: revert nonce check\n  // TODO: ensure nonce valid when paying for own tx\n  (tx, { consensusProtocolVersion }) => {\n    const oracleCall = Tag.OracleRegisterTx === tx.tag;\n    const contractCreate = Tag.ContractCreateTx === tx.tag || Tag.GaAttachTx === tx.tag;\n    const contractCall = Tag.ContractCallTx === tx.tag || Tag.GaMetaTx === tx.tag;\n    const type =\n      (oracleCall ? 'oracle-call' : null) ??\n      (contractCreate ? 'contract-create' : null) ??\n      (contractCall ? 'contract-call' : null);\n    if (type == null) return [];\n    const protocol = ProtocolToVmAbi[consensusProtocolVersion][type] as {\n      abiVersion: readonly any[];\n      vmVersion: readonly any[];\n    };\n\n    let ctVersion: Partial<CtVersion> | undefined;\n    if ('abiVersion' in tx) ctVersion = { abiVersion: tx.abiVersion };\n    if ('ctVersion' in tx) ctVersion = tx.ctVersion;\n    if (ctVersion == null) throw new UnexpectedTsError();\n    if (\n      !protocol.abiVersion.includes(ctVersion.abiVersion) ||\n      (contractCreate && !protocol.vmVersion.includes(ctVersion.vmVersion))\n    ) {\n      return [\n        {\n          message: `ABI/VM version ${JSON.stringify(ctVersion)} is wrong, supported is: ${JSON.stringify(protocol)}`,\n          key: 'VmAndAbiVersionMismatch',\n          checkedKeys: ['ctVersion', 'abiVersion'],\n        },\n      ];\n    }\n    return [];\n  },\n  async (tx, { node }) => {\n    if (Tag.ContractCallTx !== tx.tag) return [];\n    // TODO: remove after solving https://github.com/aeternity/aeternity/issues/3669\n    if (tx.contractId.startsWith('nm_')) return [];\n    try {\n      const { active } = await node.getContract(tx.contractId);\n      if (active) return [];\n      return [\n        {\n          message: `Contract ${tx.contractId} is not active`,\n          key: 'ContractNotActive',\n          checkedKeys: ['contractId'],\n        },\n      ];\n    } catch (error) {\n      if (!(error instanceof RestError) || error.response?.bodyAsText == null) throw error;\n      return [\n        {\n          message: JSON.parse(error.response.bodyAsText).reason, // TODO: use parsedBody instead\n          key: 'ContractNotFound',\n          checkedKeys: ['contractId'],\n        },\n      ];\n    }\n  },\n);\n","import verifyTransaction, { ValidatorResult } from './tx/validator.js';\nimport { ensureError } from './utils/other.js';\nimport { TransactionError } from './utils/errors.js';\nimport Node from './Node.js';\nimport { SignedTx } from './apis/node/index.js';\nimport { Encoded } from './utils/encoder.js';\nimport AccountBase from './account/Base.js';\nimport { buildTxHash } from './tx/builder/index.js';\nimport { poll, waitForTxConfirm } from './chain.js';\n\n/**\n * @category exception\n */\nexport class InvalidTxError extends TransactionError {\n  validation: ValidatorResult[];\n\n  transaction: Encoded.Transaction;\n\n  constructor(message: string, validation: ValidatorResult[], transaction: Encoded.Transaction) {\n    super(message);\n    this.name = 'InvalidTxError';\n    this.validation = validation;\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Signs and submits transaction for mining\n * @category chain\n * @param txUnsigned - Transaction to sign and submit\n * @param options - Options\n * @returns Transaction details\n */\nexport async function sendTransaction(\n  txUnsigned: Encoded.Transaction,\n  {\n    onNode,\n    onAccount,\n    verify = true,\n    waitMined = true,\n    confirm,\n    innerTx,\n    ...options\n  }: SendTransactionOptions,\n): Promise<SendTransactionReturnType> {\n  const tx = await onAccount.signTransaction(txUnsigned, {\n    ...options,\n    onNode,\n    innerTx,\n    networkId: await onNode.getNetworkId(),\n  });\n\n  if (innerTx === true) return { hash: buildTxHash(tx), rawTx: tx };\n\n  if (verify) {\n    const validation = await verifyTransaction(tx, onNode);\n    if (validation.length > 0) {\n      const message = `Transaction verification errors: ${validation\n        .map((v: { message: string }) => v.message)\n        .join(', ')}`;\n      throw new InvalidTxError(message, validation, tx);\n    }\n  }\n\n  try {\n    let __queue;\n    try {\n      __queue = onAccount != null ? `tx-${onAccount.address}` : null;\n    } catch (error) {\n      __queue = null;\n    }\n    const { txHash } = await onNode.postTransaction(\n      { tx },\n      {\n        requestOptions: {\n          customHeaders: {\n            // TODO: remove __retry-code after fixing https://github.com/aeternity/aeternity/issues/3803\n            '__retry-code': '400',\n            ...(__queue != null ? { __queue } : {}),\n          },\n        },\n      },\n    );\n\n    if (waitMined) {\n      const pollResult = await poll(txHash, { onNode, ...options });\n      const txData = {\n        ...pollResult,\n        hash: pollResult.hash as Encoded.TxHash,\n        rawTx: tx,\n      };\n      // wait for transaction confirmation\n      if (confirm != null && +confirm > 0) {\n        const c = typeof confirm === 'boolean' ? undefined : confirm;\n        return {\n          ...txData,\n          confirmationHeight: await waitForTxConfirm(txHash, { onNode, confirm: c, ...options }),\n        };\n      }\n      return txData;\n    }\n    return { hash: txHash, rawTx: tx };\n  } catch (error) {\n    ensureError(error);\n    throw Object.assign(error, {\n      rawTx: tx,\n      verifyTx: async () => verifyTransaction(tx, onNode),\n    });\n  }\n}\n\ntype SendTransactionOptionsType = {\n  /**\n   * Node to use\n   */\n  onNode: Node;\n  /**\n   * Account to use\n   */\n  onAccount: AccountBase;\n  /**\n   * Verify transaction before broadcast, throw error if not\n   */\n  verify?: boolean;\n  /**\n   * Ensure that transaction get into block\n   */\n  waitMined?: boolean;\n  /**\n   * Number of micro blocks that should be mined after tx get included\n   */\n  confirm?: boolean | number;\n} & Parameters<typeof poll>[1] &\n  Omit<Parameters<typeof waitForTxConfirm>[1], 'confirm'> &\n  Parameters<AccountBase['signTransaction']>[1];\nexport interface SendTransactionOptions extends SendTransactionOptionsType {}\ninterface SendTransactionReturnType extends Partial<SignedTx> {\n  hash: Encoded.TxHash;\n  // TODO: use `SignedTx.encodedTx` instead\n  rawTx: Encoded.Transaction;\n  confirmationHeight?: number;\n}\n","import canonicalize from 'canonicalize';\nimport AccountBase from '../account/Base.js';\nimport { Encoded, Encoding, decode, encode } from './encoder.js';\nimport { verify } from './crypto.js';\nimport { ArgumentError, InvalidSignatureError } from './errors.js';\n\n// TODO: use Buffer.from(data, 'base64url') after solving https://github.com/feross/buffer/issues/309\nconst toBase64Url = (data: Buffer | Uint8Array | string): string =>\n  Buffer.from(data).toString('base64').replaceAll('/', '_').replaceAll('+', '-').replace(/=+$/, '');\n\nconst fromBase64Url = (data: string): Buffer =>\n  Buffer.from(data.replaceAll('_', '/').replaceAll('-', '+'), 'base64');\n\nconst objectToBase64Url = (data: any): string => toBase64Url(canonicalize(data) ?? '');\n\nconst header = 'eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9'; // objectToBase64Url({ alg: 'EdDSA', typ: 'JWT' })\n\n/**\n * JWT including specific header\n * @category JWT\n */\nexport type Jwt = `${typeof header}.${string}.${string}`;\n\n/**\n * Generate a signed JWT\n * Provide `\"sub_jwk\": undefined` in payload to omit signer public key added by default.\n * @param originalPayload - Payload to sign\n * @param account - Account to sign by\n * @category JWT\n */\nexport async function signJwt(originalPayload: any, account: AccountBase): Promise<Jwt> {\n  const payload = { ...originalPayload };\n  if (!('sub_jwk' in payload)) {\n    payload.sub_jwk = {\n      kty: 'OKP',\n      crv: 'Ed25519',\n      x: toBase64Url(decode(account.address)),\n    };\n  }\n  if (payload.sub_jwk === undefined) delete payload.sub_jwk;\n  const body = `${header}.${objectToBase64Url(payload)}` as const;\n  const signature = await account.sign(body);\n  return `${body}.${toBase64Url(signature)}`;\n}\n\n/**\n * Unpack JWT. It will check signature if address or \"sub_jwk\" provided.\n * @param jwt - JWT to unpack\n * @param address - Address to check signature\n * @category JWT\n */\nexport function unpackJwt(\n  jwt: Jwt,\n  address?: Encoded.AccountAddress,\n): {\n  /**\n   * JWT payload as object\n   */\n  payload: any;\n  /**\n   * Undefined returned in case signature is not checked\n   */\n  signer: Encoded.AccountAddress | undefined;\n} {\n  const components = jwt.split('.');\n  if (components.length !== 3)\n    throw new ArgumentError('JWT components count', 3, components.length);\n  const [h, payloadEncoded, signature] = components;\n  if (h !== header) throw new ArgumentError('JWT header', header, h);\n  const payload = JSON.parse(fromBase64Url(payloadEncoded).toString());\n  const jwk = payload.sub_jwk ?? {};\n  const signer =\n    jwk.x == null || jwk.kty !== 'OKP' || jwk.crv !== 'Ed25519'\n      ? address\n      : encode(fromBase64Url(jwk.x), Encoding.AccountAddress);\n  if (address != null && signer !== address) {\n    throw new ArgumentError('address', `${signer} (\"sub_jwk\")`, address);\n  }\n  if (\n    signer != null &&\n    !verify(Buffer.from(`${h}.${payloadEncoded}`), fromBase64Url(signature), signer)\n  ) {\n    throw new InvalidSignatureError(`JWT is not signed by ${signer}`);\n  }\n  return { payload, signer };\n}\n\n/**\n * Check is string a JWT or not. Use to validate the user input.\n * @param maybeJwt - A string to check\n * @returns True if argument is a JWT\n * @category JWT\n */\nexport function isJwt(maybeJwt: string): maybeJwt is Jwt {\n  try {\n    unpackJwt(maybeJwt as Jwt);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Throws an error if argument is not JWT. Use to ensure that a value is JWT.\n * @param maybeJwt - A string to check\n * @category JWT\n */\nexport function ensureJwt(maybeJwt: string): asserts maybeJwt is Jwt {\n  unpackJwt(maybeJwt as Jwt);\n}\n\n/**\n * Check is JWT signed by address from arguments or \"sub_jwk\"\n * @param jwt - JWT to check\n * @param address - Address to check signature\n * @category JWT\n */\nexport function verifyJwt(jwt: Jwt, address?: Encoded.AccountAddress): boolean {\n  try {\n    const { signer } = unpackJwt(jwt, address);\n    return signer != null;\n  } catch (error) {\n    return false;\n  }\n}\n","import SchemaTypes from '../SchemaTypes.js';\nimport address from '../field-types/address.js';\nimport nameId from '../field-types/name-id.js';\nimport shortUIntConst from '../field-types/short-u-int-const.js';\nimport { Encoded, Encoding, decode, encode } from '../../../utils/encoder.js';\n\n/**\n * @category delegation signature\n */\nexport enum DelegationTag {\n  /**\n   * Delegation of all AENS names to a contract\n   */\n  AensWildcard = 1,\n  /**\n   * Delegation of an AENS name to a contract\n   */\n  AensName = 2,\n  /**\n   * Delegation of AENS preclaim to a contract\n   */\n  AensPreclaim = 3,\n  /**\n   * Delegation of oracle operations to a contract\n   */\n  Oracle = 4,\n  /**\n   * Delegation of oracle query to a contract\n   */\n  OracleResponse = 5,\n}\n\nconst oracleAddressField = address(Encoding.OracleAddress);\n/**\n * Oracle query ID to reply by a contract\n */\nconst queryIdField = {\n  serialize(value: Encoded.OracleQueryId): Buffer {\n    return oracleAddressField.serialize(encode(decode(value), Encoding.OracleAddress));\n  },\n  deserialize(value: Buffer): Encoded.OracleQueryId {\n    return encode(decode(oracleAddressField.deserialize(value)), Encoding.OracleQueryId);\n  },\n} as const;\n\n/**\n * Address of a contract to delegate permissions to\n */\nconst contractAddress = address(Encoding.ContractAddress);\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/8a9d1d1206174627f6aaef86159dc9c643080653/contracts/fate.md#from-ceres-serialized-signature-data}\n */\nexport const schemas = [\n  {\n    tag: shortUIntConst(DelegationTag.AensWildcard),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.AensName),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    /**\n     * AENS name to manage by a contract\n     */\n    nameId,\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.AensPreclaim),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.Oracle),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.OracleResponse),\n    version: shortUIntConst(1, true),\n    queryId: queryIdField,\n    contractAddress,\n  },\n] as const;\n\ntype Schemas = SchemaTypes<typeof schemas>;\nexport type DlgParams = Schemas['TxParams'];\nexport type DlgUnpacked = Schemas['TxUnpacked'];\n","import { Encoded, Encoding } from '../../../utils/encoder.js';\nimport { packRecord, unpackRecord } from '../common.js';\nimport { DelegationTag, schemas } from './schema.js';\nimport { DlgParams, DlgUnpacked } from './schema.generated.js';\n\n/**\n * Pack delegation\n * @category delegation signature\n * @param params - Params of delegation\n * @returns Encoded delegation\n */\nexport function packDelegation(params: DlgParams): Encoded.Bytearray {\n  return packRecord(schemas, DelegationTag, params, {}, Encoding.Bytearray);\n}\n\n/**\n * Unpack delegation\n * @category delegation signature\n * @param encoded - Encoded delegation\n * @param expectedTag - Expected delegation signature type\n * @returns Params of delegation\n */\nexport function unpackDelegation<T extends DelegationTag>(\n  encoded: Encoded.Bytearray,\n  expectedTag?: T,\n): DlgUnpacked & { tag: T } {\n  return unpackRecord(schemas, DelegationTag, encoded, expectedTag, {}) as any;\n}\n","/**\n * Aens methods - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n */\n\nimport { BigNumber } from 'bignumber.js';\nimport { genSalt, isAddressValid } from './utils/crypto.js';\nimport { commitmentHash, isAuctionName } from './tx/builder/helpers.js';\nimport { Tag, AensName } from './tx/builder/constants.js';\nimport { Encoded, Encoding } from './utils/encoder.js';\nimport { LogicError } from './utils/errors.js';\nimport { getName } from './chain.js';\nimport { sendTransaction, SendTransactionOptions } from './send-transaction.js';\nimport { Optional } from './utils/other.js';\nimport { buildTxAsync, BuildTxOptions } from './tx/builder/index.js';\nimport Node from './Node.js';\nimport AccountBase from './account/Base.js';\nimport { AddressEncodings } from './tx/builder/field-types/address.js';\n\ninterface NameRevokeOptions\n  extends BuildTxOptions<Tag.NameRevokeTx, 'nameId' | 'accountId'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\ninterface KeyPointers {\n  [key: string]: Encoded.Generic<AddressEncodings | Encoding.Bytearray>;\n}\n\ninterface NameUpdateOptions\n  extends BuildTxOptions<Tag.NameUpdateTx, 'nameId' | 'accountId' | 'pointers'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {\n  /**\n   * Get the pointers from the node and merge with provided ones. Pointers with the same key will be\n   * overwritten.\n   */\n  extendPointers?: boolean;\n}\n\ninterface NameTransferOptions\n  extends BuildTxOptions<Tag.NameTransferTx, 'nameId' | 'accountId' | 'recipientId'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\ninterface NamePreclaimOptions\n  extends BuildTxOptions<Tag.NamePreclaimTx, 'accountId' | 'commitmentId'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\ninterface NameClaimOptions\n  extends BuildTxOptions<Tag.NameClaimTx, 'accountId' | 'nameSalt' | 'name'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\n/**\n * @category AENS\n * @example\n * ```js\n * const name = new Name('test.chain', aeSdk.getContext())\n * ```\n */\nexport default class Name {\n  #salt?: number;\n\n  /**\n   * @param value - AENS name\n   * @param options - Options\n   * @param options.onNode - Node to use\n   * @param options.onAccount - Account to use\n   */\n  constructor(\n    public readonly value: AensName,\n    public options: { onNode: Node; onAccount: AccountBase } & Omit<\n      NameRevokeOptions &\n        NameUpdateOptions &\n        NameTransferOptions &\n        NamePreclaimOptions &\n        NameClaimOptions,\n      'version'\n    >,\n  ) {\n    this.options = options;\n  }\n\n  /**\n   * Revoke a name\n   * @param options - Options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * await name.revoke({ fee, ttl, nonce })\n   * ```\n   */\n  async revoke(options: NameRevokeOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameRevokeTx,\n      nameId: this.value,\n      accountId: opt.onAccount.address,\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Update a name\n   * @param pointers - Map of pointer keys to corresponding addresses\n   * @param options - Options\n   * @example\n   * ```js\n   * const name = 'test.chain'\n   * const channel = 'ch_2519mBs...'\n   * const pointers = {\n   *   account_pubkey: 'ak_asd23dasdas...,',\n   *   contract_pubkey: 'ct_asdf34fasdasd...',\n   *   [getDefaultPointerKey(channel)]: channel,\n   * }\n   * await name.update(pointers, { nameTtl, ttl, fee, nonce, clientTtl })\n   * ```\n   */\n  async update(\n    pointers: KeyPointers,\n    options: NameUpdateOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const { extendPointers, ...opt } = { ...this.options, ...options };\n    const allPointers = {\n      ...(extendPointers === true &&\n        Object.fromEntries(\n          (await getName(this.value, opt)).pointers.map(({ key, id }) => [key, id]),\n        )),\n      ...pointers,\n    };\n\n    const hasRawPointers = Object.values(allPointers).some((v) =>\n      isAddressValid(v, Encoding.Bytearray),\n    );\n\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameUpdateTx,\n      version: hasRawPointers ? 2 : 1,\n      nameId: this.value,\n      accountId: opt.onAccount.address,\n      pointers: Object.entries(allPointers).map(\n        ([key, id]: [string, Encoded.Generic<AddressEncodings>]) => ({ key, id }),\n      ),\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Transfer a name to another account\n   * @param address - Recipient account public key\n   * @param options - Options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * await name.transfer('ak_asd23dasdas...', { ttl, fee, nonce })\n   * ```\n   */\n  async transfer(\n    address: Encoded.AccountAddress,\n    options: NameTransferOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameTransferTx,\n      nameId: this.value,\n      accountId: opt.onAccount.address,\n      recipientId: address,\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Query the AENS name info from the node\n   * and return the object with info and predefined functions for manipulating name\n   * @param options - Options\n   * @example\n   * ```js\n   * const nameEntry = await name.getState()\n   * console.log(nameEntry.owner)\n   * ```\n   */\n  async getState(options: { onNode?: Node } = {}): Promise<\n    Awaited<ReturnType<Node['getNameEntryByName']>> & {\n      id: Encoded.Name;\n      owner: Encoded.AccountAddress;\n    }\n  > {\n    const onNode = this.options.onNode ?? options.onNode;\n    const nameEntry = await onNode.getNameEntryByName(this.value);\n    return {\n      ...nameEntry,\n      id: nameEntry.id as Encoded.Name,\n      owner: nameEntry.owner as Encoded.AccountAddress,\n    };\n  }\n\n  /**\n   *\n   * @param nameTtl - represents in number of blocks (max and default is 180000)\n   * @param options - Options\n   * @returns mined transaction details\n   */\n  async extendTtl(\n    nameTtl?: number,\n    options: Omit<Parameters<Name['update']>[1], 'extendPointers' | 'nameTtl'> = {},\n  ): ReturnType<Name['update']> {\n    return this.update({}, { ...options, nameTtl, extendPointers: true });\n  }\n\n  /**\n   * Claim a previously preclaimed registration. This can only be done after the preclaim step\n   * @param options - options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * await name.claim({ ttl, fee, nonce, nameFee })\n   * ```\n   */\n  async claim(options: NameClaimOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameClaimTx,\n      accountId: opt.onAccount.address,\n      nameSalt: this.#salt,\n      name: this.value,\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Preclaim a name. Sends a hash of the name and a random salt to the node\n   * @param options - Options\n   * @example\n   * ```js\n   * await name.preclaim({ ttl, fee, nonce })\n   * ```\n   */\n  async preclaim(options: NamePreclaimOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const salt = genSalt();\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NamePreclaimTx,\n      accountId: opt.onAccount.address,\n      commitmentId: commitmentHash(this.value, salt),\n    });\n    const result = await sendTransaction(tx, opt);\n    this.#salt = salt;\n    return result;\n  }\n\n  /**\n   * Bid to name auction\n   * @param nameFee - Name fee (bid fee)\n   * @param options - Options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * const bidFee = computeBidFee(name.value, { startFee, increment: 0.42 })\n   * await name.bid(213109412839123, { ttl, fee, nonce })\n   * ```\n   */\n  async bid(\n    nameFee: number | string | BigNumber,\n    options: Omit<NameClaimOptions, 'nameFee'> = {},\n  ): ReturnType<typeof sendTransaction> {\n    if (!isAuctionName(this.value)) {\n      throw new LogicError('This is not auction name, so cant make a bid!');\n    }\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameClaimTx,\n      accountId: opt.onAccount.address,\n      nameSalt: 0,\n      name: this.value,\n      nameFee,\n    });\n    return sendTransaction(tx, opt);\n  }\n}\n","/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n */\n\nimport { Encoder as Calldata } from '@aeternity/aepp-calldata';\nimport { Tag, AensName, DRY_RUN_ACCOUNT } from '../tx/builder/constants.js';\nimport {\n  buildContractIdByContractTx,\n  unpackTx,\n  buildTxAsync,\n  BuildTxOptions,\n  buildTxHash,\n} from '../tx/builder/index.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport {\n  MissingContractDefError,\n  MissingContractAddressError,\n  InactiveContractError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  MissingFunctionNameError,\n  InvalidMethodInvocationError,\n  NotPayableFunctionError,\n  TypeError,\n  NodeInvocationError,\n  IllegalArgumentError,\n  NoSuchContractFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  UnexpectedTsError,\n  InternalError,\n  NoWalletConnectedError,\n  ContractError,\n} from '../utils/errors.js';\nimport { hash as calcHash } from '../utils/crypto.js';\nimport {\n  ContractCallObject as NodeContractCallObject,\n  Event as NodeEvent,\n} from '../apis/node/index.js';\nimport CompilerBase, { Aci } from './compiler/Base.js';\nimport Node from '../Node.js';\nimport { getAccount, getContract, getContractByteCode, resolveName, txDryRun } from '../chain.js';\nimport { sendTransaction, SendTransactionOptions } from '../send-transaction.js';\nimport { TxUnpacked } from '../tx/builder/schema.generated.js';\nimport { Optional, isAccountNotFoundError } from '../utils/other.js';\nimport { isNameValid, produceNameId } from '../tx/builder/helpers.js';\n\ntype ContractAci = NonNullable<Aci[0]['contract']>;\ntype FunctionAci = ContractAci['functions'][0];\n\ninterface Event extends NodeEvent {\n  address: Encoded.ContractAddress;\n  data: Encoded.ContractBytearray;\n}\n\nexport interface ContractCallObject extends NodeContractCallObject {\n  returnValue: Encoded.ContractBytearray;\n  log: Event[];\n}\n\ninterface DecodedEvent {\n  name: string;\n  args: unknown[];\n  contract: {\n    name: string;\n    address: Encoded.ContractAddress;\n  };\n}\n\ntype TxData = Awaited<ReturnType<typeof sendTransaction>>;\n\ninterface SendAndProcessReturnType {\n  result?: ContractCallObject;\n  hash: TxData['hash'];\n  tx: TxUnpacked & { tag: Tag.SignedTx | Tag.ContractCallTx | Tag.ContractCreateTx };\n  txData: TxData;\n  rawTx: Encoded.Transaction;\n}\n\nexport interface ContractMethodsBase {\n  [key: string]: (...args: any[]) => any;\n}\n\ntype MethodsToContractApi<M extends ContractMethodsBase> = {\n  [Name in keyof M]: M[Name] extends (...args: infer Args) => any\n    ? (\n        ...args: [\n          ...Args,\n          ...(\n            | []\n            | [\n                Name extends 'init'\n                  ? Parameters<Contract<M>['$deploy']>[1]\n                  : Parameters<Contract<M>['$call']>[2],\n              ]\n          ),\n        ]\n      ) => ReturnType<Contract<M>['$call']>\n    : never;\n};\n\ntype ContractWithMethods<M extends ContractMethodsBase> = Contract<M> & MethodsToContractApi<M>;\n\ntype MethodNames<M extends ContractMethodsBase> = (keyof M & string) | 'init';\n\ntype MethodParameters<M extends ContractMethodsBase, Fn extends MethodNames<M>> = Fn extends 'init'\n  ? M extends { init: any }\n    ? Parameters<M['init']>\n    : []\n  : Parameters<M[Fn]>;\n\ninterface GetContractNameByEventOptions {\n  contractAddressToName?: { [key: Encoded.ContractAddress]: string };\n}\n\ninterface GetCallResultByHashReturnType<M extends ContractMethodsBase, Fn extends MethodNames<M>> {\n  decodedResult: ReturnType<M[Fn]>;\n  decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for\n * creating a reference to already deployed contracts\n * @category contract\n * @param options - Options object\n * @returns JS Contract API\n * @example\n * ```js\n * const contractIns = await Contract.initialize({ ...aeSdk.getContext(), sourceCode })\n * await contractIns.$deploy([321]) or await contractIns.init(321)\n * const callResult = await contractIns.$call('setState', [123])\n * const staticCallResult = await contractIns.$call('setState', [123], { callStatic: true })\n * ```\n * Also you can call contract like: `await contractIns.setState(123, options)`\n * Then sdk decide to make on-chain or static call (dry-run API) transaction based on function is\n * stateful or not\n */\nclass Contract<M extends ContractMethodsBase> {\n  /**\n   * Compile contract\n   * @returns bytecode\n   */\n  async $compile(): Promise<Encoded.ContractBytearray> {\n    if (this.$options.bytecode != null) return this.$options.bytecode;\n    if (this.$options.onCompiler == null)\n      throw new IllegalArgumentError(\"Can't compile without compiler\");\n    if (this.$options.sourceCode != null) {\n      const { bytecode } = await this.$options.onCompiler.compileBySourceCode(\n        this.$options.sourceCode,\n        this.$options.fileSystem,\n      );\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.sourceCodePath != null) {\n      const { bytecode } = await this.$options.onCompiler.compile(this.$options.sourceCodePath);\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.bytecode == null) {\n      throw new IllegalArgumentError(\"Can't compile without sourceCode and sourceCodePath\");\n    }\n    return this.$options.bytecode;\n  }\n\n  #getCallResult<Fn extends MethodNames<M>>(\n    { returnType, returnValue, log }: ContractCallObject,\n    fnName: Fn,\n    transaction: Encoded.Transaction | undefined,\n    options: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): GetCallResultByHashReturnType<M, Fn> {\n    let message: string;\n    switch (returnType) {\n      case 'ok': {\n        const fnAci = this.#getFunctionAci(fnName);\n        return {\n          decodedResult: this._calldata.decode(this._name, fnAci.name, returnValue),\n          decodedEvents: this.$decodeEvents(log, options),\n        };\n      }\n      case 'revert':\n        message = this._calldata.decodeFateString(returnValue);\n        break;\n      case 'error':\n        message = decode(returnValue).toString();\n        if (/Expected \\d+ arguments, got \\d+/.test(message)) {\n          throw new ContractError(\n            `ACI doesn't match called contract. Error provided by node: ${message}`,\n          );\n        }\n        break;\n      default:\n        throw new InternalError(`Unknown return type: ${returnType}`);\n    }\n    throw new NodeInvocationError(message, transaction);\n  }\n\n  async #sendAndProcess<Fn extends MethodNames<M>>(\n    tx: Encoded.Transaction,\n    fnName: Fn,\n    options: SendTransactionOptions & Parameters<Contract<M>['$getCallResultByTxHash']>[2],\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const txData = await sendTransaction(tx, { ...this.$options, ...options });\n    return {\n      hash: txData.hash,\n      tx: unpackTx<Tag.ContractCallTx | Tag.ContractCreateTx>(txData.rawTx),\n      txData,\n      rawTx: txData.rawTx,\n      ...(txData.blockHeight != null &&\n        (await this.$getCallResultByTxHash(txData.hash, fnName, options))),\n    };\n  }\n\n  async $getCallResultByTxHash<Fn extends MethodNames<M>>(\n    hash: Encoded.TxHash,\n    fnName: Fn,\n    options?: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): Promise<GetCallResultByHashReturnType<M, Fn> & { result: ContractCallObject }> {\n    const { callInfo } = await this.$options.onNode.getTransactionInfoByHash(hash);\n    if (callInfo == null) {\n      throw new ContractError(`callInfo is not available for transaction ${hash}`);\n    }\n    const callInfoTyped = callInfo as ContractCallObject;\n    return {\n      ...this.#getCallResult(callInfoTyped, fnName, undefined, options),\n      result: callInfoTyped,\n    };\n  }\n\n  async _estimateGas<Fn extends MethodNames<M>>(\n    name: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Omit<Parameters<Contract<M>['$call']>[2], 'callStatic'> = {},\n  ): Promise<number> {\n    const { result } = await this.$call(name, params, { ...options, callStatic: true });\n    if (result == null) throw new UnexpectedTsError();\n    const { gasUsed } = result;\n    // taken from https://github.com/aeternity/aepp-sdk-js/issues/1286#issuecomment-977814771\n    return Math.floor(gasUsed * 1.25);\n  }\n\n  /**\n   * Deploy contract\n   * @param params - Contract init function arguments array\n   * @param options - Options\n   * @returns deploy info\n   */\n  async $deploy(\n    params: MethodParameters<M, 'init'>,\n    options?: Parameters<Contract<M>['$call']>[2] &\n      Partial<BuildTxOptions<Tag.ContractCreateTx, 'ownerId' | 'code' | 'callData'>>,\n  ): Promise<\n    Omit<SendAndProcessReturnType, 'hash'> & {\n      transaction?: Encoded.TxHash;\n      owner?: Encoded.AccountAddress;\n      address?: Encoded.ContractAddress;\n      decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n    }\n  > {\n    const { callStatic, ...opt } = { ...this.$options, ...options };\n    if (this.$options.bytecode == null) await this.$compile();\n    if (callStatic === true) return this.$call('init', params, { ...opt, callStatic });\n    if (this.$options.address != null) throw new DuplicateContractError();\n\n    if (opt.onAccount == null) throw new IllegalArgumentError(\"Can't deploy without account\");\n    const ownerId = opt.onAccount.address;\n    if (this.$options.bytecode == null)\n      throw new IllegalArgumentError(\"Can't deploy without bytecode\");\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.ContractCreateTx,\n      gasLimit: opt.gasLimit ?? (await this._estimateGas('init', params, opt)),\n      callData: this._calldata.encode(this._name, 'init', params),\n      code: this.$options.bytecode,\n      ownerId,\n    });\n    const { hash, ...other } = await this.#sendAndProcess(tx, 'init', {\n      ...opt,\n      onAccount: opt.onAccount,\n    });\n    this.$options.address = buildContractIdByContractTx(other.rawTx);\n    return {\n      ...other,\n      ...(other.result?.log != null && {\n        decodedEvents: this.$decodeEvents(other.result.log, opt),\n      }),\n      owner: ownerId,\n      transaction: hash,\n      address: this.$options.address,\n    };\n  }\n\n  /**\n   * Get function schema from contract ACI object\n   * @param name - Function name\n   * @returns function ACI\n   */\n  #getFunctionAci(name: string): FunctionAci {\n    const fn = this.#aciContract.functions.find((f: { name: string }) => f.name === name);\n    if (fn != null) {\n      return fn;\n    }\n    if (name === 'init') {\n      return {\n        arguments: [],\n        name: 'init',\n        payable: false,\n        returns: 'unit',\n        stateful: true,\n      };\n    }\n    throw new NoSuchContractFunctionError(name);\n  }\n\n  /**\n   * Call contract function\n   * @param fn - Function name\n   * @param params - Array of function arguments\n   * @param options - Array of function arguments\n   * @returns CallResult\n   */\n  async $call<Fn extends MethodNames<M>>(\n    fn: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Partial<BuildTxOptions<Tag.ContractCallTx, 'callerId' | 'contractId' | 'callData'>> &\n      Parameters<Contract<M>['$decodeEvents']>[1] &\n      Optional<SendTransactionOptions, 'onAccount' | 'onNode'> &\n      Omit<Parameters<typeof txDryRun>[2], 'onNode'> & { callStatic?: boolean } = {},\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const { callStatic, top, ...opt } = { ...this.$options, ...options };\n    const fnAci = this.#getFunctionAci(fn);\n    const { address, name } = this.$options;\n    // TODO: call `produceNameId` on buildTx side\n    const contractId = name != null ? produceNameId(name) : address;\n    const { onNode } = opt;\n\n    if (fn == null) throw new MissingFunctionNameError();\n    if (fn === 'init' && callStatic !== true)\n      throw new InvalidMethodInvocationError('\"init\" can be called only via dryRun');\n    if (fn !== 'init' && opt.amount != null && Number(opt.amount) > 0 && !fnAci.payable) {\n      throw new NotPayableFunctionError(opt.amount, fn);\n    }\n\n    let callerId;\n    try {\n      if (opt.onAccount == null) throw new InternalError('Use fallback account');\n      callerId = opt.onAccount.address;\n    } catch (error) {\n      const useFallbackAccount =\n        callStatic === true &&\n        ((error instanceof TypeError &&\n          error.message ===\n            'Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead') ||\n          error instanceof NoWalletConnectedError ||\n          (error instanceof InternalError && error.message === 'Use fallback account'));\n      if (!useFallbackAccount) throw error;\n      callerId = DRY_RUN_ACCOUNT.pub;\n    }\n    const callData = this._calldata.encode(this._name, fn, params);\n\n    if (callStatic === true) {\n      if (opt.nonce == null) {\n        const topOption = top != null && { [typeof top === 'number' ? 'height' : 'hash']: top };\n        const account = await getAccount(callerId, { ...topOption, onNode }).catch((error) => {\n          if (!isAccountNotFoundError(error)) throw error;\n          return { kind: 'basic', nonce: 0 };\n        });\n        opt.nonce = account.kind === 'generalized' ? 0 : account.nonce + 1;\n      }\n\n      const txOpt = { ...opt, onNode, callData };\n      let tx;\n      if (fn === 'init') {\n        if (this.$options.bytecode == null)\n          throw new IllegalArgumentError('Can\\'t dry-run \"init\" without bytecode');\n        tx = await buildTxAsync({\n          ...txOpt,\n          tag: Tag.ContractCreateTx,\n          code: this.$options.bytecode,\n          ownerId: callerId,\n        });\n      } else {\n        if (contractId == null)\n          throw new MissingContractAddressError(\"Can't dry-run contract without address\");\n        tx = await buildTxAsync({\n          ...txOpt,\n          tag: Tag.ContractCallTx,\n          callerId,\n          contractId,\n        });\n      }\n\n      const { callObj, ...dryRunOther } = await txDryRun(tx, callerId, { ...opt, top });\n      if (callObj == null) {\n        throw new InternalError(`callObj is not available for transaction ${tx}`);\n      }\n      const callInfoTyped = callObj as ContractCallObject;\n      return {\n        ...dryRunOther,\n        ...this.#getCallResult(callInfoTyped, fn, tx, opt),\n        tx: unpackTx(tx),\n        result: callInfoTyped,\n        rawTx: tx,\n        hash: buildTxHash(tx),\n        txData: undefined as any,\n      };\n    }\n\n    if (top != null)\n      throw new IllegalArgumentError(\"Can't handle `top` option in on-chain contract call\");\n    if (contractId == null)\n      throw new MissingContractAddressError(\"Can't call contract without address\");\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.ContractCallTx,\n      gasLimit: opt.gasLimit ?? (await this._estimateGas(fn, params, opt)),\n      callerId,\n      contractId,\n      callData,\n    });\n    if (opt.onAccount == null)\n      throw new IllegalArgumentError(\"Can't call contract on chain without account\");\n    return this.#sendAndProcess(tx, fn, { ...opt, onAccount: opt.onAccount });\n  }\n\n  /**\n   * @param ctAddress - Contract address that emitted event\n   * @param nameHash - Hash of emitted event name\n   * @param options - Options\n   * @returns Contract name\n   * @throws {@link MissingEventDefinitionError}\n   * @throws {@link AmbiguousEventDefinitionError}\n   */\n  #getContractNameByEvent(\n    ctAddress: Encoded.ContractAddress,\n    nameHash: BigInt,\n    { contractAddressToName }: GetContractNameByEventOptions,\n  ): string {\n    const addressToName = { ...this.$options.contractAddressToName, ...contractAddressToName };\n    if (addressToName[ctAddress] != null) return addressToName[ctAddress];\n\n    // TODO: consider using a third-party library\n    const isEqual = (a: any, b: any): boolean => JSON.stringify(a) === JSON.stringify(b);\n\n    const contracts = this._aci\n      .map(({ contract }) => contract)\n      .filter((contract) => contract?.event) as ContractAci[];\n    const matchedEvents = contracts\n      .map((contract) => [contract.name, contract.event.variant])\n      .map(([name, events]) =>\n        events.map((event: {}) => [name, Object.keys(event)[0], Object.values(event)[0]]),\n      )\n      .flat()\n      .filter(([, eventName]) => BigInt(`0x${calcHash(eventName).toString('hex')}`) === nameHash)\n      .filter(([, , type], idx, arr) => !arr.slice(0, idx).some((el) => isEqual(el[2], type)));\n    switch (matchedEvents.length) {\n      case 0:\n        throw new MissingEventDefinitionError(nameHash.toString(), ctAddress);\n      case 1:\n        return matchedEvents[0][0];\n      default:\n        throw new AmbiguousEventDefinitionError(ctAddress, matchedEvents);\n    }\n  }\n\n  /**\n   * Decode Events\n   * @param events - Array of encoded events (callRes.result.log)\n   * @param options - Options\n   * @returns DecodedEvents\n   */\n  $decodeEvents(\n    events: Event[],\n    { omitUnknown, ...opt }: { omitUnknown?: boolean } & GetContractNameByEventOptions = {},\n  ): DecodedEvent[] {\n    return events\n      .map((event) => {\n        let contractName;\n        try {\n          contractName = this.#getContractNameByEvent(event.address, event.topics[0], opt);\n        } catch (error) {\n          if ((omitUnknown ?? false) && error instanceof MissingEventDefinitionError) return null;\n          throw error;\n        }\n        const decoded = this._calldata.decodeEvent(contractName, event.data, event.topics);\n        const [name, args] = Object.entries(decoded)[0];\n        return {\n          name,\n          args,\n          contract: {\n            name: contractName,\n            address: event.address,\n          },\n        };\n      })\n      .filter((e: DecodedEvent | null): e is DecodedEvent => e != null);\n  }\n\n  static async initialize<M extends ContractMethodsBase>({\n    onCompiler,\n    onNode,\n    bytecode,\n    aci,\n    address,\n    sourceCodePath,\n    sourceCode,\n    fileSystem,\n    validateBytecode,\n    ...otherOptions\n  }: Omit<ConstructorParameters<typeof Contract>[0], 'aci' | 'address'> & {\n    validateBytecode?: boolean;\n    aci?: Aci;\n    address?: Encoded.ContractAddress | AensName;\n  }): Promise<ContractWithMethods<M>> {\n    if (aci == null && onCompiler != null) {\n      let res;\n      if (sourceCodePath != null) res = await onCompiler.compile(sourceCodePath);\n      if (sourceCode != null) res = await onCompiler.compileBySourceCode(sourceCode, fileSystem);\n      if (res != null) {\n        aci = res.aci;\n        bytecode ??= res.bytecode;\n      }\n    }\n    if (aci == null) throw new MissingContractDefError();\n\n    let name;\n    if (address != null) {\n      address = (await resolveName(address, 'contract_pubkey', {\n        resolveByNode: true,\n        onNode,\n      })) as Encoded.ContractAddress;\n      if (isNameValid(address)) name = address;\n    }\n\n    if (address == null && sourceCode == null && sourceCodePath == null && bytecode == null) {\n      throw new MissingContractAddressError(\"Can't create instance by ACI without address\");\n    }\n\n    if (address != null) {\n      const contract = await getContract(address, { onNode });\n      if (contract.active == null) throw new InactiveContractError(address);\n    }\n\n    if (validateBytecode === true) {\n      if (address == null)\n        throw new MissingContractAddressError(\"Can't validate bytecode without contract address\");\n      const onChanBytecode = (await getContractByteCode(address, { onNode })).bytecode;\n      let isValid = false;\n      if (bytecode != null) isValid = bytecode === onChanBytecode;\n      else if (sourceCode != null) {\n        if (onCompiler == null)\n          throw new IllegalArgumentError(\"Can't validate bytecode without compiler\");\n        isValid = await onCompiler.validateBySourceCode(onChanBytecode, sourceCode, fileSystem);\n      } else if (sourceCodePath != null) {\n        if (onCompiler == null)\n          throw new IllegalArgumentError(\"Can't validate bytecode without compiler\");\n        isValid = await onCompiler.validate(onChanBytecode, sourceCodePath);\n      }\n      if (!isValid) {\n        throw new BytecodeMismatchError(\n          (sourceCode ?? sourceCodePath) != null ? 'source code' : 'bytecode',\n        );\n      }\n    }\n\n    return new ContractWithMethods<M>({\n      onCompiler,\n      onNode,\n      sourceCode,\n      sourceCodePath,\n      bytecode,\n      aci,\n      address,\n      name,\n      fileSystem,\n      ...otherOptions,\n    });\n  }\n\n  _aci: Aci;\n\n  readonly #aciContract: ContractAci;\n\n  _name: string;\n\n  _calldata: Calldata;\n\n  $options: Omit<ConstructorParameters<typeof Contract>[0], 'aci'>;\n\n  /**\n   * @param options - Options\n   */\n  constructor({\n    aci,\n    ...otherOptions\n  }: {\n    onCompiler?: CompilerBase;\n    onNode: Node;\n    bytecode?: Encoded.ContractBytearray;\n    aci: Aci;\n    address?: Encoded.ContractAddress;\n    /**\n     * Supported only in Ceres\n     */\n    name?: AensName;\n    sourceCodePath?: Parameters<CompilerBase['compile']>[0];\n    sourceCode?: Parameters<CompilerBase['compileBySourceCode']>[0];\n    fileSystem?: Parameters<CompilerBase['compileBySourceCode']>[1];\n  } & Parameters<Contract<M>['$deploy']>[1]) {\n    this._aci = aci;\n    const aciLast = aci[aci.length - 1];\n    if (aciLast.contract == null) {\n      throw new IllegalArgumentError(\n        `The last 'aci' item should have 'contract' key, got ${Object.keys(aciLast)} keys instead`,\n      );\n    }\n    this.#aciContract = aciLast.contract;\n    this._name = this.#aciContract.name;\n    this._calldata = new Calldata(aci);\n    this.$options = otherOptions;\n\n    /**\n     * Generate proto function based on contract function using Contract ACI schema\n     * All function can be called like:\n     * ```js\n     * await contract.testFunction()\n     * ```\n     * then sdk will decide to use dry-run or send tx\n     * on-chain base on if function stateful or not.\n     * Also, you can manually do that:\n     * ```js\n     * await contract.testFunction({ callStatic: true }) // use call-static (dry-run)\n     * await contract.testFunction({ callStatic: false }) // send tx on-chain\n     * ```\n     */\n    Object.assign(\n      this,\n      Object.fromEntries(\n        this.#aciContract.functions.map(({ name, arguments: aciArgs, stateful }: FunctionAci) => {\n          const callStatic = name !== 'init' && !stateful;\n          return [\n            name,\n            async (...args: any) => {\n              const options = args.length === aciArgs.length + 1 ? args.pop() : {};\n              if (typeof options !== 'object')\n                throw new TypeError(`Options should be an object: ${options}`);\n              if (name === 'init') return this.$deploy(args, { callStatic, ...options });\n              return this.$call(name, args, { callStatic, ...options });\n            },\n          ];\n        }),\n      ),\n    );\n  }\n}\n\ninterface ContractWithMethodsClass {\n  new <M extends ContractMethodsBase>(\n    options: ConstructorParameters<typeof Contract>[0],\n  ): ContractWithMethods<M>;\n  initialize: (typeof Contract)['initialize'];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst ContractWithMethods: ContractWithMethodsClass = Contract as any;\n\nexport default ContractWithMethods;\n","import { decode, Encoded } from '../utils/encoder.js';\nimport Node from '../Node.js';\n\ntype OracleQueryNode = Awaited<\n  ReturnType<Node['getOracleQueriesByPubkey']>\n>['oracleQueries'][number];\nexport interface OracleQuery extends OracleQueryNode {\n  // TODO: type should be corrected in node api\n  id: Encoded.OracleQueryId;\n  decodedQuery: string;\n  decodedResponse: string;\n}\n\nexport function decodeQuery(queryEntry: OracleQueryNode): OracleQuery {\n  return {\n    ...queryEntry,\n    id: queryEntry.id as Encoded.OracleQueryId,\n    decodedQuery: decode(queryEntry.query as Encoded.OracleQuery).toString(),\n    decodedResponse: decode(queryEntry.response as Encoded.OracleResponse).toString(),\n  };\n}\n\n/**\n * This class is needed because `getOracleQuery` would return different values depending on the\n * oracle type.\n */\nexport default class OracleBase {\n  /**\n   * @param address - Oracle public key\n   */\n  constructor(\n    public readonly address: Encoded.OracleAddress,\n    public options: { onNode: Node },\n  ) {}\n\n  /**\n   * Get oracle entry from the node\n   * @param options - Options object\n   */\n  async getState(options: { onNode?: Node } = {}): ReturnType<Node['getOracleByPubkey']> {\n    const opt = { ...this.options, ...options };\n    return opt.onNode.getOracleByPubkey(this.address);\n  }\n\n  /**\n   * Get oracle query entry from the node\n   * @param queryId - Oracle query ID\n   * @param options - Options object\n   */\n  async getQuery(\n    queryId: Encoded.OracleQueryId,\n    options: { onNode?: Node } = {},\n  ): Promise<OracleQuery> {\n    const { onNode } = { ...this.options, ...options };\n    const queryEntry = await onNode.getOracleQueryByPubkeyAndQueryId(this.address, queryId);\n    return decodeQuery(queryEntry);\n  }\n}\n","import { buildTxAsync, BuildTxOptions } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { LogicError, UnexpectedTsError } from '../utils/errors.js';\nimport { decode, encode, Encoded, Encoding } from '../utils/encoder.js';\nimport { _getPollInterval } from '../chain.js';\nimport { sendTransaction, SendTransactionOptions } from '../send-transaction.js';\nimport Node from '../Node.js';\nimport AccountBase from '../account/Base.js';\nimport OracleBase, { OracleQuery, decodeQuery } from './OracleBase.js';\n\ninterface OracleRegisterOptions\n  extends BuildTxOptions<Tag.OracleRegisterTx, 'accountId' | 'queryFormat' | 'responseFormat'>,\n    Omit<SendTransactionOptions, 'onNode' | 'onAccount'> {}\n\ninterface OracleExtendTtlOptions\n  extends BuildTxOptions<Tag.OracleExtendTx, 'callerId' | 'oracleId'>,\n    Omit<SendTransactionOptions, 'onNode' | 'onAccount'> {}\n\ninterface OracleRespondToQueryOptions\n  extends BuildTxOptions<Tag.OracleResponseTx, 'callerId' | 'oracleId' | 'queryId' | 'response'>,\n    Omit<SendTransactionOptions, 'onNode' | 'onAccount'> {}\n\n/**\n * @category oracle\n */\nexport default class Oracle extends OracleBase {\n  /**\n   * @param account - Account to use as oracle\n   * @param options - Options object\n   */\n  constructor(\n    public readonly account: AccountBase,\n    public override options: OracleRegisterOptions &\n      OracleExtendTtlOptions &\n      Parameters<Oracle['handleQueries']>[1] & { onNode: Node },\n  ) {\n    super(encode(decode(account.address), Encoding.OracleAddress), options);\n  }\n\n  // TODO: support abiVersion other than 0\n  /**\n   * Register oracle\n   * @param queryFormat - Format of query\n   * @param responseFormat - Format of query response\n   * @param options - Options object\n   */\n  async register(\n    queryFormat: string,\n    responseFormat: string,\n    options: OracleRegisterOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const oracleRegisterTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleRegisterTx,\n      accountId: this.account.address,\n      queryFormat,\n      responseFormat,\n    });\n    return sendTransaction(oracleRegisterTx, { ...opt, onAccount: this.account });\n  }\n\n  /**\n   * Extend oracle ttl\n   * @param options - Options object\n   */\n  async extendTtl(options: OracleExtendTtlOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const oracleExtendTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleExtendTx,\n      oracleId: this.address,\n    });\n    return sendTransaction(oracleExtendTx, { ...opt, onAccount: this.account });\n  }\n\n  /**\n   * Poll for oracle queries\n   * @param onQuery - OnQuery callback\n   * @param options - Options object\n   * @param options.interval - Poll interval (default: 5000)\n   * @returns Callback to stop polling function\n   */\n  pollQueries(\n    onQuery: (query: OracleQuery) => void,\n    options: { interval?: number; includeResponded?: boolean } & Partial<\n      Parameters<typeof _getPollInterval>[1]\n    > = {},\n  ): () => void {\n    const opt = { ...this.options, ...options };\n    const knownQueryIds = new Set();\n\n    let isChecking = false;\n    const checkNewQueries = async (): Promise<void> => {\n      if (isChecking) return;\n      isChecking = true;\n      const queries = (await opt.onNode.getOracleQueriesByPubkey(this.address)).oracleQueries ?? [];\n      const filtered = queries\n        .filter(({ id }) => !knownQueryIds.has(id))\n        .map((query) => decodeQuery(query))\n        .filter((query) => options.includeResponded === true || query.decodedResponse === '');\n      filtered.forEach((query) => knownQueryIds.add(query.id));\n      isChecking = false;\n      await Promise.all(filtered.map((query) => onQuery(query)));\n    };\n\n    checkNewQueries();\n    const idPromise = (async () => {\n      const interval = opt.interval ?? (await _getPollInterval('micro-block', opt));\n      return setInterval(async () => checkNewQueries(), interval);\n    })();\n\n    return async () => {\n      const id = await idPromise;\n      clearInterval(id);\n    };\n  }\n\n  /**\n   * Respond to a query\n   * @param queryId - Oracle query id\n   * @param response - The response to query\n   * @param options - Options object\n   */\n  async respondToQuery(\n    queryId: Encoded.OracleQueryId,\n    response: string,\n    options: OracleRespondToQueryOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const oracleRespondTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleResponseTx,\n      oracleId: this.address,\n      queryId,\n      response,\n    });\n    return sendTransaction(oracleRespondTx, { ...opt, onAccount: this.account });\n  }\n\n  #handleQueriesPromise?: Promise<void>;\n\n  /**\n   * Respond to queries to oracle based on callback value\n   * @param getResponse - Callback to respond on query\n   * @param options - Options object\n   * @param options.interval - Poll interval (default: 5000)\n   * @returns Callback to stop polling function\n   */\n  handleQueries(\n    getResponse: (q: OracleQuery) => Promise<string> | string,\n    options: Parameters<Oracle['pollQueries']>[1] & OracleRespondToQueryOptions = {},\n  ): () => void {\n    if (this.#handleQueriesPromise != null) {\n      throw new LogicError(\n        'Another query handler already running, it needs to be stopped to run a new one',\n      );\n    }\n    const opt = { ...this.options, ...options };\n\n    let queuePromise = Promise.resolve();\n    const handler = async (q: OracleQuery): Promise<void> => {\n      const response = await getResponse(q);\n      const respondPromise = queuePromise.then(async () =>\n        this.respondToQuery(q.id, response, opt),\n      );\n      queuePromise = respondPromise.then(\n        () => {},\n        () => {},\n      );\n      await respondPromise;\n    };\n\n    this.#handleQueriesPromise = Promise.resolve();\n    const stopPoll = this.pollQueries(async (query: OracleQuery) => {\n      const promise = handler(query);\n      if (this.#handleQueriesPromise == null) throw new UnexpectedTsError();\n      this.#handleQueriesPromise = this.#handleQueriesPromise\n        .then(async () => promise)\n        .then(\n          () => {},\n          () => {},\n        );\n      return promise;\n    }, opt);\n\n    return async () => {\n      stopPoll();\n      await this.#handleQueriesPromise;\n      this.#handleQueriesPromise = undefined;\n    };\n  }\n}\n","import { pause, Optional } from '../utils/other.js';\nimport { oracleQueryId } from '../tx/builder/helpers.js';\nimport { unpackTx, buildTxAsync, BuildTxOptions } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { RequestTimedOutError } from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { _getPollInterval, getHeight } from '../chain.js';\nimport { sendTransaction } from '../send-transaction.js';\nimport Node from '../Node.js';\nimport AccountBase from '../account/Base.js';\nimport OracleBase from './OracleBase.js';\n\ninterface OracleClientPostQueryOptions\n  extends Optional<Parameters<typeof sendTransaction>[1], 'onNode' | 'onAccount'>,\n    BuildTxOptions<Tag.OracleQueryTx, 'oracleId' | 'senderId' | 'query'> {}\n\n/**\n * @category oracle\n */\nexport default class OracleClient extends OracleBase {\n  /**\n   * @param address - Oracle public key\n   * @param options - Options object\n   * @param options.onAccount - Account to use\n   * @param options.onNode - Node to use\n   */\n  constructor(\n    address: Encoded.OracleAddress,\n    public override options: { onAccount: AccountBase; onNode: Node } & Parameters<\n      OracleClient['query']\n    >[1],\n  ) {\n    super(address, options);\n  }\n\n  /**\n   * Post query to oracle\n   * @param query - Query to oracle\n   * @param options - Options object\n   * @returns Transaction details and query ID\n   */\n  async postQuery(\n    query: string,\n    options: OracleClientPostQueryOptions = {},\n  ): Promise<Awaited<ReturnType<typeof sendTransaction>> & { queryId: Encoded.OracleQueryId }> {\n    const opt = { ...this.options, ...options };\n    const senderId = opt.onAccount.address;\n\n    const oracleQueryTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleQueryTx,\n      oracleId: this.address,\n      senderId,\n      query,\n    });\n    const { nonce } = unpackTx(oracleQueryTx, Tag.OracleQueryTx);\n    return {\n      ...(await sendTransaction(oracleQueryTx, opt)),\n      queryId: oracleQueryId(senderId, nonce, this.address),\n    };\n  }\n\n  /**\n   * Poll for oracle response to query\n   * @param queryId - Oracle Query id\n   * @param options - Options object\n   * @param options.interval - Poll interval\n   * @returns Oracle response\n   */\n  async pollForResponse(\n    queryId: Encoded.OracleQueryId,\n    options: { interval?: number } & Partial<Parameters<typeof _getPollInterval>[1]> = {},\n  ): Promise<string> {\n    const opt = { ...this.options, ...options };\n    const interval = opt.interval ?? (await _getPollInterval('micro-block', opt));\n    let height;\n    let ttl;\n    let response;\n    do {\n      ({ response, ttl } = await opt.onNode.getOracleQueryByPubkeyAndQueryId(\n        this.address,\n        queryId,\n      ));\n      const responseBuffer = decode(response as Encoded.OracleResponse);\n      if (responseBuffer.length > 0) return responseBuffer.toString();\n      await pause(interval);\n      height = await getHeight({ ...opt, cached: true });\n    } while (ttl >= height);\n    throw new RequestTimedOutError(height);\n  }\n\n  /**\n   * Post query to oracle and wait for response\n   * @param query - Query to oracle\n   * @param options - Options object\n   * @returns Oracle response\n   */\n  async query(\n    query: string,\n    options: OracleClientPostQueryOptions & Parameters<OracleClient['pollForResponse']>[1] = {},\n  ): Promise<string> {\n    const { queryId } = await this.postQuery(query, options);\n    return this.pollForResponse(queryId, options);\n  }\n}\n","import { BigNumber } from 'bignumber.js';\nimport { getBalance, resolveName } from './chain.js';\nimport { sendTransaction, SendTransactionOptions } from './send-transaction.js';\nimport { buildTxAsync, BuildTxOptions, unpackTx } from './tx/builder/index.js';\nimport { ArgumentError } from './utils/errors.js';\nimport { Encoded } from './utils/encoder.js';\nimport { Tag, AensName } from './tx/builder/constants.js';\n\n// TODO: name verify should not overlap with transaction verify\ntype ResolveNameOptions = Omit<Parameters<typeof resolveName>[2], 'onNode' | 'verify'>;\n\n/**\n * Send coins to another account\n * @category chain\n * @param amount - Amount to spend\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @returns Transaction\n */\nexport async function spend(\n  amount: number | string,\n  recipientIdOrName: Encoded.AccountAddress | Encoded.ContractAddress | AensName,\n  options: SpendOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.SpendTx,\n      senderId: options.onAccount.address,\n      recipientId: await resolveName(recipientIdOrName, 'account_pubkey', options),\n      amount,\n    }),\n    options,\n  );\n}\n\ntype SpendOptionsType = BuildTxOptions<\n  Tag.SpendTx,\n  'senderId' | 'recipientId' | 'amount' | 'onNode'\n> &\n  ResolveNameOptions &\n  SendTransactionOptions;\ninterface SpendOptions extends SpendOptionsType {}\n\n// TODO: Rename to spendFraction\n/**\n * Spend a fraction of coin balance to another account. Useful if needed to drain account balance\n * completely, sending funds to another account (with fraction set to 1).\n * @category chain\n * @param fraction - Fraction of balance to spend (between 0 and 1)\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @example\n * ```js\n * // `fraction` * 100 = % of AE to be transferred (e.g. `0.42` for 42% or `1` for 100%)\n * const { blockHeight } = await aeSdk.transferFunds(\n *   0.42,\n *   'ak_21A27UVVt3hDkBE5J7rhhqnH5YNb4Y1dqo4PnSybrH85pnWo7E',\n * );\n * console.log('Transaction mined at', blockHeight);\n * ```\n */\nexport async function transferFunds(\n  fraction: number | string, // TODO: accept only number\n  recipientIdOrName: AensName | Encoded.AccountAddress | Encoded.ContractAddress,\n  options: TransferFundsOptions,\n): ReturnType<typeof sendTransaction> {\n  if (+fraction < 0 || +fraction > 1) {\n    throw new ArgumentError('fraction', 'a number between 0 and 1', fraction);\n  }\n  const recipientId = await resolveName(recipientIdOrName, 'account_pubkey', options);\n  const senderId = options.onAccount.address;\n  const balance = new BigNumber(await getBalance.bind(options.onAccount)(senderId, options));\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP);\n  const { fee } = unpackTx(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.SpendTx,\n      senderId,\n      recipientId,\n      amount: desiredAmount,\n    }),\n    Tag.SpendTx,\n  );\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount;\n  return sendTransaction(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.SpendTx,\n      senderId,\n      recipientId,\n      amount,\n    }),\n    options,\n  );\n}\n\ntype TransferFundsOptionsType = BuildTxOptions<\n  Tag.SpendTx,\n  'senderId' | 'recipientId' | 'amount' | 'onNode'\n> &\n  ResolveNameOptions &\n  SendTransactionOptions;\ninterface TransferFundsOptions extends TransferFundsOptionsType {}\n\n/**\n * Submit transaction of another account paying for it (fee and gas)\n * @category chain\n * @param transaction - tx_<base64>-encoded transaction\n * @param options - Options\n * @returns Object Transaction\n */\nexport async function payForTransaction(\n  transaction: Encoded.Transaction,\n  options: PayForTransactionOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.PayingForTx,\n      payerId: options.onAccount.address,\n      tx: transaction,\n    }),\n    options,\n  );\n}\n\ninterface PayForTransactionOptions\n  extends BuildTxOptions<Tag.PayingForTx, 'payerId' | 'tx' | 'onNode'>,\n    SendTransactionOptions {}\n","/**\n * Generalized Account module - routines to use generalized account\n */\n\nimport { ConsensusProtocolVersion, Int, Tag } from '../tx/builder/constants.js';\nimport {\n  buildContractIdByContractTx,\n  buildTx,\n  buildTxAsync,\n  BuildTxOptions,\n  unpackTx,\n} from '../tx/builder/index.js';\nimport { hash } from '../utils/crypto.js';\nimport { decode, encode, Encoded, Encoding } from '../utils/encoder.js';\nimport { ArgumentError, IllegalArgumentError } from '../utils/errors.js';\nimport { concatBuffers } from '../utils/other.js';\nimport Contract from './Contract.js';\nimport Node from '../Node.js';\nimport { getAccount } from '../chain.js';\nimport { sendTransaction, SendTransactionOptions } from '../send-transaction.js';\nimport CompilerBase from './compiler/Base.js';\nimport { packEntry } from '../tx/builder/entry/index.js';\nimport { EntryTag } from '../tx/builder/entry/constants.js';\n\n/**\n * Convert current account to GA\n * @category contract\n * @param authFnName - Authorization function name\n * @param args - init arguments\n * @param options - Options\n * @returns General Account Object\n */\nexport async function createGeneralizedAccount(\n  authFnName: string,\n  args: any[],\n  {\n    onAccount,\n    onCompiler,\n    onNode,\n    bytecode,\n    aci,\n    sourceCodePath,\n    sourceCode,\n    fileSystem,\n    ...options\n  }: CreateGeneralizedAccountOptions,\n): Promise<\n  Readonly<{\n    owner: Encoded.AccountAddress;\n    transaction: Encoded.TxHash;\n    rawTx: Encoded.Transaction;\n    gaContractId: Encoded.ContractAddress;\n  }>\n> {\n  const ownerId = onAccount.address;\n  if ((await getAccount(ownerId, { onNode })).kind === 'generalized') {\n    throw new IllegalArgumentError(`Account ${ownerId} is already GA`);\n  }\n\n  const contract = await Contract.initialize<{ init: (...a: any[]) => void }>({\n    onAccount,\n    onCompiler,\n    onNode,\n    bytecode,\n    aci,\n    sourceCodePath,\n    sourceCode,\n    fileSystem,\n  });\n\n  const tx = await buildTxAsync({\n    _isInternalBuild: true,\n    ...options,\n    tag: Tag.GaAttachTx,\n    onNode,\n    code: await contract.$compile(),\n    gasLimit: options.gasLimit ?? (await contract._estimateGas('init', args, options)),\n    ownerId,\n    callData: contract._calldata.encode(contract._name, 'init', args),\n    authFun: hash(authFnName),\n  });\n  const { hash: transaction, rawTx } = await sendTransaction(tx, {\n    onNode,\n    onAccount,\n    onCompiler,\n    ...options,\n  });\n  const contractId = buildContractIdByContractTx(rawTx);\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction,\n    rawTx,\n    gaContractId: contractId,\n  });\n}\n\ninterface CreateGeneralizedAccountOptions\n  extends BuildTxOptions<\n      Tag.GaAttachTx,\n      'authFun' | 'callData' | 'code' | 'ownerId' | 'gasLimit' | 'onNode'\n    >,\n    SendTransactionOptions,\n    Pick<\n      Parameters<typeof Contract.initialize>[0],\n      'bytecode' | 'aci' | 'sourceCodePath' | 'sourceCode' | 'fileSystem'\n    > {\n  onCompiler: CompilerBase;\n  gasLimit?: number;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx payload\n * @category contract\n * @param transaction - tx-encoded transaction\n * @param options - Options\n * @param options.fee - GaMetaTx fee, required in Ceres\n * @param options.gasPrice - GaMetaTx gasPrice, required in Ceres\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHash(\n  transaction: Encoded.Transaction,\n  { fee, gasPrice, onNode }: { fee?: Int; gasPrice?: Int; onNode: Node },\n): Promise<Buffer> {\n  const { nodeNetworkId, consensusProtocolVersion } = await onNode.getNodeInfo();\n  let payload = hash(concatBuffers([Buffer.from(nodeNetworkId), decode(transaction)]));\n  if (consensusProtocolVersion === ConsensusProtocolVersion.Ceres) {\n    if (fee == null) throw new ArgumentError('fee', 'provided (in Ceres)', fee);\n    if (gasPrice == null) throw new ArgumentError('gasPrice', 'provided (in Ceres)', gasPrice);\n    payload = hash(\n      decode(\n        packEntry({\n          tag: EntryTag.GaMetaTxAuthData,\n          fee,\n          gasPrice,\n          txHash: encode(payload, Encoding.TxHash),\n        }),\n      ),\n    );\n  }\n  return payload;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx\n * @category contract\n * @param transaction - tx-encoded signed GaMeta transaction\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHashByGaMetaTx(\n  transaction: Encoded.Transaction,\n  { onNode }: { onNode: Node },\n): Promise<Buffer> {\n  const txParams = unpackTx(transaction, Tag.SignedTx);\n  if (txParams.encodedTx.tag !== Tag.GaMetaTx) {\n    throw new ArgumentError('transaction', 'to include GaMetaTx', Tag[txParams.encodedTx.tag]);\n  }\n  return buildAuthTxHash(buildTx(txParams.encodedTx.tx.encodedTx), {\n    fee: txParams.encodedTx.fee,\n    gasPrice: txParams.encodedTx.gasPrice,\n    onNode,\n  });\n}\n","import * as chainMethods from './chain.js';\nimport { sendTransaction } from './send-transaction.js';\nimport * as spendMethods from './spend.js';\nimport * as contractGaMethods from './contract/ga.js';\nimport { buildTxAsync } from './tx/builder/index.js';\nimport { mapObject, UnionToIntersection } from './utils/other.js';\nimport { wrapWithProxy } from './utils/wrap-proxy.js';\nimport Node from './Node.js';\nimport { TxParamsAsync } from './tx/builder/schema.generated.js';\nimport AccountBase from './account/Base.js';\nimport { Encoded } from './utils/encoder.js';\nimport CompilerBase from './contract/compiler/Base.js';\n\nexport type OnAccount = Encoded.AccountAddress | AccountBase | undefined;\n\nconst methods = {\n  ...chainMethods,\n  sendTransaction,\n  ...spendMethods,\n  ...contractGaMethods,\n} as const;\n\ntype Decrement<Number extends number> = [-1, 0, 1, 2, 3, 4, 5][Number];\ntype GetMethodsOptions<Methods extends { [key: string]: Function }> = {\n  [Name in keyof Methods]: Methods[Name] extends (...args: infer Args) => any\n    ? Args[Decrement<Args['length']>]\n    : never;\n};\ntype MethodsOptions = GetMethodsOptions<typeof methods>;\nexport interface AeSdkMethodsOptions\n  extends Partial<UnionToIntersection<MethodsOptions[keyof MethodsOptions]>> {}\n\nexport interface WrappedOptions {\n  onAccount: AccountBase;\n  onCompiler: CompilerBase;\n  onNode: Node;\n}\n\n/**\n * AeSdkMethods is the composition of:\n * - chain methods\n * - tx methods\n * - aens methods\n * - spend methods\n * - oracle methods\n * - contract methods\n * - contract ga methods\n *\n * While these methods can be used separately, this class provides a handy way to store\n * their context (current account, network, and compiler to use).\n */\nclass AeSdkMethods {\n  _options: AeSdkMethodsOptions = {};\n\n  readonly #wrappedOptions: WrappedOptions;\n\n  /**\n   * @param options - Options\n   */\n  constructor(options: AeSdkMethodsOptions = {}) {\n    Object.assign(this._options, options);\n    this.#wrappedOptions = {\n      onAccount: wrapWithProxy(() => this._options.onAccount),\n      onNode: wrapWithProxy(() => this._options.onNode),\n      onCompiler: wrapWithProxy(() => this._options.onCompiler),\n    };\n  }\n\n  /**\n   * Returns sdk instance options with references to current account, node, compiler.\n   * Used to create an instance (Contract, Oracle) bound to AeSdk state.\n   * @param mergeWith - Merge context with these extra options\n   * @returns Context object\n   */\n  getContext(mergeWith: AeSdkMethodsOptions = {}): AeSdkMethodsOptions & WrappedOptions {\n    return {\n      ...this._options,\n      ...this.#wrappedOptions,\n      ...mergeWith,\n    };\n  }\n\n  // TODO: omit onNode from options, because it is already in context\n  async buildTx(options: TxParamsAsync): Promise<Encoded.Transaction> {\n    // TODO: remove `any` at the same time as AeSdk class\n    return buildTxAsync({ ...(this.getContext() as any), ...options });\n  }\n}\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K;\n}[keyof T];\n\ntype OptionalIfNotRequired<T extends [any]> = RequiredKeys<T[0]> extends never ? T | [] : T;\n\ntype ReplaceOnAccount<Options> = Options extends { onAccount: any }\n  ? Omit<Options, 'onAccount'> & {\n      /**\n       * Make operation on specific account by providing address (to use account from sdk) or instance\n       * of AccountBase (like MemoryAccount)\n       */\n      onAccount: OnAccount;\n    }\n  : Options;\n\ntype MakeOptional<Options> = OptionalIfNotRequired<\n  [Omit<Options, 'onNode' | 'onCompiler' | 'onAccount'> & Partial<ReplaceOnAccount<Options>>]\n>;\n\ntype TransformMethods<Methods extends { [key: string]: Function }> = {\n  [Name in keyof Methods]: Methods[Name] extends (\n    ...args: [...infer Args, infer Options]\n  ) => infer Ret\n    ? (...args: [...Args, ...MakeOptional<Options>]) => Ret\n    : never;\n};\n\ninterface AeSdkMethodsTransformed extends TransformMethods<typeof methods> {}\n\nObject.assign(\n  AeSdkMethods.prototype,\n  mapObject<Function, Function>(methods, ([name, handler]) => [\n    name,\n    function methodWrapper(this: AeSdkMethods, ...args: any[]) {\n      args.length = handler.length;\n      const options = args[args.length - 1];\n      args[args.length - 1] = this.getContext(options);\n      return handler(...args);\n    },\n  ]),\n);\n\ntype AeSdkMethodsTyped = AeSdkMethods & AeSdkMethodsTransformed;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst AeSdkMethodsTyped = AeSdkMethods as new (options?: AeSdkMethodsOptions) => AeSdkMethodsTyped;\nexport default AeSdkMethodsTyped;\n","import Node from './Node.js';\nimport AccountBase from './account/Base.js';\nimport {\n  CompilerError,\n  DuplicateNodeError,\n  NodeNotFoundError,\n  NotImplementedError,\n  TypeError,\n} from './utils/errors.js';\nimport { Encoded } from './utils/encoder.js';\nimport { wrapWithProxy } from './utils/wrap-proxy.js';\nimport CompilerBase from './contract/compiler/Base.js';\nimport AeSdkMethods, { OnAccount, AeSdkMethodsOptions, WrappedOptions } from './AeSdkMethods.js';\n\ntype NodeInfo = Awaited<ReturnType<Node['getNodeInfo']>> & { name: string };\n\n/**\n * Basic AeSdk class implements:\n * - node selector,\n * - integrated compiler support,\n * - wrappers of account methods mapped to the current account.\n */\nexport default class AeSdkBase extends AeSdkMethods {\n  pool: Map<string, Node> = new Map();\n\n  selectedNodeName?: string;\n\n  readonly #wrappedOptions: WrappedOptions;\n\n  /**\n   * @param options - Options\n   * @param options.nodes - Array of nodes\n   */\n  constructor({\n    nodes = [],\n    ...options\n  }: AeSdkMethodsOptions & {\n    nodes?: Array<{ name: string; instance: Node }>;\n  } = {}) {\n    super(options);\n\n    nodes.forEach(({ name, instance }, i) => this.addNode(name, instance, i === 0));\n\n    this.#wrappedOptions = {\n      onNode: wrapWithProxy(() => this.api),\n      onCompiler: wrapWithProxy(() => this.compilerApi),\n      onAccount: wrapWithProxy(() => this._resolveAccount()),\n    };\n  }\n\n  // TODO: consider dropping this getter, because:\n  // compiler is not intended to be used separately any more (functionality limited to sdk needs)\n  // and user creates its instance by himself\n  get compilerApi(): CompilerBase {\n    if (this._options.onCompiler == null) {\n      throw new CompilerError(\"You can't use Compiler API. Compiler is not ready!\");\n    }\n    return this._options.onCompiler;\n  }\n\n  get api(): Node {\n    this.ensureNodeConnected();\n    return this.pool.get(this.selectedNodeName) as Node;\n  }\n\n  /**\n   * Add Node\n   * @param name - Node name\n   * @param node - Node instance\n   * @param select - Select this node as current\n   * @example\n   * ```js\n   * // add and select new node with name 'testNode'\n   * aeSdkBase.addNode('testNode', new Node({ url }), true)\n   * ```\n   */\n  addNode(name: string, node: Node, select = false): void {\n    if (this.pool.has(name)) throw new DuplicateNodeError(name);\n\n    this.pool.set(name, node);\n    if (select || this.selectedNodeName == null) {\n      this.selectNode(name);\n    }\n  }\n\n  /**\n   * Select Node\n   * @param name - Node name\n   * @example\n   * nodePool.selectNode('testNode')\n   */\n  selectNode(name: string): void {\n    if (!this.pool.has(name)) throw new NodeNotFoundError(`Node with name ${name} not in pool`);\n    this.selectedNodeName = name;\n  }\n\n  /**\n   * Check if you have selected node\n   * @example\n   * nodePool.isNodeConnected()\n   */\n  isNodeConnected(): this is AeSdkBase & { selectedNodeName: string } {\n    return this.selectedNodeName != null;\n  }\n\n  protected ensureNodeConnected(): asserts this is AeSdkBase & { selectedNodeName: string } {\n    if (!this.isNodeConnected()) {\n      throw new NodeNotFoundError(\"You can't use Node API. Node is not connected or not defined!\");\n    }\n  }\n\n  /**\n   * Get information about node\n   * @example\n   * ```js\n   * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n   * ```\n   */\n  async getNodeInfo(): Promise<NodeInfo> {\n    this.ensureNodeConnected();\n    return {\n      name: this.selectedNodeName,\n      ...(await this.api.getNodeInfo()),\n    };\n  }\n\n  /**\n   * Get array of available nodes\n   * @example\n   * nodePool.getNodesInPool()\n   */\n  async getNodesInPool(): Promise<NodeInfo[]> {\n    return Promise.all(\n      Array.from(this.pool.entries()).map(async ([name, node]) => ({\n        name,\n        ...(await node.getNodeInfo()),\n      })),\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addresses(): Encoded.AccountAddress[] {\n    return [];\n  }\n\n  /**\n   * Resolves an account\n   * @param account - ak-address, instance of AccountBase, or keypair\n   */\n  _resolveAccount(account: OnAccount = this._options.onAccount): AccountBase {\n    if (typeof account === 'string') throw new NotImplementedError('Address in AccountResolver');\n    if (typeof account === 'object') return account;\n    throw new TypeError(\n      'Account should be an address (ak-prefixed string), ' +\n        `or instance of AccountBase, got ${String(account)} instead`,\n    );\n  }\n\n  get address(): Encoded.AccountAddress {\n    return this._resolveAccount().address;\n  }\n\n  /**\n   * Sign data blob\n   * @param data - Data to sign\n   * @param options - Options\n   */\n  async sign(\n    data: string | Uint8Array,\n    { onAccount, ...options }: { onAccount?: OnAccount } = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).sign(data, options);\n  }\n\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param options - Options\n   */\n  async signTransaction(\n    tx: Encoded.Transaction,\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    const networkId = this.selectedNodeName !== null ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount).signTransaction(tx, { networkId, ...options });\n  }\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param options - Options\n   */\n  async signMessage(\n    message: string,\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signMessage']>[1] = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).signMessage(message, options);\n  }\n\n  /**\n   * Sign typed data\n   * @param data - Encoded data to sign\n   * @param aci - Type of data to sign\n   * @param options - Options\n   */\n  async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    return this._resolveAccount(onAccount).signTypedData(data, aci, options);\n  }\n\n  /**\n   * Sign delegation, works only in Ceres\n   * @param delegation - Delegation to sign\n   * @param options - Options\n   */\n  async signDelegation(\n    delegation: Encoded.Bytearray,\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signDelegation']>[1] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??=\n      this.selectedNodeName !== null ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount).signDelegation(delegation, options);\n  }\n\n  /**\n   * The same as AeSdkMethods:getContext, but it would resolve ak_-prefixed address in\n   * `mergeWith.onAccount` to AccountBase.\n   */\n  override getContext(mergeWith: AeSdkMethodsOptions = {}): AeSdkMethodsOptions & WrappedOptions {\n    return {\n      ...this._options,\n      ...this.#wrappedOptions,\n      ...mergeWith,\n      ...(mergeWith.onAccount != null && {\n        onAccount: this._resolveAccount(mergeWith.onAccount),\n      }),\n    };\n  }\n}\n","import AeSdkBase from './AeSdkBase.js';\nimport { OnAccount } from './AeSdkMethods.js';\nimport AccountBase from './account/Base.js';\nimport { decode, Encoded } from './utils/encoder.js';\nimport { UnavailableAccountError } from './utils/errors.js';\n\nexport default class AeSdk extends AeSdkBase {\n  accounts: { [key: Encoded.AccountAddress]: AccountBase } = {};\n\n  selectedAddress?: Encoded.AccountAddress;\n\n  /**\n   * @param options - Options\n   */\n  constructor({\n    accounts,\n    ...options\n  }: { accounts?: AccountBase[] } & ConstructorParameters<typeof AeSdkBase>[0] = {}) {\n    super(options);\n    accounts?.forEach((account, idx) => this.addAccount(account, { select: idx === 0 }));\n  }\n\n  override _resolveAccount(account: OnAccount = this.selectedAddress): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (this.accounts[address] == null) throw new UnavailableAccountError(account);\n      account = this.accounts[address];\n    }\n    return super._resolveAccount(account);\n  }\n\n  /**\n   * Get accounts addresses\n   * @example addresses()\n   */\n  override addresses(): Encoded.AccountAddress[] {\n    return Object.keys(this.accounts) as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Add specific account\n   * @param account - Account instance\n   * @param options - Options\n   * @param options.select - Select account\n   * @example addAccount(account)\n   */\n  addAccount(account: AccountBase, { select }: { select?: boolean } = {}): void {\n    const { address } = account;\n    this.accounts[address] = account;\n    if (select === true) this.selectAccount(address);\n  }\n\n  /**\n   * Remove specific account\n   * @param address - Address of account to remove\n   * @example removeAccount(address)\n   */\n  removeAccount(address: Encoded.AccountAddress): void {\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    delete this.accounts[address]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n    if (this.selectedAddress === address) delete this.selectedAddress;\n  }\n\n  /**\n   * Select specific account\n   * @param address - Address of account to select\n   * @example selectAccount('ak_xxxxxxxx')\n   */\n  selectAccount(address: Encoded.AccountAddress): void {\n    decode(address);\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    this.selectedAddress = address;\n  }\n}\n","// eslint-disable-next-line max-classes-per-file\nimport { Encoded } from '../utils/encoder.js';\nimport { BaseError, InternalError } from '../utils/errors.js';\n\n/**\n * @category aepp wallet communication\n */\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  unsafeSign = 'data.unsafeSign',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  signTypedData = 'typedData.sign',\n  signDelegation = 'delegation.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST',\n}\n\ninterface RpcErrorAsJson {\n  code: number;\n  message: string;\n  data?: any;\n}\n\nconst rpcErrors: Array<(new (data?: any) => RpcError) & { code: number }> = [];\n\n/**\n * @category exception\n */\nexport abstract class RpcError extends BaseError {\n  static code: number;\n\n  code!: number;\n\n  data?: any;\n\n  toJSON(): RpcErrorAsJson {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data,\n    };\n  }\n\n  static deserialize(json: RpcErrorAsJson): RpcError {\n    const RpcErr = rpcErrors.find((cl) => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  static override code = 2;\n\n  override code = 2;\n\n  constructor(data?: any) {\n    super('Invalid transaction');\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  static override code = 4;\n\n  override code = 4;\n\n  constructor(data?: any) {\n    super('Operation rejected by user');\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  static override code = 5;\n\n  override code = 5;\n\n  constructor() {\n    super('Unsupported Protocol Version');\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  static override code = 9;\n\n  override code = 9;\n\n  constructor(data?: any) {\n    super('Wallet deny your connection request');\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  static override code = 10;\n\n  override code = 10;\n\n  constructor() {\n    super('You are not connected to the wallet');\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  static override code = 11;\n\n  override code = 11;\n\n  constructor(address: Encoded.AccountAddress) {\n    super(`You are not subscribed for account ${address}`);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  static override code = 12;\n\n  override code = 12;\n\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    this.name = 'RpcInternalError';\n  }\n}\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcNoNetworkById extends RpcError {\n  static override code = 13;\n\n  override code = 13;\n\n  constructor(networkId: string) {\n    super(`Wallet can't find a network by id \"${networkId}\"`);\n    this.data = networkId;\n    this.name = 'RpcNoNetworkById';\n  }\n}\nrpcErrors.push(RpcNoNetworkById);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  static override code = -32601;\n\n  override code = -32601;\n\n  constructor() {\n    super('Method not found');\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\nrpcErrors.push(RpcMethodNotFoundError);\n","import AccountBase from './Base.js';\nimport { METHODS } from '../aepp-wallet-communication/schema.js';\nimport { ArgumentError, UnsupportedProtocolError } from '../utils/errors.js';\nimport { Encoded, Encoding, decode, encode } from '../utils/encoder.js';\nimport RpcClient from '../aepp-wallet-communication/rpc/RpcClient.js';\nimport { AeppApi, WalletApi } from '../aepp-wallet-communication/rpc/types.js';\n\n/**\n * Account provided by wallet\n * @param params - Params\n * @param params.rpcClient - RpcClient instance\n * @param params.address - RPC account address\n * @returns AccountRpc instance\n */\nexport default class AccountRpc extends AccountBase {\n  _rpcClient: RpcClient<WalletApi, AeppApi>;\n\n  override readonly address: Encoded.AccountAddress;\n\n  constructor(rpcClient: RpcClient<WalletApi, AeppApi>, address: Encoded.AccountAddress) {\n    super();\n    this._rpcClient = rpcClient;\n    this.address = address;\n  }\n\n  async sign(dataRaw: string | Uint8Array): Promise<Uint8Array> {\n    const data = encode(Buffer.from(dataRaw), Encoding.Bytearray);\n    const { signature } = await this._rpcClient.request(METHODS.unsafeSign, {\n      onAccount: this.address,\n      data,\n    });\n    return decode(signature);\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const res = await this._rpcClient.request(METHODS.sign, {\n      onAccount: this.address,\n      tx,\n      returnSigned: true,\n      networkId,\n      innerTx,\n    });\n    if (res.signedTransaction == null) {\n      throw new UnsupportedProtocolError('signedTransaction is missed in wallet response');\n    }\n    return res.signedTransaction;\n  }\n\n  override async signMessage(message: string): Promise<Uint8Array> {\n    const { signature } = await this._rpcClient.request(METHODS.signMessage, {\n      onAccount: this.address,\n      message,\n    });\n    return Buffer.from(signature, 'hex');\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    { name, version, contractAddress, networkId }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signTypedData, {\n      onAccount: this.address,\n      domain: {\n        name,\n        version,\n        networkId,\n        contractAddress,\n      },\n      aci,\n      data,\n    });\n    return signature;\n  }\n\n  override async signDelegation(delegation: Encoded.Bytearray): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegation, {\n      delegation,\n      onAccount: this.address,\n    });\n    return signature;\n  }\n}\n","import { Encoded } from '../../utils/encoder.js';\nimport { Domain, AciValue } from '../../utils/typed-data.js';\nimport { METHODS, SUBSCRIPTION_TYPES, WALLET_TYPE } from '../schema.js';\nimport { SignedTx } from '../../apis/node/index.js';\n\nexport interface WalletInfo {\n  id: string;\n  name: string;\n  networkId: string;\n  origin: string; // TODO: origin needs to be provided by transport\n  type: WALLET_TYPE;\n}\n\nexport interface Accounts {\n  connected: { [pub: Encoded.AccountAddress]: {} };\n  current: { [pub: Encoded.AccountAddress]: {} };\n}\n\nexport interface Node {\n  // TODO: name is not used, can be removed\n  name: string;\n  url: string;\n}\n\nexport interface Network {\n  networkId: string;\n  node?: Node;\n}\n\ntype Icons = Array<{ src: string; sizes?: string; type?: string; purpose?: string }>;\n\nexport const RPC_VERSION = 1;\n\nexport type NetworkToSelect = { networkId: string } | { nodeUrl: string };\n\nexport interface WalletApi {\n  [METHODS.connect]: (p: {\n    name: string;\n    icons?: Icons;\n    version: typeof RPC_VERSION;\n    connectNode: boolean;\n  }) => Promise<WalletInfo & { node?: Node }>;\n\n  [METHODS.closeConnection]: (p: any) => void;\n\n  [METHODS.subscribeAddress]: (p: {\n    type: SUBSCRIPTION_TYPES;\n    value: 'connected' | 'current';\n  }) => Promise<{ subscription: Array<'connected' | 'current'>; address: Accounts }>;\n\n  [METHODS.address]: () => Promise<Encoded.AccountAddress[]>;\n\n  [METHODS.unsafeSign]: (p: {\n    data: Encoded.Bytearray;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.sign]: (p: {\n    tx: Encoded.Transaction;\n    onAccount: Encoded.AccountAddress;\n    returnSigned: boolean;\n    /**\n     * @deprecated Wallet provided networkId will be used (current network)\n     * required to maintain backward compatibility with wallets using SDK v11.0.1 and below\n     * @see {@link https://github.com/aeternity/aepp-sdk-js/commit/153fd89a52c4eab39fcd659b356b36d32129c1ba}\n     */\n    networkId: string;\n    innerTx?: boolean;\n  }) => Promise<{\n    /**\n     * @deprecated this is not a hash at all, will be removed later at the same time\n     * as dropping ability to broadcast transaction by wallet\n     */\n    transactionHash?: Partial<SignedTx> & {\n      hash: Encoded.TxHash;\n      rawTx: Encoded.Transaction;\n    };\n    signedTransaction?: Encoded.Transaction;\n  }>;\n\n  [METHODS.signMessage]: (p: {\n    message: string;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: string }>;\n\n  [METHODS.signTypedData]: (p: {\n    domain: Domain;\n    aci: AciValue;\n    data: Encoded.ContractBytearray;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.signDelegation]: (p: {\n    delegation: Encoded.Bytearray;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.updateNetwork]: (a: NetworkToSelect) => Promise<null>;\n}\n\nexport interface AeppApi {\n  [METHODS.updateAddress]: (a: Accounts) => void;\n  [METHODS.updateNetwork]: (a: Network) => void;\n  [METHODS.readyToConnect]: (w: WalletInfo) => void;\n  [METHODS.closeConnection]: (p: any) => void;\n}\n","import { RpcError, RpcInternalError, RpcMethodNotFoundError } from '../schema.js';\nimport BrowserConnection from '../connection/Browser.js';\nimport { InvalidRpcMessageError, MissingCallbackError } from '../../utils/errors.js';\nimport { ensureError } from '../../utils/other.js';\n\ninterface JsonRpcRequest {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  params?: any;\n}\n\ninterface JsonRpcResponse {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  result?: any;\n  error?: {\n    code: number;\n    message: string;\n    data?: any;\n  };\n}\n\ntype RpcApiHandler = (p?: any) => any | undefined;\ntype RpcApi<Api> = { [k in keyof Api]: RpcApiHandler };\ntype WithOrigin<Api extends RpcApi<Api>> = {\n  [k in keyof Api]: (p: Parameters<Api[k]>[0], origin: string) => ReturnType<Api[k]>;\n};\n\n/**\n * Contain functionality for using RPC conection\n * @category aepp wallet communication\n * @param connection - Connection object\n * @param onDisconnect - Disconnect callback\n * @param methods - Object containing handlers for each request by name\n */\nexport default class RpcClient<\n  RemoteApi extends RpcApi<RemoteApi>,\n  LocalApi extends RpcApi<LocalApi>,\n> {\n  connection: BrowserConnection;\n\n  readonly #callbacks = new Map<\n    number,\n    { resolve: (v: any) => void; reject: (e: Error) => void }\n  >();\n\n  #messageId = 0;\n\n  readonly #methods: WithOrigin<LocalApi>;\n\n  constructor(\n    connection: BrowserConnection,\n    onDisconnect: () => void,\n    methods: WithOrigin<LocalApi>,\n  ) {\n    this.connection = connection;\n    this.#methods = methods;\n    connection.connect(this.#handleMessage.bind(this), onDisconnect);\n  }\n\n  async #handleMessage(msg: JsonRpcRequest | JsonRpcResponse, origin: string): Promise<void> {\n    if (msg?.jsonrpc !== '2.0') throw new InvalidRpcMessageError(JSON.stringify(msg));\n    if ('result' in msg || 'error' in msg) {\n      this.#processResponse(msg);\n      return;\n    }\n\n    const request = msg as JsonRpcRequest;\n    let result;\n    let error: Error | undefined;\n    try {\n      if (!(request.method in this.#methods)) throw new RpcMethodNotFoundError();\n      const methodName = request.method as keyof LocalApi;\n      result = await this.#methods[methodName](request.params, origin);\n    } catch (e) {\n      ensureError(e);\n      error = e;\n    }\n    if (request.id != null) {\n      this.#sendResponse(\n        request.id,\n        request.method as keyof LocalApi,\n        result,\n        error == null || error instanceof RpcError ? error : new RpcInternalError(),\n      );\n    }\n    if (error != null && !(error instanceof RpcError)) throw error;\n  }\n\n  #sendRequest(\n    id: number | undefined,\n    method: keyof RemoteApi | keyof LocalApi,\n    params?: any,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      ...(id != null ? { id } : {}),\n      method,\n      ...(params != null ? { params } : {}),\n    });\n  }\n\n  #sendResponse(\n    id: number,\n    method: keyof RemoteApi | keyof LocalApi, // TODO: remove as far it is not required in JSON RPC\n    result?: any,\n    error?: RpcError,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      id,\n      method,\n      ...(error != null ? { error: error.toJSON() } : { result }),\n    });\n  }\n\n  /**\n   * Make a request\n   * @param name - Method name\n   * @param params - Method params\n   * @returns Promise which will be resolved after receiving response message\n   */\n  async request<Name extends keyof RemoteApi>(\n    name: Name,\n    params: Parameters<RemoteApi[Name]>[0],\n  ): Promise<ReturnType<RemoteApi[Name]>> {\n    this.#sendRequest((this.#messageId += 1), name, params);\n    return new Promise((resolve, reject) => {\n      this.#callbacks.set(this.#messageId, { resolve, reject });\n    });\n  }\n\n  /**\n   * Make a notification\n   * @param name - Method name\n   * @param params - Method params\n   */\n  notify<Name extends keyof RemoteApi>(name: Name, params: Parameters<RemoteApi[Name]>[0]): void {\n    this.#sendRequest(undefined, name, params);\n  }\n\n  /**\n   * Process response message\n   * @param msg - Message object\n   */\n  #processResponse({ id, error, result }: { id: number; error?: any; result?: any }): void {\n    const callbacks = this.#callbacks.get(id);\n    if (callbacks == null) throw new MissingCallbackError(id);\n    if (error != null) callbacks.reject(RpcError.deserialize(error));\n    else callbacks.resolve(result);\n    this.#callbacks.delete(id);\n  }\n}\n","import AeSdkBase from './AeSdkBase.js';\nimport { OnAccount } from './AeSdkMethods.js';\nimport AccountBase from './account/Base.js';\nimport AccountRpc from './account/Rpc.js';\nimport { decode, Encoded } from './utils/encoder.js';\nimport {\n  Accounts,\n  RPC_VERSION,\n  WalletInfo,\n  Network,\n  WalletApi,\n  AeppApi,\n  Node as NodeRpc,\n  NetworkToSelect,\n} from './aepp-wallet-communication/rpc/types.js';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient.js';\nimport { METHODS, SUBSCRIPTION_TYPES } from './aepp-wallet-communication/schema.js';\nimport {\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  UnsubscribedAccountError,\n  UnAuthorizedAccountError,\n  RpcConnectionError,\n} from './utils/errors.js';\nimport Node from './Node.js';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser.js';\n\n/**\n * RPC handler for AEPP side\n * Contain functionality for wallet interaction and connect it to sdk\n * @deprecated use WalletConnectorFrame instead\n * @category aepp wallet communication\n */\nexport default class AeSdkAepp extends AeSdkBase {\n  name: string;\n\n  onAddressChange: (a: Accounts) => void;\n\n  onDisconnect: (p: any) => void;\n\n  onNetworkChange: (a: Network) => void;\n\n  rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  _accounts?: Accounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Aepp name\n   * @param options.onAddressChange - Call-back function for update address event\n   * @param options.onDisconnect - Call-back function for disconnect event\n   * @param options.onNetworkChange - Call-back function for update network event\n   */\n  constructor({\n    name,\n    onAddressChange = () => {},\n    onDisconnect = () => {},\n    onNetworkChange = () => {},\n    ...other\n  }: {\n    name: string;\n    onAddressChange?: (a: Accounts) => void;\n    onDisconnect?: (p: any) => void;\n    onNetworkChange?: (a: Network) => void;\n  } & ConstructorParameters<typeof AeSdkBase>[0]) {\n    super(other);\n    this.onAddressChange = onAddressChange;\n    this.onDisconnect = onDisconnect;\n    this.onNetworkChange = onNetworkChange;\n    this.name = name;\n  }\n\n  override _resolveAccount(account: OnAccount = this.addresses()[0]): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (!this.addresses().includes(address)) throw new UnAuthorizedAccountError(address);\n      this._ensureConnected();\n      account = new AccountRpc(this.rpcClient, address);\n    }\n    if (account == null) this._ensureAccountAccess();\n    return super._resolveAccount(account);\n  }\n\n  override addresses(): Encoded.AccountAddress[] {\n    if (this._accounts == null) return [];\n    const current = Object.keys(this._accounts.current)[0];\n    return [\n      ...(current != null ? [current] : []),\n      ...Object.keys(this._accounts.connected),\n    ] as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Connect to wallet\n   * @param connection - Wallet connection object\n   * @param options - Options\n   * @param options.connectNode - Request wallet to bind node\n   * @param options.name - Node name\n   */\n  async connectToWallet(\n    connection: BrowserConnection,\n    { connectNode = false, name = 'wallet-node' }: { connectNode?: boolean; name?: string } = {},\n  ): Promise<WalletInfo & { node?: NodeRpc }> {\n    if (this.rpcClient != null)\n      throw new AlreadyConnectedError('You are already connected to wallet');\n    let disconnectParams: any;\n\n    const updateNetwork = (params: Network): void => {\n      if (connectNode) {\n        if (params.node?.url == null) throw new RpcConnectionError('Missing URLs of the Node');\n        this.pool.delete(name);\n        this.addNode(name, new Node(params.node.url), true);\n      }\n      this.onNetworkChange(params);\n    };\n\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        delete this.rpcClient;\n        delete this._accounts;\n        this.onDisconnect(disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: (params) => {\n          this._accounts = params;\n          this.onAddressChange(params);\n        },\n        [METHODS.updateNetwork]: updateNetwork,\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    const walletInfo = await client.request(METHODS.connect, {\n      name: this.name,\n      version: RPC_VERSION,\n      connectNode,\n    });\n    updateNetwork(walletInfo);\n    this.rpcClient = client;\n    return walletInfo;\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnectWallet(): void {\n    this._ensureConnected();\n    this.rpcClient.notify(METHODS.closeConnection, { reason: 'bye' });\n    this.rpcClient.connection.disconnect();\n  }\n\n  /**\n   * Ask addresses from wallet\n   * @returns Addresses from wallet\n   */\n  async askAddresses(): Promise<Encoded.AccountAddress[]> {\n    this._ensureConnected();\n    return this.rpcClient.request(METHODS.address, undefined);\n  }\n\n  /**\n   * Subscribe for addresses from wallet\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAddress(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<ReturnType<WalletApi[METHODS.subscribeAddress]>> {\n    this._ensureConnected();\n    const result = await this.rpcClient.request(METHODS.subscribeAddress, { type, value });\n    this._accounts = result.address;\n    return result;\n  }\n\n  /**\n   * Ask wallet to select a network\n   */\n  async askToSelectNetwork(network: NetworkToSelect): Promise<void> {\n    this._ensureConnected();\n    await this.rpcClient.request(METHODS.updateNetwork, network);\n  }\n\n  _ensureConnected(): asserts this is AeSdkAepp & {\n    rpcClient: NonNullable<AeSdkAepp['rpcClient']>;\n  } {\n    if (this.rpcClient != null) return;\n    throw new NoWalletConnectedError('You are not connected to Wallet');\n  }\n\n  _ensureAccountAccess(): asserts this is AeSdkAepp & {\n    rpcClient: NonNullable<AeSdkAepp['rpcClient']>;\n  } {\n    this._ensureConnected();\n    if (this.addresses().length !== 0) return;\n    throw new UnsubscribedAccountError();\n  }\n}\n","import { EventEmitter } from 'eventemitter3';\nimport AccountRpc from '../account/Rpc.js';\nimport { Encoded } from '../utils/encoder.js';\nimport {\n  Accounts,\n  RPC_VERSION,\n  Network,\n  WalletApi,\n  AeppApi,\n  NetworkToSelect,\n} from './rpc/types.js';\nimport RpcClient from './rpc/RpcClient.js';\nimport { METHODS, SUBSCRIPTION_TYPES } from './schema.js';\nimport { NoWalletConnectedError } from '../utils/errors.js';\nimport BrowserConnection from './connection/Browser.js';\n\ninterface EventsBase {\n  accountsChange: (accounts: AccountRpc[]) => void;\n  disconnect: (p: any) => void;\n}\n\nexport default abstract class WalletConnectorFrameBase<T extends {}> extends EventEmitter<\n  EventsBase | T\n> {\n  #rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  #getRpcClient(): RpcClient<WalletApi, AeppApi> {\n    if (this.#rpcClient == null)\n      throw new NoWalletConnectedError('You are not connected to Wallet');\n    return this.#rpcClient;\n  }\n\n  /**\n   * Is connected to wallet\n   */\n  get isConnected(): boolean {\n    return this.#rpcClient != null;\n  }\n\n  #accounts: AccountRpc[] = [];\n\n  /**\n   * Accounts provided by wallet over subscription\n   */\n  get accounts(): AccountRpc[] {\n    return this.#accounts;\n  }\n\n  protected constructor() {\n    super();\n  }\n\n  protected abstract _updateNetwork(params: Network): void;\n\n  #updateAccounts(params: Accounts): void {\n    const addresses = [\n      ...new Set([...Object.keys(params.current), ...Object.keys(params.connected)]),\n    ] as Encoded.AccountAddress[];\n    this.#accounts = addresses.map((address) => new AccountRpc(this.#getRpcClient(), address));\n    this.emit('accountsChange', this.#accounts);\n  }\n\n  static async _connect(\n    name: string,\n    connection: BrowserConnection,\n    connector: WalletConnectorFrameBase<any>,\n    connectNode: boolean,\n  ): Promise<void> {\n    let disconnectParams: any;\n\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        connector.#rpcClient = undefined;\n        connector.#accounts = [];\n        connector.emit('disconnect', disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: connector.#updateAccounts.bind(connector),\n        [METHODS.updateNetwork]: connector._updateNetwork.bind(connector),\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    connector.#rpcClient = client;\n    const walletInfo = await connector.#rpcClient.request(METHODS.connect, {\n      name,\n      version: RPC_VERSION,\n      connectNode,\n    });\n    connector._updateNetwork(walletInfo);\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnect(): void {\n    const client = this.#getRpcClient();\n    client.notify(METHODS.closeConnection, { reason: 'bye' });\n    client.connection.disconnect();\n  }\n\n  /**\n   * Request accounts from wallet\n   */\n  async getAccounts(): Promise<AccountRpc[]> {\n    const client = this.#getRpcClient();\n    const addresses = await client.request(METHODS.address, undefined);\n    return addresses.map((address) => new AccountRpc(client, address));\n  }\n\n  /**\n   * Subscribe for wallet accounts, get account updates adding handler to `accountsChange` event\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAccounts(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<AccountRpc[]> {\n    const result = await this.#getRpcClient().request(METHODS.subscribeAddress, { type, value });\n    this.#updateAccounts(result.address);\n    return this.#accounts;\n  }\n\n  /**\n   * Ask wallet to select a network\n   */\n  async askToSelectNetwork(network: NetworkToSelect): Promise<void> {\n    await this.#getRpcClient().request(METHODS.updateNetwork, network);\n  }\n}\n","import { Network } from './rpc/types.js';\nimport BrowserConnection from './connection/Browser.js';\nimport WalletConnectorFrameBase from './WalletConnectorFrameBase.js';\n\ninterface EventsNetworkId {\n  networkIdChange: (networkId: string) => void;\n}\n\n/**\n * Connect to wallet as iframe/web-extension\n * @category aepp wallet communication\n */\nexport default class WalletConnectorFrame extends WalletConnectorFrameBase<EventsNetworkId> {\n  #networkId = '';\n\n  /**\n   * The last network id reported by wallet\n   */\n  get networkId(): string {\n    return this.#networkId;\n  }\n\n  protected override _updateNetwork(params: Network): void {\n    this.#networkId = params.networkId;\n    this.emit('networkIdChange', this.#networkId);\n  }\n\n  /**\n   * Connect to wallet\n   * @param name - Aepp name\n   * @param connection - Wallet connection object\n   */\n  static async connect(name: string, connection: BrowserConnection): Promise<WalletConnectorFrame> {\n    const connector = new WalletConnectorFrame();\n    await WalletConnectorFrame._connect(name, connection, connector, false);\n    return connector;\n  }\n}\n","import { Network } from './rpc/types.js';\nimport { RpcConnectionError } from '../utils/errors.js';\nimport Node from '../Node.js';\nimport BrowserConnection from './connection/Browser.js';\nimport WalletConnectorFrameBase from './WalletConnectorFrameBase.js';\n\ninterface EventsWithNode {\n  nodeChange: (node: Node) => void;\n}\n\n/**\n * Connect to wallet as iframe/web-extension, asks wallet to provide node url\n * In comparison with WalletConnectorFrame, this would work better for decentralized applications\n * @category aepp wallet communication\n */\nexport default class WalletConnectorFrameWithNode extends WalletConnectorFrameBase<EventsWithNode> {\n  #node: Node = null as unknown as Node;\n\n  /**\n   * The node instance provided by wallet\n   */\n  get node(): Node {\n    return this.#node;\n  }\n\n  protected override _updateNetwork(params: Network): void {\n    if (params.node?.url == null) throw new RpcConnectionError('Missing URLs of the Node');\n    this.#node = new Node(params.node.url);\n    this.emit('nodeChange', this.#node);\n  }\n\n  /**\n   * Connect to wallet\n   * @param name - Aepp name\n   * @param connection - Wallet connection object\n   */\n  static async connect(\n    name: string,\n    connection: BrowserConnection,\n  ): Promise<WalletConnectorFrameWithNode> {\n    const connector = new WalletConnectorFrameWithNode();\n    await super._connect(name, connection, connector, true);\n    return connector;\n  }\n}\n","import JsonBig from 'json-bigint';\nimport { BigNumber } from 'bignumber.js';\nimport { mapObject } from './other.js';\n\nconst jsonBig = JsonBig({ storeAsString: true });\n\nconst convertValuesToBigNumbers = (value: any): any => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return mapObject(value, ([k, v]) => [k, convertValuesToBigNumbers(v)]);\n  }\n  if (Array.isArray(value)) {\n    return value.map((item) => convertValuesToBigNumbers(item));\n  }\n  if (typeof value === 'string' && new BigNumber(value).toString(10) === value) {\n    const bn = new BigNumber(value);\n    bn.toJSON = () => bn.toString(10);\n    return bn;\n  }\n  return value;\n};\n\nexport default {\n  stringify: (...args: Parameters<(typeof JsonBig)['stringify']>): string =>\n    jsonBig.stringify(convertValuesToBigNumbers(args[0]), ...args.slice(1)),\n  parse: jsonBig.parse,\n};\n","import nacl from 'tweetnacl';\nimport AeSdk from './AeSdk.js';\nimport verifyTransaction from './tx/validator.js';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient.js';\nimport {\n  METHODS,\n  RPC_STATUS,\n  SUBSCRIPTION_TYPES,\n  WALLET_TYPE,\n  RpcInvalidTransactionError,\n  RpcNotAuthorizeError,\n  RpcPermissionDenyError,\n  RpcUnsupportedProtocolError,\n} from './aepp-wallet-communication/schema.js';\nimport { InternalError, UnknownRpcClientError } from './utils/errors.js';\nimport AccountBase from './account/Base.js';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser.js';\nimport {\n  Accounts,\n  AeppApi,\n  Network,\n  NetworkToSelect,\n  RPC_VERSION,\n  WalletApi,\n  WalletInfo,\n} from './aepp-wallet-communication/rpc/types.js';\nimport { Encoded, Encoding, encode, decode } from './utils/encoder.js';\nimport jsonBig from './utils/json-big.js';\n\ntype RpcClientWallet = RpcClient<AeppApi, WalletApi>;\n\ntype OnConnection = (\n  clientId: string,\n  params: Omit<Parameters<WalletApi[METHODS.connect]>[0], 'version'>,\n  origin: string,\n) => void;\n\ntype OnSubscription = (\n  clientId: string,\n  params: Parameters<WalletApi[METHODS.subscribeAddress]>[0],\n  origin: string,\n) => void;\n\ntype OnDisconnect = (\n  clientId: string,\n  params: Parameters<WalletApi[METHODS.closeConnection]>[0],\n) => void;\n\ntype OnAskAccounts = (clientId: string, params: undefined, origin: string) => void;\n\ntype OnAskToSelectNetwork = (clientId: string, params: NetworkToSelect, origin: string) => void;\n\ninterface RpcClientsInfo {\n  id: string;\n  status: RPC_STATUS;\n  connectNode: boolean;\n  addressSubscription: Set<'connected' | 'current'>;\n  rpc: RpcClientWallet;\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @category aepp wallet communication\n */\nexport default class AeSdkWallet extends AeSdk {\n  id: string;\n\n  _type: WALLET_TYPE;\n\n  name: string;\n\n  _clients = new Map<string, RpcClientsInfo>();\n\n  onConnection: OnConnection;\n\n  onSubscription: OnSubscription;\n\n  onDisconnect: OnDisconnect;\n\n  onAskAccounts: OnAskAccounts;\n\n  onAskToSelectNetwork: OnAskToSelectNetwork;\n\n  /**\n   * @param options - Options\n   * @param options.name - Wallet name\n   * @param options.id - Wallet id\n   * @param options.type - Wallet type\n   * @param options.onConnection - Call-back function for incoming AEPP connection\n   * @param options.onSubscription - Call-back function for incoming AEPP account subscription\n   * @param options.onAskAccounts - Call-back function for incoming AEPP get address request\n   * @param options.onAskToSelectNetwork - Call-back function for incoming AEPP select network\n   * request. If the request is fine then this function should change the current network.\n   * @param options.onDisconnect - Call-back function for disconnect event\n   */\n  constructor({\n    name,\n    id,\n    type,\n    onConnection,\n    onSubscription,\n    onDisconnect,\n    onAskAccounts,\n    onAskToSelectNetwork,\n    ...options\n  }: {\n    id: string;\n    type: WALLET_TYPE;\n    name: string;\n    onConnection: OnConnection;\n    onSubscription: OnSubscription;\n    onDisconnect: OnDisconnect;\n    onAskAccounts: OnAskAccounts;\n    onAskToSelectNetwork: OnAskToSelectNetwork;\n  } & ConstructorParameters<typeof AeSdk>[0]) {\n    super(options);\n    this.onConnection = onConnection;\n    this.onSubscription = onSubscription;\n    this.onDisconnect = onDisconnect;\n    this.onAskAccounts = onAskAccounts;\n    this.onAskToSelectNetwork = onAskToSelectNetwork;\n    this.name = name;\n    this.id = id;\n    this._type = type;\n  }\n\n  _getAccountsForClient({ addressSubscription }: RpcClientsInfo): Accounts {\n    const { current, connected } = this.getAccounts();\n    return {\n      current:\n        addressSubscription.has('current') || addressSubscription.has('connected') ? current : {},\n      connected: addressSubscription.has('connected') ? connected : {},\n    };\n  }\n\n  _pushAccountsToApps(): void {\n    if (this._clients == null) return;\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .filter((client) => client.addressSubscription.size !== 0)\n      .forEach((client) =>\n        client.rpc.notify(METHODS.updateAddress, this._getAccountsForClient(client)),\n      );\n  }\n\n  override selectAccount(address: Encoded.AccountAddress): void {\n    super.selectAccount(address);\n    this._pushAccountsToApps();\n  }\n\n  override addAccount(account: AccountBase, options?: Parameters<AeSdk['addAccount']>[1]): void {\n    super.addAccount(account, options);\n    this._pushAccountsToApps();\n  }\n\n  _getNode(): { node: Network['node'] } {\n    this.ensureNodeConnected();\n    return { node: { url: this.api.$host, name: this.selectedNodeName } };\n  }\n\n  override async selectNode(name: string): Promise<void> {\n    super.selectNode(name);\n    const networkId = await this.api.getNetworkId();\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .forEach((client) => {\n        client.rpc.notify(METHODS.updateNetwork, {\n          networkId,\n          ...(client.connectNode && this._getNode()),\n        });\n      });\n  }\n\n  _getClient(clientId: string): RpcClientsInfo {\n    const client = this._clients.get(clientId);\n    if (client == null) throw new UnknownRpcClientError(clientId);\n    return client;\n  }\n\n  _isRpcClientConnected(clientId: string): boolean {\n    return (\n      RPC_STATUS.CONNECTED === this._getClient(clientId).status &&\n      this._getClient(clientId).rpc.connection.isConnected()\n    );\n  }\n\n  _disconnectRpcClient(clientId: string): void {\n    const client = this._getClient(clientId);\n    client.rpc.connection.disconnect();\n    client.status = RPC_STATUS.DISCONNECTED;\n    client.addressSubscription = new Set();\n  }\n\n  /**\n   * Remove specific RpcClient by ID\n   * @param id - Client ID\n   */\n  removeRpcClient(id: string): void {\n    this._disconnectRpcClient(id);\n    this._clients.delete(id);\n  }\n\n  /**\n   * Add new client by AEPP connection\n   * @param clientConnection - AEPP connection object\n   * @returns Client ID\n   */\n  addRpcClient(clientConnection: BrowserConnection): string {\n    // @TODO  detect if aepp has some history based on origin????\n    // if yes use this instance for connection\n    const id = Buffer.from(nacl.randomBytes(8)).toString('base64');\n    let disconnectParams: any;\n    const client: RpcClientsInfo = {\n      id,\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST,\n      addressSubscription: new Set(),\n      connectNode: false,\n      rpc: new RpcClient<AeppApi, WalletApi>(\n        clientConnection,\n        () => {\n          this._clients.delete(id);\n          this.onDisconnect(id, disconnectParams); // also related info\n        },\n        {\n          [METHODS.closeConnection]: (params) => {\n            disconnectParams = params;\n            this._disconnectRpcClient(id);\n          },\n          // Store client info and prepare two fn for each client `connect` and `denyConnection`\n          // which automatically prepare and send response for that client\n          [METHODS.connect]: async ({ name, version, icons, connectNode }, origin) => {\n            if (version !== RPC_VERSION) throw new RpcUnsupportedProtocolError();\n\n            await this.onConnection(id, { name, icons, connectNode }, origin);\n            client.status = RPC_STATUS.CONNECTED;\n            client.connectNode = connectNode;\n            return {\n              ...(await this.getWalletInfo()),\n              ...(connectNode && this._getNode()),\n            };\n          },\n          [METHODS.subscribeAddress]: async ({ type, value }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n\n            switch (type) {\n              case SUBSCRIPTION_TYPES.subscribe:\n                // TODO: remove `type` as it always subscribe\n                await this.onSubscription(id, { type, value }, origin);\n                client.addressSubscription.add(value);\n                break;\n              case SUBSCRIPTION_TYPES.unsubscribe:\n                client.addressSubscription.delete(value);\n                break;\n              default:\n                throw new InternalError(`Unknown subscription type: ${type}`);\n            }\n\n            return {\n              subscription: Array.from(client.addressSubscription),\n              address: this._getAccountsForClient(client),\n            };\n          },\n          [METHODS.address]: async (params, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            await this.onAskAccounts(id, params, origin);\n            return this.addresses();\n          },\n          [METHODS.sign]: async (\n            { tx, onAccount = this.address, returnSigned, innerTx },\n            origin,\n          ) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              onAccount,\n              aeppOrigin: origin,\n              aeppRpcClientId: id,\n              innerTx,\n            };\n            if (returnSigned || innerTx === true) {\n              return { signedTransaction: await this.signTransaction(tx, parameters) };\n            }\n            try {\n              return jsonBig.parse(\n                jsonBig.stringify({\n                  transactionHash: await this.sendTransaction(tx, { ...parameters, verify: false }),\n                }),\n              );\n            } catch (error) {\n              const validation = await verifyTransaction(tx, this.api);\n              if (validation.length > 0) throw new RpcInvalidTransactionError(validation);\n              throw error;\n            }\n          },\n          [METHODS.signMessage]: async ({ message, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            return {\n              signature: Buffer.from(await this.signMessage(message, parameters)).toString('hex'),\n            };\n          },\n          [METHODS.signTypedData]: async (\n            { domain, aci, data, onAccount = this.address },\n            origin,\n          ) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              ...domain,\n              onAccount,\n              aeppOrigin: origin,\n              aeppRpcClientId: id,\n            };\n            return {\n              signature: await this.signTypedData(data, aci, parameters),\n            };\n          },\n          [METHODS.unsafeSign]: async ({ data, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) throw new RpcPermissionDenyError(onAccount);\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            const signature = encode(await this.sign(decode(data), parameters), Encoding.Signature);\n            return { signature };\n          },\n          [METHODS.signDelegation]: async ({ delegation, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) throw new RpcPermissionDenyError(onAccount);\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            const signature = await this.signDelegation(delegation, parameters);\n            return { signature };\n          },\n          [METHODS.updateNetwork]: async (params, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            await this.onAskToSelectNetwork(id, params, origin);\n            return null;\n          },\n        },\n      ),\n    };\n    this._clients.set(id, client);\n    return id;\n  }\n\n  /**\n   * Send shareWalletInfo message to notify AEPP about wallet\n   * @param clientId - ID of RPC client send message to\n   */\n  async shareWalletInfo(clientId: string): Promise<void> {\n    this._getClient(clientId).rpc.notify(METHODS.readyToConnect, await this.getWalletInfo());\n  }\n\n  /**\n   * Get Wallet info object\n   * @returns Object with wallet information\n   */\n  async getWalletInfo(): Promise<WalletInfo> {\n    const { origin } = window.location;\n    return {\n      id: this.id,\n      name: this.name,\n      networkId: await this.api.getNetworkId(),\n      origin: origin === 'file://' ? '*' : origin,\n      type: this._type,\n    };\n  }\n\n  /**\n   * Get Wallet accounts\n   * @returns Object with accounts information (\\{ connected: Object, current: Object \\})\n   */\n  getAccounts(): Accounts {\n    return {\n      current: this.selectedAddress != null ? { [this.selectedAddress]: {} } : {},\n      connected: this.addresses()\n        .filter((a) => a !== this.selectedAddress)\n        .reduce((acc, a) => ({ ...acc, [a]: {} }), {}),\n    };\n  }\n}\n","import Node from '../Node.js';\nimport AccountBase from './Base.js';\n\n/**\n * A factory class that generates instances of AccountBase by index.\n */\nexport default abstract class AccountBaseFactory {\n  /**\n   * Get an instance of AccountBase for a given account index.\n   * @param accountIndex - Index of account\n   */\n  abstract initialize(accountIndex: number): Promise<AccountBase>;\n\n  /**\n   * Discovers accounts in set that already have been used (has any on-chain transactions).\n   * It returns an empty array if none of accounts been used.\n   * If a used account is preceded by an unused account then it would be ignored.\n   * @param node - Instance of Node to get account information from\n   */\n  async discover(node: Node): Promise<AccountBase[]> {\n    let index = 0;\n    const result = [];\n    let account;\n    do {\n      if (account != null) result.push(account);\n      account = await this.initialize(index);\n      index += 1;\n    } while (\n      await node.getAccountByPubkey(account.address).then(\n        () => true,\n        () => false,\n      )\n    );\n    return result;\n  }\n}\n","import { mnemonicToSeed } from '@scure/bip39';\nimport tweetnaclAuth from 'tweetnacl-auth';\nimport AccountBaseFactory from './BaseFactory.js';\nimport AccountMemory from './Memory.js';\nimport { encode, Encoding, Encoded, decode } from '../utils/encoder.js';\nimport { concatBuffers } from '../utils/other.js';\nimport { InternalError } from '../utils/errors.js';\n\nexport const ED25519_CURVE = Buffer.from('ed25519 seed');\nconst HARDENED_OFFSET = 0x80000000;\n\ninterface KeyTreeNode {\n  secretKey: Uint8Array;\n  chainCode: Uint8Array;\n}\n\nexport function deriveKey(message: Uint8Array, key: Uint8Array): KeyTreeNode {\n  const I = tweetnaclAuth.full(message, key);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\nexport function derivePathFromKey(key: KeyTreeNode, segments: readonly number[]): KeyTreeNode {\n  return segments.reduce(({ secretKey, chainCode }, segment) => {\n    const indexBuffer = Buffer.allocUnsafe(4);\n    indexBuffer.writeUInt32BE(segment + HARDENED_OFFSET, 0);\n    const data = concatBuffers([Buffer.alloc(1, 0), secretKey, indexBuffer]);\n    return deriveKey(data, chainCode);\n  }, key);\n}\n\ninterface Wallet {\n  secretKey: Encoded.Bytearray;\n  chainCode: Encoded.Bytearray;\n}\n\n/**\n * A factory class that generates instances of AccountMemory based on provided mnemonic phrase.\n */\nexport default class AccountMnemonicFactory extends AccountBaseFactory {\n  readonly #mnemonic: string | undefined;\n\n  #wallet: Wallet | undefined;\n\n  /**\n   * @param mnemonicOrWallet - BIP39-compatible mnemonic phrase or a wallet derived from mnemonic\n   */\n  constructor(mnemonicOrWallet: string | Wallet) {\n    super();\n    if (typeof mnemonicOrWallet === 'string') this.#mnemonic = mnemonicOrWallet;\n    else this.#wallet = mnemonicOrWallet;\n  }\n\n  /**\n   * Get a wallet to initialize AccountMnemonicFactory instead mnemonic phrase.\n   * In comparison with mnemonic, the wallet can be used to derive aeternity accounts only.\n   */\n  async getWallet(): Promise<Wallet> {\n    if (this.#wallet != null) return this.#wallet;\n    if (this.#mnemonic == null)\n      throw new InternalError(\n        'AccountMnemonicFactory should be initialized with mnemonic or wallet',\n      );\n    const seed = await mnemonicToSeed(this.#mnemonic);\n    const masterKey = deriveKey(seed, ED25519_CURVE);\n    const walletKey = derivePathFromKey(masterKey, [44, 457]);\n    this.#wallet = {\n      secretKey: encode(walletKey.secretKey, Encoding.Bytearray),\n      chainCode: encode(walletKey.chainCode, Encoding.Bytearray),\n    };\n    return this.#wallet;\n  }\n\n  async #getAccountSecretKey(accountIndex: number): Promise<Encoded.AccountSecretKey> {\n    const wallet = await this.getWallet();\n    const walletKey = {\n      secretKey: decode(wallet.secretKey),\n      chainCode: decode(wallet.chainCode),\n    };\n    const raw = derivePathFromKey(walletKey, [accountIndex, 0, 0]).secretKey;\n    return encode(raw, Encoding.AccountSecretKey);\n  }\n\n  /**\n   * Get an instance of AccountMemory for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountMemory> {\n    return new AccountMemory(await this.#getAccountSecretKey(accountIndex));\n  }\n}\n","import AccountBase from './Base.js';\nimport {\n  ArgumentError,\n  InternalError,\n  InvalidAuthDataError,\n  NotImplementedError,\n} from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { getAccount } from '../chain.js';\nimport Contract from '../contract/Contract.js';\nimport { buildTxAsync, buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\n/**\n * Generalized account class\n */\nexport default class AccountGeneralized extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  #authFun?: string;\n\n  /**\n   * @param address - Address of generalized account\n   */\n  constructor(address: Encoded.AccountAddress) {\n    super();\n    decode(address);\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError(\"Can't sign using generalized account\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(): Promise<Uint8Array> {\n    throw new NotImplementedError(\"Can't sign using generalized account\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError(\"Can't sign using generalized account\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using generalized account');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { authData, onCompiler, onNode }: Parameters<AccountBase['signTransaction']>[1],\n  ): Promise<Encoded.Transaction> {\n    if (authData == null || onCompiler == null || onNode == null) {\n      throw new ArgumentError('authData, onCompiler, onNode', 'provided', null);\n    }\n    const { callData, sourceCode, args, fee, gasLimit, gasPrice } =\n      typeof authData === 'function' ? await authData(tx) : authData;\n\n    const authCallData =\n      callData ??\n      (await (async () => {\n        if (this.#authFun == null) {\n          const account = await getAccount(this.address, { onNode });\n          if (account.kind !== 'generalized') {\n            throw new ArgumentError('account kind', 'generalized', account.kind);\n          }\n          this.#authFun = account.authFun;\n        }\n        if (this.#authFun == null) {\n          throw new InternalError('Account in generalised, but authFun not provided');\n        }\n\n        if (sourceCode == null || args == null) {\n          throw new InvalidAuthDataError('Auth data must contain sourceCode and args or callData.');\n        }\n        const contract = await Contract.initialize({ onCompiler, onNode, sourceCode });\n        return contract._calldata.encode(contract._name, this.#authFun, args);\n      })());\n\n    const gaMetaTx = await buildTxAsync({\n      tag: Tag.GaMetaTx,\n      tx: { tag: Tag.SignedTx, encodedTx: decode(tx), signatures: [] },\n      gaId: this.address,\n      authData: authCallData,\n      fee,\n      gasLimit,\n      gasPrice,\n      onNode,\n    });\n    return buildTx({ tag: Tag.SignedTx, encodedTx: decode(gaMetaTx), signatures: [] });\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountBase from './Base.js';\nimport { ArgumentError, NotImplementedError } from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\nexport const CLA = 0xe0;\nexport const GET_ADDRESS = 0x02;\nexport const SIGN_TRANSACTION = 0x04;\nexport const GET_APP_CONFIGURATION = 0x06;\nexport const SIGN_PERSONAL_MESSAGE = 0x08;\n\n/**\n * Ledger wallet account class\n */\nexport default class AccountLedger extends AccountBase {\n  /**\n   * @param transport - Connection to Ledger to use\n   * @param index - Index of account\n   * @param address - Address of account\n   */\n  constructor(\n    readonly transport: Transport,\n    readonly index: number,\n    override readonly address: Encoded.AccountAddress,\n  ) {\n    super();\n    transport.decorateAppAPIMethods(this, ['signTransaction', 'signMessage'], 'w0w');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using Ledger HW');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountLedger');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    const rawTx = decode(tx);\n    let offset = 0;\n    const headerLength = 4 + 1 + 4;\n    const networkIdBuffer = Buffer.from(networkId);\n    const toSend = [];\n    while (offset !== rawTx.length) {\n      const maxChunkSize = offset === 0 ? 150 - headerLength - networkIdBuffer.length : 150;\n      const chunkSize = offset + maxChunkSize > rawTx.length ? rawTx.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(\n        offset === 0 ? headerLength + networkIdBuffer.length + chunkSize : chunkSize,\n      );\n      if (offset === 0) {\n        let bufferOffset = buffer.writeUInt32BE(this.index, 0);\n        bufferOffset = buffer.writeUInt32BE(rawTx.length, bufferOffset);\n        bufferOffset = buffer.writeUInt8(networkIdBuffer.length, bufferOffset);\n        bufferOffset += networkIdBuffer.copy(buffer, bufferOffset, 0, networkIdBuffer.length);\n        rawTx.copy(buffer, bufferOffset, 0, 150 - bufferOffset);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(CLA, SIGN_TRANSACTION, i === 0 ? 0x00 : 0x80, 0x00, data);\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    const signatures = [response.subarray(0, 64)];\n\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rawTx, signatures });\n  }\n\n  override async signMessage(messageStr: string): Promise<Uint8Array> {\n    let offset = 0;\n    const message = Buffer.from(messageStr);\n    const toSend = [];\n    while (offset !== message.length) {\n      const maxChunkSize = offset === 0 ? 150 - 4 - 4 : 150;\n      const chunkSize =\n        offset + maxChunkSize > message.length ? message.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(offset === 0 ? 4 + 4 + chunkSize : chunkSize);\n      if (offset === 0) {\n        buffer.writeUInt32BE(this.index, 0);\n        buffer.writeUInt32BE(message.length, 4);\n        message.copy(buffer, 4 + 4, offset, offset + chunkSize);\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(CLA, SIGN_PERSONAL_MESSAGE, i === 0 ? 0x00 : 0x80, 0x00, data);\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    return response.subarray(0, 64);\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountLedger, { CLA, GET_ADDRESS, GET_APP_CONFIGURATION } from './Ledger.js';\nimport { UnsupportedVersionError } from '../utils/errors.js';\nimport { Encoded } from '../utils/encoder.js';\nimport semverSatisfies from '../utils/semver-satisfies.js';\nimport AccountBaseFactory from './BaseFactory.js';\n\ninterface AppConfiguration {\n  version: string;\n}\n\n/**\n * A factory class that generates instances of AccountLedger based on provided transport.\n */\nexport default class AccountLedgerFactory extends AccountBaseFactory {\n  /**\n   * @param transport - Connection to Ledger to use\n   */\n  constructor(readonly transport: Transport) {\n    super();\n    transport.decorateAppAPIMethods(this, ['getAddress', 'getAppConfiguration'], 'w0w');\n  }\n\n  #ensureReadyPromise?: Promise<void>;\n\n  /**\n   * It throws an exception if Aeternity app on Ledger has an incompatible version, not opened or\n   * not installed.\n   */\n  async ensureReady(): Promise<void> {\n    const { version } = await this.#getAppConfiguration();\n    const args = [version, '0.4.4', '0.5.0'] as const;\n    if (!semverSatisfies(...args))\n      throw new UnsupportedVersionError('Aeternity app on Ledger', ...args);\n    this.#ensureReadyPromise = Promise.resolve();\n  }\n\n  async #ensureReady(): Promise<void> {\n    this.#ensureReadyPromise ??= this.ensureReady();\n    return this.#ensureReadyPromise;\n  }\n\n  async #getAppConfiguration(): Promise<AppConfiguration> {\n    const response = await this.transport.send(CLA, GET_APP_CONFIGURATION, 0x00, 0x00);\n    return {\n      version: [response[1], response[2], response[3]].join('.'),\n    };\n  }\n\n  /**\n   * @returns the version of Aeternity app installed on Ledger wallet\n   */\n  async getAppConfiguration(): Promise<AppConfiguration> {\n    return this.#getAppConfiguration();\n  }\n\n  /**\n   * Get `ak_`-prefixed address for a given account index.\n   * @param accountIndex - Index of account\n   * @param verify - Ask user to confirm address by showing it on the device screen\n   */\n  async getAddress(accountIndex: number, verify = false): Promise<Encoded.AccountAddress> {\n    await this.#ensureReady();\n    const buffer = Buffer.alloc(4);\n    buffer.writeUInt32BE(accountIndex, 0);\n    const response = await this.transport.send(\n      CLA,\n      GET_ADDRESS,\n      verify ? 0x01 : 0x00,\n      0x00,\n      buffer,\n    );\n    const addressLength = response[0];\n    return response.subarray(1, 1 + addressLength).toString('ascii') as Encoded.AccountAddress;\n  }\n\n  /**\n   * Get an instance of AccountLedger for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountLedger> {\n    return new AccountLedger(this.transport, accountIndex, await this.getAddress(accountIndex));\n  }\n}\n","import type { BaseProvider } from '@metamask/providers';\nimport AccountBase from './Base.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { ArgumentError, InternalError, NotImplementedError } from '../utils/errors.js';\n\nexport const snapId = 'npm:@aeternity-snap/plugin';\n\nexport async function invokeSnap<R>(\n  provider: BaseProvider,\n  method: string,\n  params: unknown,\n  key: string,\n): Promise<R> {\n  const response = await provider.request<{ [k in string]: unknown }>({\n    method: 'wallet_invokeSnap',\n    params: { snapId, request: { method, params } },\n  });\n  if (response == null) throw new InternalError('Empty MetaMask response');\n  if (!(key in response)) {\n    throw new InternalError(`Key ${key} missed in response ${JSON.stringify(response)}`);\n  }\n  return response[key] as R;\n}\n\n/**\n * Account connected to Aeternity Snap for MetaMask\n * https://www.npmjs.com/package/\\@aeternity-snap/plugin\n */\nexport default class AccountMetamask extends AccountBase {\n  readonly provider: BaseProvider;\n\n  readonly index: number;\n\n  override readonly address: Encoded.AccountAddress;\n\n  /**\n   * @param address - Address of account\n   */\n  constructor(provider: BaseProvider, index: number, address: Encoded.AccountAddress) {\n    super();\n    this.provider = provider;\n    this.index = index;\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using MetaMask');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using MetaMask');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using MetaMask');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountMetamask');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    return invokeSnap<Encoded.Transaction>(\n      this.provider,\n      'signTransaction',\n      { derivationPath: [`${this.index}'`, \"0'\", \"0'\"], tx, networkId },\n      'signedTx',\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(message: string): Promise<Uint8Array> {\n    const signature = await invokeSnap<string>(\n      this.provider,\n      'signMessage',\n      {\n        derivationPath: [`${this.index}'`, \"0'\", \"0'\"],\n        message: Buffer.from(message).toString('base64'),\n      },\n      'signature',\n    );\n    return Buffer.from(signature, 'base64');\n  }\n}\n","import type { BaseProvider } from '@metamask/providers';\nimport {\n  InternalError,\n  UnsupportedPlatformError,\n  UnsupportedVersionError,\n} from '../utils/errors.js';\nimport { Encoded } from '../utils/encoder.js';\nimport semverSatisfies from '../utils/semver-satisfies.js';\nimport AccountBaseFactory from './BaseFactory.js';\nimport AccountMetamask, { invokeSnap, snapId } from './Metamask.js';\n\nconst snapMinVersion = '0.0.9';\nconst snapMaxVersion = '0.1.0';\n\ninterface SnapDetails {\n  blocked: boolean;\n  enabled: boolean;\n  id: typeof snapId;\n  version: string;\n  initialPermissions: Record<string, unknown>;\n}\n\n/**\n * A factory class that generates instances of AccountMetamask.\n */\nexport default class AccountMetamaskFactory extends AccountBaseFactory {\n  readonly provider: BaseProvider;\n\n  /**\n   * @param provider - Connection to MetaMask to use\n   */\n  constructor(provider?: BaseProvider) {\n    super();\n    if (provider != null) {\n      this.provider = provider;\n      return;\n    }\n    if (window == null) {\n      throw new UnsupportedPlatformError(\n        'Window object not found, you can run AccountMetamaskFactory only in browser or setup a provider',\n      );\n    }\n    if (!('ethereum' in window) || window.ethereum == null) {\n      throw new UnsupportedPlatformError(\n        '`ethereum` object not found, you can run AccountMetamaskFactory only with Metamask enabled or setup a provider',\n      );\n    }\n    this.provider = window.ethereum as BaseProvider;\n  }\n\n  /**\n   * It throws an exception if MetaMask has an incompatible version.\n   */\n  async #ensureMetamaskSupported(): Promise<void> {\n    const version = await this.provider.request<string>({ method: 'web3_clientVersion' });\n    if (version == null) throw new InternalError(\"Can't get Ethereum Provider version\");\n    const metamaskPrefix = 'MetaMask/v';\n    if (!version.startsWith(metamaskPrefix)) {\n      throw new UnsupportedPlatformError(`Expected Metamask, got ${version} instead`);\n    }\n    const args = [version.slice(metamaskPrefix.length), '12.2.4'] as const;\n    if (!semverSatisfies(...args)) throw new UnsupportedVersionError('Metamask', ...args);\n  }\n\n  #ensureReadyPromise?: Promise<void>;\n\n  /**\n   * Request MetaMask to install Aeternity snap.\n   */\n  async installSnap(): Promise<SnapDetails> {\n    await this.#ensureMetamaskSupported();\n    const details = (await this.provider.request({\n      method: 'wallet_requestSnaps',\n      params: { [snapId]: { version: snapMinVersion } },\n    })) as { [key in typeof snapId]: SnapDetails };\n    this.#ensureReadyPromise = Promise.resolve();\n    return details[snapId];\n  }\n\n  /**\n   * It throws an exception if MetaMask or Aeternity snap has an incompatible version or is not\n   * installed.\n   */\n  async ensureReady(): Promise<void> {\n    const snapVersion = await this.getSnapVersion();\n    const args = [snapVersion, snapMinVersion, snapMaxVersion] as const;\n    if (!semverSatisfies(...args))\n      throw new UnsupportedVersionError('Aeternity snap in MetaMask', ...args);\n    this.#ensureReadyPromise = Promise.resolve();\n  }\n\n  async #ensureReady(): Promise<void> {\n    this.#ensureReadyPromise ??= this.ensureReady();\n    return this.#ensureReadyPromise;\n  }\n\n  /**\n   * @returns the version of snap installed in MetaMask\n   */\n  async getSnapVersion(): Promise<string> {\n    await this.#ensureMetamaskSupported();\n    const snaps = (await this.provider.request({ method: 'wallet_getSnaps' })) as Record<\n      string,\n      { version: string }\n    >;\n    const version = snaps[snapId]?.version;\n    if (version == null)\n      throw new UnsupportedPlatformError('Aeternity snap is not installed to MetaMask');\n    return version;\n  }\n\n  /**\n   * Get an instance of AccountMetaMask for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountMetamask> {\n    await this.#ensureReady();\n    const address = await invokeSnap<Encoded.AccountAddress>(\n      this.provider,\n      'getPublicKey',\n      { derivationPath: [`${accountIndex}'`, \"0'\", \"0'\"] },\n      'publicKey',\n    );\n    return new AccountMetamask(this.provider, accountIndex, address);\n  }\n}\n","import { Encoded } from '../../utils/encoder.js';\n\ninterface FunctionAci {\n  arguments: any[];\n  name: string;\n  payable: boolean;\n  returns: any;\n  stateful: boolean;\n}\n\nexport type Aci = Array<{\n  contract?: {\n    name: string;\n    event?: any;\n    functions: FunctionAci[];\n    kind: string; // known values: 'contract_main'\n    payable: boolean;\n    typedefs: any[];\n  };\n}>;\n\nexport type CompileResult = Promise<{\n  bytecode: Encoded.ContractBytearray;\n  aci: Aci;\n  warnings: Array<{\n    message: string;\n    pos: {\n      file?: string;\n      line: number;\n      col: number;\n    };\n  }>;\n}>;\n\n/**\n * A base class for all compiler implementations\n */\nexport default abstract class CompilerBase {\n  /**\n   * Compile contract by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract compile(path: string): CompileResult;\n\n  /**\n   * Compile contract by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI and bytecode\n   */\n  abstract compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult;\n\n  /**\n   * Generate contract's ACI by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI\n   */\n  abstract generateAci(path: string): Promise<Aci>;\n\n  /**\n   * Generate contract's ACI by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI\n   */\n  abstract generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * Available only in Node.js\n   * @param bytecode - Contract bytecode to verify\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * @param bytecode - Contract bytecode to verify\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   */\n  abstract validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean>;\n\n  /**\n   * @returns Compiler version\n   */\n  abstract version(): Promise<string>;\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompileOpts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileOpts\",\n    modelProperties: {\n      fileSystem: {\n        serializedName: \"file_system\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      srcFile: {\n        serializedName: \"src_file\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompilerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerError\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      pos: {\n        serializedName: \"pos\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorPos\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorPos: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorPos\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"String\",\n        },\n      },\n      line: {\n        serializedName: \"line\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      col: {\n        serializedName: \"col\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompileResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileResult\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      aci: {\n        serializedName: \"aci\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } },\n            },\n          },\n        },\n      },\n      warnings: {\n        serializedName: \"warnings\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CompilerError\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const SophiaCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaCallResultInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BytecodeCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BytecodeCallResultInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodedCallresult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCallresult\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const FunctionCallInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionCallInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Calldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Calldata\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodeCalldataBytecode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataBytecode\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodedCalldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCalldata\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodeCalldataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataSource\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FateAssembler: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FateAssembler\",\n    modelProperties: {\n      fateAssembler: {\n        serializedName: \"fate-assembler\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ValidateByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompilerVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerVersion\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ApiVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiVersion\",\n    modelProperties: {\n      apiVersion: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SophiaBinaryData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaBinaryData\",\n    modelProperties: {\n      sophiaType: {\n        serializedName: \"sophia-type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SophiaJsonData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaJsonData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n","import { OperationParameter, OperationURLParameter } from \"@azure/core-client\";\nimport {\n  Contract as ContractMapper,\n  SophiaCallResultInput as SophiaCallResultInputMapper,\n  BytecodeCallResultInput as BytecodeCallResultInputMapper,\n  FunctionCallInput as FunctionCallInputMapper,\n  DecodeCalldataBytecode as DecodeCalldataBytecodeMapper,\n  DecodeCalldataSource as DecodeCalldataSourceMapper,\n  ByteCodeInput as ByteCodeInputMapper,\n  ValidateByteCodeInput as ValidateByteCodeInputMapper,\n} from \"../models/mappers.js\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ContractMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SophiaCallResultInputMapper,\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BytecodeCallResultInputMapper,\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: FunctionCallInputMapper,\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataBytecodeMapper,\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataSourceMapper,\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ByteCodeInputMapper,\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ValidateByteCodeInputMapper,\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  CompilerOptionalParams,\n  Contract,\n  GenerateACIOptionalParams,\n  GenerateACIResponse,\n  CompileContractOptionalParams,\n  CompileContractResponse,\n  SophiaCallResultInput,\n  DecodeCallResultOptionalParams,\n  DecodeCallResultResponse,\n  BytecodeCallResultInput,\n  DecodeCallResultBytecodeOptionalParams,\n  DecodeCallResultBytecodeResponse,\n  FunctionCallInput,\n  EncodeCalldataOptionalParams,\n  EncodeCalldataResponse,\n  DecodeCalldataBytecode,\n  DecodeCalldataBytecodeOptionalParams,\n  DecodeCalldataBytecodeResponse,\n  DecodeCalldataSource,\n  DecodeCalldataSourceOptionalParams,\n  DecodeCalldataSourceResponse,\n  ByteCodeInput,\n  GetFateAssemblerCodeOptionalParams,\n  GetFateAssemblerCodeResponse,\n  ValidateByteCodeInput,\n  ValidateByteCodeOptionalParams,\n  GetCompilerVersionOptionalParams,\n  GetCompilerVersionResponse,\n  VersionOptionalParams,\n  VersionResponse,\n  ApiVersionOptionalParams,\n  ApiVersionResponse,\n  ApiOptionalParams,\n  ApiResponse,\n} from \"./models/index.js\";\n\nexport class Compiler extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Compiler class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: CompilerOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CompilerOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-compiler/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Generate an Aeternity Contract Interface (ACI) for contract\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  generateACI(\n    body: Contract,\n    options?: GenerateACIOptionalParams,\n  ): Promise<GenerateACIResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      generateACIOperationSpec,\n    );\n  }\n\n  /**\n   * Compile a sophia contract from source and return byte code and ACI\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  compileContract(\n    body: Contract,\n    options?: CompileContractOptionalParams,\n  ): Promise<CompileContractResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      compileContractOperationSpec,\n    );\n  }\n\n  /**\n   * Decode the result of contract call\n   * @param body Binary data in Sophia ABI format\n   * @param options The options parameters.\n   */\n  decodeCallResult(\n    body: SophiaCallResultInput,\n    options?: DecodeCallResultOptionalParams,\n  ): Promise<DecodeCallResultResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultOperationSpec,\n    );\n  }\n\n  /**\n   * Decode the result of contract call from Bytecode\n   * @param body Call result + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCallResultBytecode(\n    body: BytecodeCallResultInput,\n    options?: DecodeCallResultBytecodeOptionalParams,\n  ): Promise<DecodeCallResultBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultBytecodeOperationSpec,\n    );\n  }\n\n  /**\n   * Encode Sophia function call according to sophia ABI.\n   * @param body Sophia function call - contract code + function name + arguments\n   * @param options The options parameters.\n   */\n  encodeCalldata(\n    body: FunctionCallInput,\n    options?: EncodeCalldataOptionalParams,\n  ): Promise<EncodeCalldataResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      encodeCalldataOperationSpec,\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a compiled contract\n   * @param body Calldata + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCalldataBytecode(\n    body: DecodeCalldataBytecode,\n    options?: DecodeCalldataBytecodeOptionalParams,\n  ): Promise<DecodeCalldataBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataBytecodeOperationSpec,\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a (partial) contract\n   * @param body Calldata + contract (stub) code\n   * @param options The options parameters.\n   */\n  decodeCalldataSource(\n    body: DecodeCalldataSource,\n    options?: DecodeCalldataSourceOptionalParams,\n  ): Promise<DecodeCalldataSourceResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataSourceOperationSpec,\n    );\n  }\n\n  /**\n   * Get FATE assembler code from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getFateAssemblerCode(\n    body: ByteCodeInput,\n    options?: GetFateAssemblerCodeOptionalParams,\n  ): Promise<GetFateAssemblerCodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getFateAssemblerCodeOperationSpec,\n    );\n  }\n\n  /**\n   * Verify that an encoded byte array is the result of compiling a given contract\n   * @param body contract byte array and source code\n   * @param options The options parameters.\n   */\n  validateByteCode(\n    body: ValidateByteCodeInput,\n    options?: ValidateByteCodeOptionalParams,\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { body, options },\n      validateByteCodeOperationSpec,\n    );\n  }\n\n  /**\n   * Extract compiler version from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getCompilerVersion(\n    body: ByteCodeInput,\n    options?: GetCompilerVersionOptionalParams,\n  ): Promise<GetCompilerVersionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getCompilerVersionOperationSpec,\n    );\n  }\n\n  /**\n   * Get the version of the underlying Sophia compiler version\n   * @param options The options parameters.\n   */\n  version(options?: VersionOptionalParams): Promise<VersionResponse> {\n    return this.sendOperationRequest({ options }, versionOperationSpec);\n  }\n\n  /**\n   * Get the version of the API\n   * @param options The options parameters.\n   */\n  apiVersion(options?: ApiVersionOptionalParams): Promise<ApiVersionResponse> {\n    return this.sendOperationRequest({ options }, apiVersionOperationSpec);\n  }\n\n  /**\n   * Get the Api description\n   * @param options The options parameters.\n   */\n  api(options?: ApiOptionalParams): Promise<ApiResponse> {\n    return this.sendOperationRequest({ options }, apiOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst generateACIOperationSpec: coreClient.OperationSpec = {\n  path: \"/aci\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n          },\n        },\n      },\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst compileContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/compile\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompileResult,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCallResultOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } },\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCallResultBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCallresult,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst encodeCalldataOperationSpec: coreClient.OperationSpec = {\n  path: \"/encode-calldata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Calldata,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCalldataBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCalldataSourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/source\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body5,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst getFateAssemblerCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/fate-assembler\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FateAssembler,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst validateByteCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/validate-byte-code\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body7,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst getCompilerVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/compiler-version\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst versionOperationSpec: coreClient.OperationSpec = {\n  path: \"/version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion,\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst apiVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/api-version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiVersion,\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst apiOperationSpec: coreClient.OperationSpec = {\n  path: \"/api\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","import {\n  RestError,\n  userAgentPolicyName,\n  setClientRequestIdPolicyName,\n} from '@azure/core-rest-pipeline';\nimport { OperationOptions } from '@azure/core-client';\nimport {\n  Compiler as CompilerApi,\n  ErrorModel,\n  CompilerError as CompilerErrorApi,\n} from '../../apis/compiler/index.js';\nimport { genErrorFormatterPolicy, genVersionCheckPolicy } from '../../utils/autorest.js';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, NotImplementedError } from '../../utils/errors.js';\n\ntype GeneralCompilerError = ErrorModel & {\n  info?: object;\n  parameter?: string;\n};\n\n/**\n * Contract Compiler over HTTP\n *\n * This class include api call's related to contract compiler functionality.\n * @category contract\n * @example CompilerHttp('COMPILER_URL')\n */\nexport default class CompilerHttp extends CompilerBase {\n  readonly api: CompilerApi;\n\n  /**\n   * @param compilerUrl - Url for compiler API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't check compiler version\n   */\n  constructor(compilerUrl: string, { ignoreVersion = false }: { ignoreVersion?: boolean } = {}) {\n    super();\n\n    let version: string | undefined;\n    const getVersion = async (opts: OperationOptions): Promise<string> => {\n      if (version != null) return version;\n      version = (await this.api.apiVersion(opts)).apiVersion;\n      return version;\n    };\n\n    this.api = new CompilerApi(compilerUrl, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        ...(ignoreVersion ? [] : [genVersionCheckPolicy('compiler', getVersion, '8.0.0', '9.0.0')]),\n        genErrorFormatterPolicy((body: GeneralCompilerError | CompilerErrorApi[]) => {\n          let message = '';\n          if ('reason' in body) {\n            message += ` ${body.reason}${\n              body.parameter != null ? ` in ${body.parameter}` : ''\n              // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            }${body.info != null ? ` (${JSON.stringify(body.info)})` : ''}`;\n          }\n          if (Array.isArray(body)) {\n            message += `\\n${body\n              .map(\n                (e) =>\n                  `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context != null ? ` (${e.context})` : ''}`,\n              )\n              .join('\\n')}`;\n          }\n          return message;\n        }),\n      ],\n    });\n    this.api.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.api.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    try {\n      const cmpOut = await this.api.compileContract({ code: sourceCode, options: { fileSystem } });\n      const warnings = cmpOut.warnings.map(({ type, ...warning }) => warning);\n      const res = { ...cmpOut, warnings };\n      // TODO: should be fixed when the compiledAci interface gets updated\n      return res as Awaited<CompileResult>;\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async compile(path: string): CompileResult {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    try {\n      return await this.api.generateACI({ code: sourceCode, options: { fileSystem } });\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async generateAci(path: string): Promise<Aci> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    try {\n      await this.api.validateByteCode({ bytecode, source: sourceCode, options: { fileSystem } });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async version(): Promise<string> {\n    return (await this.api.version()).version;\n  }\n}\n","/**\n * Convert string from snake_case to PascalCase\n * @param s - String to convert\n * @returns Converted string\n */\nexport function snakeToPascal(s: string): string {\n  return s.replace(/_./g, (match) => match[1].toUpperCase());\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @param s - String to convert\n * @returns Converted string\n */\nexport function pascalToSnake(s: string): string {\n  return s.replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`);\n}\n","import { default as websocket, ICloseEvent } from 'websocket';\nimport { BigNumber } from 'bignumber.js';\nimport type Channel from './Base.js';\nimport JsonBig from '../utils/json-big.js';\nimport { pascalToSnake } from '../utils/string.js';\nimport { Encoded } from '../utils/encoder.js';\nimport {\n  BaseError,\n  ChannelCallError,\n  ChannelPingTimedOutError,\n  UnexpectedTsError,\n  UnknownChannelStateError,\n  ChannelIncomingMessageError,\n  ChannelError,\n} from '../utils/errors.js';\nimport { encodeContractAddress } from '../utils/crypto.js';\nimport { ensureError } from '../utils/other.js';\n\nconst { w3cwebsocket: W3CWebSocket } = websocket;\n\nexport interface ChannelEvents {\n  statusChanged: (status: ChannelStatus) => void;\n  stateChanged: (tx: Encoded.Transaction | '') => void;\n  depositLocked: () => void;\n  ownDepositLocked: () => void;\n  withdrawLocked: () => void;\n  ownWithdrawLocked: () => void;\n  peerDisconnected: () => void;\n  channelReestablished: () => void;\n  error: (error: Error) => void;\n  onChainTx: (tx: Encoded.Transaction, details: { info: string; type: string }) => void;\n  message: (message: string | Object) => void;\n  newContract: (contractAddress: Encoded.ContractAddress) => void;\n}\n\nexport interface ChannelAction {\n  guard: (channel: Channel, state?: ChannelFsm) => boolean;\n  action: (channel: Channel, state?: ChannelFsm) => ChannelFsm;\n}\n\ninterface SignOptions {\n  updates?: any[];\n  [k: string]: any;\n}\nexport type SignTxWithTag = (\n  tag: string,\n  tx: Encoded.Transaction,\n  options?: SignOptions,\n) => Promise<Encoded.Transaction>;\n// TODO: SignTx shouldn't return number or null\nexport type SignTx = (\n  tx: Encoded.Transaction,\n  options?: SignOptions,\n) => Promise<Encoded.Transaction | number | null>;\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/6734de2e4c7cce7e5e626caa8305fb535785131d/node/api/channels_api_usage.md#channel-establishing-parameters}\n */\ninterface CommonChannelOptions {\n  /**\n   * Channel url (for example: \"ws://localhost:3001\")\n   */\n  url: string;\n\n  /**\n   * Initiator's public key\n   */\n  initiatorId: Encoded.AccountAddress;\n  /**\n   * Responder's public key\n   */\n  responderId: Encoded.AccountAddress;\n  /**\n   * Amount of blocks for disputing a solo close\n   */\n  lockPeriod: number;\n  /**\n   * Initial deposit in favour of the responder by the initiator\n   */\n  pushAmount: BigNumber | number;\n  /**\n   * Amount of coins the initiator has committed to the channel\n   */\n  initiatorAmount: BigNumber | number;\n  /**\n   * Amount of coins the responder has committed to the channel\n   */\n  responderAmount: BigNumber | number;\n  /**\n   * The minimum amount both peers need to maintain\n   */\n  channelReserve?: BigNumber | number;\n  /**\n   * Minimum block height to include the channel_create_tx\n   */\n  ttl?: number;\n  /**\n   * The port of the responder's node\n   */\n  port: number;\n  /**\n   * How to calculate minimum depth (default: txfee)\n   */\n  minimumDepthStrategy?: 'txfee' | 'plain';\n  /**\n   * The minimum amount of blocks to be mined\n   */\n  minimumDepth?: number;\n  /**\n   * The fee to be used for the channel open transaction\n   */\n  fee?: BigNumber | number;\n  /**\n   * Used for the fee computation of the channel open transaction\n   */\n  gasPrice?: BigNumber | number;\n\n  signedTx?: Encoded.Transaction;\n  /**\n   * Existing channel id (required if reestablishing a channel)\n   */\n  existingChannelId?: Encoded.Channel;\n  /**\n   * Existing FSM id (required if reestablishing a channel)\n   */\n  existingFsmId?: Encoded.Bytearray;\n  /**\n   * Needs to be provided if reconnecting with calling `leave` before\n   */\n  // TODO: remove after solving https://github.com/aeternity/aeternity/issues/4399\n  reestablish?: boolean;\n  /**\n   * The time waiting for a new event to be initiated (default: 600000)\n   */\n  timeoutIdle?: number;\n  /**\n   * The time waiting for the initiator to produce the create channel transaction after the noise\n   * session had been established (default: 120000)\n   */\n  timeoutFundingCreate?: number;\n  /**\n   * The time frame the other client has to sign an off-chain update after our client had initiated\n   * and signed it. This applies only for double signed on-chain intended updates: channel create\n   * transaction, deposit, withdrawal and etc. (default: 120000)\n   */\n  timeoutFundingSign?: number;\n  /**\n   * The time frame the other client has to confirm an on-chain transaction reaching maturity\n   * (passing minimum depth) after the local node has detected this. This applies only for double\n   * signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc.\n   * (default: 360000)\n   */\n  timeoutFundingLock?: number;\n  /**\n   * The time frame the client has to return a signed off-chain update or to decline it.\n   * This applies for all off-chain updates (default: 500000)\n   */\n  timeoutSign?: number;\n  /**\n   * The time frame the other client has to react to an event. This applies for all off-chain\n   * updates that are not meant to land on-chain, as well as some special cases: opening a noise\n   * connection, mutual closing acknowledgement and reestablishing an existing channel\n   * (default: 120000)\n   */\n  timeoutAccept?: number;\n  /**\n   * the time frame the responder has to accept an incoming noise session.\n   * Applicable only for initiator (default: timeout_accept's value)\n   */\n  timeoutInitialized?: number;\n  /**\n   * The time frame the initiator has to start an outgoing noise session to the responder's node.\n   * Applicable only for responder (default: timeout_idle's value)\n   */\n  timeoutAwaitingOpen?: number;\n  /**\n   * Log websocket communication and state changes\n   */\n  debug?: boolean;\n  /**\n   * Function which verifies and signs transactions\n   */\n  sign: SignTxWithTag;\n}\n\nexport type ChannelOptions = CommonChannelOptions &\n  (\n    | {\n        /**\n         * Participant role\n         */\n        role: 'initiator';\n        /**\n         * Host of the responder's node\n         */\n        host: string;\n      }\n    | {\n        /**\n         * Participant role\n         */\n        role: 'responder';\n      }\n  );\n\nexport interface ChannelHandler extends Function {\n  enter?: Function;\n}\n\nexport interface ChannelState {\n  signedTx: Encoded.Transaction;\n  resolve: (r?: any) => void;\n  reject: (e: BaseError) => void;\n  sign: SignTx;\n  handler?: ChannelHandler;\n  /**\n   * Called when transaction has been posted on chain\n   */\n  onOnChainTx?: (tx: Encoded.Transaction) => void;\n  onOwnWithdrawLocked?: () => void;\n  onWithdrawLocked?: () => void;\n  onOwnDepositLocked?: () => void;\n  onDepositLocked?: () => void;\n  closeTx?: string;\n}\n\nexport interface ChannelFsm {\n  handler: ChannelHandler;\n  state?:\n    | ChannelState\n    | {\n        resolve: Function;\n        reject: Function;\n      };\n}\n\nexport interface ChannelMessage {\n  id?: number;\n  method: string;\n  params: any;\n  payload?: any;\n  data?: any;\n  error?: ChannelMessageError;\n}\n\ninterface ChannelMessageError {\n  code: number;\n  message: string;\n  data: [\n    {\n      message: string;\n      code: number;\n    },\n  ];\n  request: ChannelMessage;\n}\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000;\n// Close connection if pong message is not received within 15 seconds\nconst PONG_TIMEOUT_MS = 15000;\n\nexport function emit<E extends keyof ChannelEvents>(\n  channel: Channel,\n  ...args: [E, ...Parameters<ChannelEvents[E]>]\n): void {\n  const [eventName, ...rest] = args;\n  channel._eventEmitter.emit(eventName, ...rest);\n}\n\nfunction enterState(channel: Channel, nextState: ChannelFsm): void {\n  if (nextState == null) {\n    throw new UnknownChannelStateError();\n  }\n  channel._debug('enter state', nextState.handler.name);\n  channel._fsm = nextState;\n  if (nextState?.handler?.enter != null) {\n    nextState.handler.enter(channel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  void dequeueAction(channel);\n}\n\n// TODO: rewrite to enum\nexport type ChannelStatus =\n  | 'connecting'\n  | 'connected'\n  | 'accepted'\n  | 'halfSigned'\n  | 'signed'\n  | 'open'\n  | 'closing'\n  | 'closed'\n  | 'died'\n  | 'disconnected';\n\nexport function changeStatus(channel: Channel, newStatus: ChannelStatus, debug?: unknown): void {\n  channel._debug(newStatus, `(prev. ${channel._status})`, debug ?? '');\n  if (newStatus === channel._status) return;\n  channel._status = newStatus;\n  emit(channel, 'statusChanged', newStatus);\n}\n\nexport function changeState(channel: Channel, newState: Encoded.Transaction | ''): void {\n  channel._state = newState;\n  emit(channel, 'stateChanged', newState);\n}\n\nfunction send(channel: Channel, message: ChannelMessage): void {\n  channel._debug('send message', message.method, message.params);\n  channel._websocket.send(JsonBig.stringify({ jsonrpc: '2.0', ...message }));\n}\n\nexport function notify(channel: Channel, method: string, params: object = {}): void {\n  send(channel, { method, params });\n}\n\nasync function dequeueAction(channel: Channel): Promise<void> {\n  if (channel._isActionQueueLocked) return;\n  const queue = channel._actionQueue;\n  if (queue.length === 0) return;\n  const index = queue.findIndex((action) => action.guard(channel, channel._fsm));\n  if (index === -1) return;\n  channel._actionQueue = queue.filter((_, i) => index !== i);\n  channel._isActionQueueLocked = true;\n  const nextState: ChannelFsm = await queue[index].action(channel, channel._fsm);\n  channel._isActionQueueLocked = false;\n  enterState(channel, nextState);\n}\n\nexport async function enqueueAction(\n  channel: Channel,\n  guard: ChannelAction['guard'],\n  action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n): Promise<any> {\n  const promise = new Promise((resolve, reject) => {\n    channel._actionQueue.push({\n      guard,\n      action() {\n        const res = action();\n        return { ...res, state: { ...res.state, resolve, reject } };\n      },\n    });\n  });\n  void dequeueAction(channel);\n  return promise;\n}\n\nasync function handleMessage(channel: Channel, message: ChannelMessage): Promise<void> {\n  const { handler, state: st } = channel._fsm;\n  const nextState = await Promise.resolve(handler(channel, message, st));\n  enterState(channel, nextState);\n  // TODO: emit message and handler name (?) to move this code to Contract constructor\n  if (\n    message?.params?.data?.updates?.[0]?.op === 'OffChainNewContract' &&\n    // if name is channelOpen, the contract was created by other participant\n    nextState?.handler.name === 'channelOpen'\n  ) {\n    const round = channel.round();\n    if (round == null) throw new UnexpectedTsError('Round is null');\n    const owner = message?.params?.data?.updates?.[0]?.owner;\n    emit(channel, 'newContract', encodeContractAddress(owner, round + 1));\n  }\n}\n\nasync function dequeueMessage(channel: Channel): Promise<void> {\n  if (channel._isMessageQueueLocked) return;\n  channel._isMessageQueueLocked = true;\n  while (channel._messageQueue.length > 0) {\n    const message = channel._messageQueue.shift();\n    if (message == null) throw new UnexpectedTsError();\n    try {\n      await handleMessage(channel, message);\n    } catch (error) {\n      ensureError(error);\n      emit(channel, 'error', new ChannelIncomingMessageError(error, message));\n    }\n  }\n  channel._isMessageQueueLocked = false;\n}\n\nexport function disconnect(channel: Channel): void {\n  channel._websocket.close();\n  clearTimeout(channel._pingTimeoutId);\n}\n\nfunction ping(channel: Channel): void {\n  clearTimeout(channel._pingTimeoutId);\n  channel._pingTimeoutId = setTimeout(() => {\n    notify(channel, 'channels.system', { action: 'ping' });\n    channel._pingTimeoutId = setTimeout(() => {\n      disconnect(channel);\n      emit(channel, 'error', new ChannelPingTimedOutError());\n    }, PONG_TIMEOUT_MS);\n  }, PING_TIMEOUT_MS);\n}\n\nfunction onMessage(channel: Channel, data: string): void {\n  const message = JsonBig.parse(data);\n  channel._debug('received message', message.method, message.params);\n  if (message.id != null) {\n    const callback = channel._rpcCallbacks.get(message.id);\n    if (callback == null) {\n      emit(channel, 'error', new ChannelError(`Can't find callback by id: ${message.id}`));\n      return;\n    }\n    try {\n      callback(message);\n    } finally {\n      channel._rpcCallbacks.delete(message.id);\n    }\n    return;\n  }\n  if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message);\n    return;\n  }\n  if (message.method === 'channels.system.pong') {\n    if (message.params.channel_id === channel._channelId || channel._channelId == null) {\n      ping(channel);\n    }\n    return;\n  }\n  channel._messageQueue.push(message);\n  void dequeueMessage(channel);\n}\n\nexport async function call(channel: Channel, method: string, params: any): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const id = channel._nextRpcMessageId;\n    channel._nextRpcMessageId += 1;\n    channel._rpcCallbacks.set(\n      id,\n      (message: { result: PromiseLike<any>; error?: ChannelMessageError }) => {\n        if (message.error != null) {\n          const details = message.error.data[0].message ?? '';\n          reject(new ChannelCallError(message.error.message + details));\n        } else resolve(message.result);\n      },\n    );\n    send(channel, { method, id, params });\n  });\n}\n\nexport async function initialize(\n  channel: Channel,\n  connectionHandler: Function,\n  openHandler: Function,\n  { url, ...channelOptions }: ChannelOptions,\n): Promise<void> {\n  channel._options = { url, ...channelOptions };\n\n  const wsUrl = new URL(url);\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value.toString()));\n  wsUrl.searchParams.set('protocol', 'json-rpc');\n  changeStatus(channel, 'connecting');\n  channel._websocket = new W3CWebSocket(wsUrl.toString());\n  await new Promise<void>((resolve, reject) => {\n    Object.assign(channel._websocket, {\n      onerror: reject,\n      onopen: async (event: Event) => {\n        resolve();\n        changeStatus(channel, 'connected', event);\n        enterState(channel, { handler: connectionHandler });\n        ping(channel);\n      },\n      onclose: (event: ICloseEvent) => {\n        changeStatus(channel, 'disconnected', event);\n        clearTimeout(channel._pingTimeoutId);\n      },\n      onmessage: ({ data }: { data: string }) => onMessage(channel, data),\n    });\n  });\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport {\n  ChannelState,\n  changeStatus,\n  changeState,\n  notify,\n  emit,\n  disconnect,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n  ChannelStatus,\n  ChannelEvents,\n} from './internal.js';\nimport { unpackTx, buildTx } from '../tx/builder/index.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n  ChannelError,\n} from '../utils/errors.js';\nimport type Channel from './Base.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { snakeToPascal } from '../utils/string.js';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx);\n  const payloadTx = buildTx(encodedTx);\n  const result = await signFn(payloadTx);\n  if (typeof result === 'string') {\n    const { signatures: signatures2 } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      tag: Tag.SignedTx,\n      signatures: signatures.concat(signatures2),\n      encodedTx: decode(payloadTx),\n    });\n  }\n  return result;\n}\n\nexport async function signAndNotify(\n  channel: Channel,\n  method: string,\n  data: {\n    tx?: Encoded.Transaction;\n    signed_tx?: Encoded.Transaction;\n  },\n  signFn: SignTx,\n): Promise<boolean> {\n  let signedTx;\n  if (data.tx != null) signedTx = await signFn(data.tx);\n  else if (data.signed_tx != null) signedTx = await appendSignature(data.signed_tx, signFn);\n  else throw new ChannelError(\"Can't find transaction in message\");\n  const isError = typeof signedTx !== 'string';\n  const key = data.tx != null ? 'tx' : 'signed_tx';\n  notify(channel, method, isError ? { error: signedTx ?? 1 } : { [key]: signedTx });\n  return isError;\n}\n\nexport function handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(\n    Object.assign(\n      new UnexpectedChannelMessageError(\n        `Unexpected message received:\\n\\n${JSON.stringify(message)}`,\n      ),\n      { wsMessage: message },\n    ),\n  );\n  return { handler: channelOpen };\n}\n\nexport function awaitingCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n  onSuccess?: typeof handleUnexpectedMessage,\n): ChannelFsm {\n  if (onSuccess != null && message.method === 'channels.update') {\n    return onSuccess(channel, message, state);\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    const codes = message.error.data.map((d) => d.code);\n    if (codes.includes(1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (codes.includes(1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n\n    let nextStatus: ChannelStatus | null = null;\n    if (channelInfoStatus === 'channel_accept') nextStatus = 'accepted';\n    if (channelInfoStatus === 'funding_created') nextStatus = 'halfSigned';\n    if (nextStatus != null) {\n      changeStatus(channel, nextStatus);\n      return { handler: awaitingChannelCreateTx };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReestablish(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info' && message.params.data.event === 'fsm_up') {\n    channel._fsmId = message.params.data.fsm_id;\n    return {\n      handler: function awaitingChannelReestablished(\n        _: Channel,\n        message2: ChannelMessage,\n        state2: ChannelState,\n      ): ChannelFsm | undefined {\n        if (\n          message2.method === 'channels.info' &&\n          message2.params.data.event === 'channel_reestablished'\n        )\n          return { handler: awaitingOpenConfirmation };\n        return handleUnexpectedMessage(channel, message2, state2);\n      },\n    };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info' && message.params.data.event === 'fsm_up') {\n    channel._fsmId = message.params.data.fsm_id;\n    const { signedTx } = await channel.state();\n    changeState(channel, signedTx == null ? '' : buildTx(signedTx));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const tag = channel._options.role === 'initiator' ? 'initiator_sign' : 'responder_sign';\n  if (message.method === `channels.sign.${tag}`) {\n    await signAndNotify(channel, `channels.${tag}`, message.params.data, async (tx) =>\n      channel._options.sign(tag, tx),\n    );\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  function awaitingBlockInclusion(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n    if (message2.method === 'channels.info') {\n      switch (message2.params.data.event) {\n        case 'funding_created':\n        case 'own_funding_locked':\n          return { handler: awaitingBlockInclusion };\n        case 'funding_locked':\n          return { handler: awaitingOpenConfirmation };\n      }\n    }\n    if (message2.method === 'channels.on_chain_tx') {\n      emit(channel, 'onChainTx', message2.params.data.tx, {\n        info: message2.params.data.info,\n        type: message2.params.data.type,\n      });\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    const { info } = message.params.data;\n    const { role } = channel._options;\n    if (\n      (info === 'funding_signed' && role === 'initiator') ||\n      (info === 'funding_created' && role === 'responder')\n    ) {\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    channel._options.role === 'initiator'\n  ) {\n    channel._channelId = message.params.channel_id;\n    changeStatus(channel, 'signed');\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nfunction awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channel._channelId = message.params.channel_id;\n    return {\n      handler: function awaitingChannelsUpdate(\n        _: Channel,\n        message2: ChannelMessage,\n        state2: ChannelState,\n      ): ChannelFsm | undefined {\n        if (message2.method === 'channels.update') {\n          changeState(channel, message2.params.data.state);\n          return { handler: channelOpen };\n        }\n        return handleUnexpectedMessage(channel, message2, state2);\n      },\n    };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, snakeToPascal(message.params.data.event) as keyof ChannelEvents);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          channel._fsmId = message.params.data.fsm_id;\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nasync function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  if (tag == null) return handleUnexpectedMessage(channel, message, state);\n  const isError = await signAndNotify(channel, `channels.${tag}`, message.params.data, async (tx) =>\n    channel._options.sign(tag, tx, { updates: message.params.data.updates }),\n  );\n\n  function awaitingUpdateConflict(_: Channel, message2: ChannelMessage): ChannelFsm {\n    if (message2.error != null) {\n      return { handler: awaitingUpdateConflict, state };\n    }\n    if (message2.method === 'channels.conflict') {\n      return { handler: channelOpen };\n    }\n    return handleUnexpectedMessage(channel, message2, state);\n  }\n  return isError ? { handler: awaitingUpdateConflict, state } : { handler: channelOpen };\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method !== 'channels.sign.shutdown_sign') {\n    return handleUnexpectedMessage(channel, message, state);\n  }\n  await signAndNotify(channel, 'channels.shutdown_sign', message.params.data, async (tx) =>\n    state.sign(tx),\n  );\n  return {\n    handler(_: Channel, message2: ChannelMessage): ChannelFsm {\n      if (message2.method !== 'channels.on_chain_tx') {\n        return handleUnexpectedMessage(channel, message2, state);\n      }\n      // state.resolve(message.params.data.tx)\n      return { handler: channelClosed, state };\n    },\n    state,\n  };\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n","import EventEmitter from 'events';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { snakeToPascal } from '../utils/string.js';\nimport { unpackTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport * as handlers from './handlers.js';\nimport {\n  initialize,\n  enqueueAction,\n  notify,\n  call,\n  disconnect as channelDisconnect,\n  SignTx,\n  ChannelOptions,\n  ChannelState,\n  ChannelHandler,\n  ChannelAction,\n  ChannelStatus,\n  ChannelFsm,\n  ChannelMessage,\n  ChannelEvents,\n} from './internal.js';\nimport { ChannelError, IllegalArgumentError } from '../utils/errors.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { TxUnpacked } from '../tx/builder/schema.generated.js';\nimport { EntryTag } from '../tx/builder/entry/constants.js';\nimport { unpackEntry } from '../tx/builder/entry/index.js';\nimport { EntUnpacked } from '../tx/builder/entry/schema.generated.js';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce(\n    (result, [key, val]) => ({\n      ...result,\n      [snakeToPascal(key)]: val,\n    }),\n    {},\n  ) as Type;\n}\n\nlet channelCounter = 0;\n\n/**\n * Channel\n * @example\n * ```js\n * await Channel.initialize({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n * ```\n */\nexport default class Channel {\n  _eventEmitter = new EventEmitter();\n\n  _pingTimeoutId!: NodeJS.Timeout;\n\n  _nextRpcMessageId = 0;\n\n  _rpcCallbacks = new Map<number, (message: object) => void>();\n\n  _fsmId?: Encoded.Bytearray;\n\n  _messageQueue: ChannelMessage[] = [];\n\n  _isMessageQueueLocked = false;\n\n  _actionQueue: ChannelAction[] = [];\n\n  _isActionQueueLocked = false;\n\n  _status: ChannelStatus = 'disconnected';\n\n  _fsm!: ChannelFsm;\n\n  _websocket!: W3CWebSocket;\n\n  _state: Encoded.Transaction | '' = '';\n\n  _options!: ChannelOptions;\n\n  readonly #debugId: number;\n\n  _channelId?: Encoded.Channel;\n\n  protected constructor() {\n    channelCounter += 1;\n    this.#debugId = channelCounter;\n  }\n\n  _debug(...args: any[]): void {\n    if (this._options.debug !== true) return;\n    console.debug(`Channel #${this.#debugId}`, ...args);\n  }\n\n  /**\n   * @param options - Channel params\n   */\n  static async initialize(options: ChannelOptions): Promise<Channel> {\n    return Channel._initialize(new Channel(), options);\n  }\n\n  static async _initialize<T extends Channel>(channel: T, options: ChannelOptions): Promise<T> {\n    const reconnect = (options.existingFsmId ?? options.existingChannelId) != null;\n    if (reconnect && (options.existingFsmId == null || options.existingChannelId == null)) {\n      throw new IllegalArgumentError(\n        '`existingChannelId`, `existingFsmId` should be both provided or missed',\n      );\n    }\n    const reconnectHandler =\n      handlers[options.reestablish === true ? 'awaitingReestablish' : 'awaitingReconnection'];\n    await initialize(\n      channel,\n      reconnect ? reconnectHandler : handlers.awaitingConnection,\n      handlers.channelOpen,\n      options,\n    );\n    return channel;\n  }\n\n  /**\n   * Register event listener function\n   *\n   * Possible events:\n   *\n   *   - \"error\"\n   *   - \"stateChanged\"\n   *   - \"statusChanged\"\n   *   - \"message\"\n   *   - \"peerDisconnected\"\n   *   - \"onChainTx\"\n   *   - \"ownWithdrawLocked\"\n   *   - \"withdrawLocked\"\n   *   - \"ownDepositLocked\"\n   *   - \"depositLocked\"\n   *   - \"channelReestablished\"\n   *   - \"newContract\"\n   *\n   *\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  on<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.on(eventName, callback);\n  }\n\n  /**\n   * Remove event listener function\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  off<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.removeListener(eventName, callback);\n  }\n\n  /**\n   * Close the connection\n   */\n  disconnect(): void {\n    return channelDisconnect(this);\n  }\n\n  /**\n   * Get current status\n   */\n  status(): ChannelStatus {\n    return this._status;\n  }\n\n  /**\n   * Get current state\n   */\n  async state(): Promise<{\n    calls: EntUnpacked & { tag: EntryTag.CallsMtree };\n    halfSignedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    signedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    trees: EntUnpacked & { tag: EntryTag.StateTrees };\n  }> {\n    const res = snakeToPascalObjKeys<{\n      calls: Encoded.CallStateTree;\n      halfSignedTx: Encoded.Transaction | '';\n      signedTx: Encoded.Transaction | '';\n      trees: Encoded.StateTrees;\n    }>(await call(this, 'channels.get.offchain_state', {}));\n    return {\n      calls: unpackEntry(res.calls),\n      ...(res.halfSignedTx !== '' && { halfSignedTx: unpackTx(res.halfSignedTx, Tag.SignedTx) }),\n      ...(res.signedTx !== '' && { signedTx: unpackTx(res.signedTx, Tag.SignedTx) }),\n      trees: unpackEntry(res.trees),\n    };\n  }\n\n  /**\n   * Get current round\n   *\n   * If round cannot be determined (for example when channel has not been opened)\n   * it will return `null`.\n   */\n  round(): number | null {\n    if (this._state === '') {\n      return null;\n    }\n    const params = unpackTx(this._state, Tag.SignedTx).encodedTx;\n    switch (params.tag) {\n      case Tag.ChannelCreateTx:\n        return 1;\n      case Tag.ChannelOffChainTx:\n      case Tag.ChannelWithdrawTx:\n      case Tag.ChannelDepositTx:\n        return params.round;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Get channel id\n   *\n   */\n  id(): Encoded.Channel {\n    if (this._channelId == null) throw new ChannelError('Channel is not initialized');\n    return this._channelId;\n  }\n\n  /**\n   * Get channel's fsm id\n   *\n   */\n  fsmId(): Encoded.Bytearray {\n    if (this._fsmId == null) throw new ChannelError('Channel is not initialized');\n    return this._fsmId;\n  }\n\n  protected async enqueueAction(\n    action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n  ): Promise<any> {\n    return enqueueAction(this, (channel, state) => state?.handler === handlers.channelOpen, action);\n  }\n\n  /**\n   * Leave channel\n   *\n   * It is possible to leave a channel and then later reestablish the channel\n   * off-chain state and continue operation. When a leave method is called,\n   * the channel fsm passes it on to the peer fsm, reports the current mutually\n   * signed state and then terminates.\n   *\n   * The channel can be reestablished by instantiating another Channel instance\n   * with two extra params: existingChannelId and existingFsmId.\n   *\n   * @example\n   * ```js\n   * channel.leave().then(({ channelId, signedTx }) => {\n   *   console.log(channelId)\n   *   console.log(signedTx)\n   * })\n   * ```\n   */\n  async leave(): Promise<{ channelId: Encoded.Channel; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.leave');\n      return { handler: handlers.awaitingLeave };\n    });\n  }\n\n  /**\n   * Trigger mutual close\n   *\n   * At any moment after the channel is opened, a closing procedure can be triggered.\n   * This can be done by either of the parties. The process is similar to the off-chain updates.\n   *\n   * @param sign - Function which verifies and signs mutual close transaction\n   * @example\n   * ```js\n   * channel.shutdown(\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(tx => console.log('on_chain_tx', tx))\n   * ```\n   */\n  async shutdown(sign: SignTx): Promise<Encoded.Transaction> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.shutdown');\n      return {\n        handler: handlers.awaitingShutdownTx,\n        state: { sign },\n      };\n    });\n  }\n}\n","import { BigNumber } from 'bignumber.js';\nimport {\n  notify,\n  call,\n  SignTx,\n  ChannelState,\n  ChannelMessage,\n  ChannelFsm,\n  changeState,\n} from './internal.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { pause } from '../utils/other.js';\nimport Channel from './Base.js';\nimport { ChannelConnectionError } from '../utils/errors.js';\nimport {\n  awaitingCompletion,\n  channelOpen,\n  handleUnexpectedMessage,\n  signAndNotify,\n} from './handlers.js';\nimport { EntryTag } from '../tx/builder/entry/constants.js';\nimport { EntUnpacked } from '../tx/builder/entry/schema.generated.js';\nimport { unpackEntry } from '../tx/builder/entry/index.js';\n\nexport default class ChannelSpend extends Channel {\n  /**\n   * Trigger a transfer update\n   *\n   * The transfer update is moving coins from one channel account to another.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * Sender and receiver are the channel parties. Both the initiator and responder\n   * can take those roles. Any public key outside the channel is considered invalid.\n   *\n   * @param from - Sender's public address\n   * @param to - Receiver's public address\n   * @param amount - Transaction amount\n   * @param sign - Function which verifies and signs offchain transaction\n   * @param metadata - Metadata\n\n   * @example\n   * ```js\n   * channel.update(\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n   *   10,\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(({ accepted, signedTx }) =>\n   *   if (accepted) {\n   *     console.log('Update has been accepted')\n   *   }\n   * )\n   * ```\n   */\n  async update(\n    from: Encoded.AccountAddress,\n    to: Encoded.AccountAddress,\n    amount: number | BigNumber,\n    sign: SignTx,\n    metadata: string[] = [],\n  ): Promise<{\n    accepted: boolean;\n    signedTx?: Encoded.Transaction;\n    errorCode?: number;\n    errorMessage?: string;\n  }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new', {\n        from,\n        to,\n        amount,\n        meta: metadata,\n      });\n\n      const awaitingOffChainTx = async (\n        _: Channel,\n        message: ChannelMessage,\n        state: ChannelState,\n      ): Promise<ChannelFsm> => {\n        if (message.method === 'channels.sign.update') {\n          const isError = await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => sign(tx, { updates: message.params.data.updates }),\n          );\n          if (isError) return { handler: awaitingOffChainTx, state };\n          return {\n            handler: (_2: Channel, message2: ChannelMessage): ChannelFsm =>\n              awaitingCompletion(this, message2, state, () => {\n                changeState(this, message2.params.data.state);\n                state.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              }),\n            state,\n          };\n        }\n        if (message.method === 'channels.error') {\n          state.reject(new ChannelConnectionError(message.data.message));\n          return { handler: channelOpen };\n        }\n        return awaitingCompletion(this, message, state);\n      };\n\n      return { handler: awaitingOffChainTx };\n    });\n  }\n\n  /**\n   * Get proof of inclusion\n   *\n   * If a certain address of an account or a contract is not found\n   * in the state tree - the response is an error.\n   *\n   * @param addresses - Addresses\n   * @param addresses.accounts - List of account addresses to include in poi\n   * @param addresses.contracts - List of contract addresses to include in poi\n   * @example\n   * ```js\n   * channel.poi({\n   *   accounts: [\n   *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   ],\n   *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n   * }).then(poi => console.log(poi))\n   * ```\n   */\n  async poi({\n    accounts,\n    contracts,\n  }: {\n    accounts: Encoded.AccountAddress[];\n    contracts?: Encoded.ContractAddress[];\n  }): Promise<EntUnpacked & { tag: EntryTag.TreesPoi }> {\n    const { poi }: { poi: Encoded.Poi } = await call(this, 'channels.get.poi', {\n      accounts,\n      contracts,\n    });\n    return unpackEntry(poi);\n  }\n\n  /**\n   * Get balances\n   *\n   * The accounts param contains a list of addresses to fetch balances of.\n   * Those can be either account balances or a contract ones, encoded as an account addresses.\n   *\n   * If a certain account address had not being found in the state tree - it is simply\n   * skipped in the response.\n   *\n   * @param accounts - List of addresses to fetch balances from\n   * @example\n   * ```js\n   * channel.balances([\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n   * ]).then(balances =>\n   *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n   * )\n   * ```\n   */\n  async balances(\n    accounts: Encoded.AccountAddress[],\n  ): Promise<{ [key: Encoded.AccountAddress]: string }> {\n    return Object.fromEntries(\n      (await call(this, 'channels.get.balances', { accounts })).map(\n        (item: { account: Encoded.AccountAddress; balance: string }) => [\n          item.account,\n          item.balance,\n        ],\n      ),\n    );\n  }\n\n  private async awaitingActionTx(\n    action: 'deposit' | 'withdraw',\n    message: ChannelMessage,\n    state: ChannelState,\n  ): Promise<ChannelFsm> {\n    if (message.method !== `channels.sign.${action}_tx`) {\n      return handleUnexpectedMessage(this, message, state);\n    }\n\n    const awaitingActionCompletion = (_: Channel, message2: ChannelMessage): ChannelFsm => {\n      if (message2.method === 'channels.on_chain_tx') {\n        state.onOnChainTx?.(message2.params.data.tx);\n        return { handler: awaitingActionCompletion, state };\n      }\n      if (\n        message2.method === 'channels.info' &&\n        [`own_${action}_locked`, `${action}_locked`].includes(message2.params.data.event)\n      ) {\n        const Action = action === 'deposit' ? 'Deposit' : 'Withdraw';\n        const isOwn: boolean = message2.params.data.event.startsWith('own_');\n        state[`on${isOwn ? 'Own' : ''}${Action}Locked`]?.();\n        return { handler: awaitingActionCompletion, state };\n      }\n      return awaitingCompletion(this, message2, state, () => {\n        changeState(this, message2.params.data.state);\n        state.resolve({ accepted: true, signedTx: message2.params.data.state });\n        return { handler: channelOpen };\n      });\n    };\n\n    const { sign } = state;\n    await signAndNotify(this, `channels.${action}_tx`, message.params.data, async (tx) =>\n      sign(tx, { updates: message.params.data.updates }),\n    );\n    return { handler: awaitingActionCompletion, state };\n  }\n\n  /**\n   * Withdraw coins from the channel\n   *\n   * After the channel had been opened any of the participants can initiate a withdrawal.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a withdrawal. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the withdraw transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onWithdrawLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to withdraw\n   * @param sign - Function which verifies and signs withdraw transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.withdraw(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Withdrawal has been accepted')\n   *   } else {\n   *     console.log('Withdrawal has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async withdraw(\n    amount: number | BigNumber,\n    sign: SignTx,\n    {\n      onOnChainTx,\n      onOwnWithdrawLocked,\n      onWithdrawLocked,\n    }: Pick<ChannelState, 'onOnChainTx' | 'onOwnWithdrawLocked' | 'onWithdrawLocked'> = {},\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.withdraw', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => this.awaitingActionTx('withdraw', message, state),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnWithdrawLocked,\n          onWithdrawLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Deposit coins into the channel\n   *\n   * After the channel had been opened any of the participants can initiate a deposit.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a deposit. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the deposit transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onDepositLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to deposit\n   * @param sign - Function which verifies and signs deposit transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.deposit(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, state }) => {\n   *   if (accepted) {\n   *     console.log('Deposit has been accepted')\n   *     console.log('The new state is:', state)\n   *   } else {\n   *     console.log('Deposit has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async deposit(\n    amount: number | BigNumber,\n    sign: SignTx,\n    {\n      onOnChainTx,\n      onOwnDepositLocked,\n      onDepositLocked,\n    }: Pick<ChannelState, 'onOnChainTx' | 'onOwnDepositLocked' | 'onDepositLocked'> = {},\n  ): Promise<{ accepted: boolean; state: ChannelState }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.deposit', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => this.awaitingActionTx('deposit', message, state),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnDepositLocked,\n          onDepositLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Send generic message\n   *\n   * If message is an object it will be serialized into JSON string\n   * before sending.\n   *\n   * If there is ongoing update that has not yet been finished the message\n   * will be sent after that update is finalized.\n   *\n   * @param message - Message\n   * @param recipient - Address of the recipient\n   * @example\n   * ```js\n   * channel.sendMessage(\n   *   'hello world',\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n   * )\n   * ```\n   */\n  async sendMessage(message: string | object, recipient: Encoded.AccountAddress): Promise<void> {\n    const info = typeof message === 'object' ? JSON.stringify(message) : message;\n    if (this.status() === 'connecting') {\n      await new Promise<void>((resolve) => {\n        const onStatusChanged = (status: string): void => {\n          if (status === 'connecting') return;\n          resolve();\n          this.off('statusChanged', onStatusChanged);\n        };\n        this.on('statusChanged', onStatusChanged);\n      });\n      // For some reason we can't immediately send a message when connection is\n      // established. Thus we wait 500ms which seems to work.\n      await pause(500);\n    }\n    notify(this, 'channels.message', { info, to: recipient });\n  }\n}\n","import { BigNumber } from 'bignumber.js';\nimport { snakeToPascal } from '../utils/string.js';\nimport { MIN_GAS_PRICE, Tag, AbiVersion, VmVersion } from '../tx/builder/constants.js';\nimport {\n  signAndNotify,\n  awaitingCompletion,\n  channelClosed,\n  channelOpen,\n  handleUnexpectedMessage,\n} from './handlers.js';\nimport {\n  notify,\n  call,\n  SignTx,\n  ChannelState,\n  ChannelOptions,\n  ChannelMessage,\n  ChannelFsm,\n  changeState,\n  emit,\n} from './internal.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { ContractCallReturnType } from '../apis/node/index.js';\nimport { ContractCallObject } from '../contract/Contract.js';\nimport Channel from './Base.js';\nimport ChannelSpend from './Spend.js';\nimport { ChannelError, UnexpectedChannelMessageError } from '../utils/errors.js';\nimport { unpackTx } from '../tx/builder/index.js';\nimport { encodeContractAddress } from '../utils/crypto.js';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce(\n    (result, [key, val]) => ({\n      ...result,\n      [snakeToPascal(key)]: val,\n    }),\n    {},\n  ) as Type;\n}\n\ninterface CallContractOptions {\n  /**\n   * Amount the caller of the contract commits to it\n   */\n  amount?: number | BigNumber;\n  /**\n   * ABI encoded compiled AEVM call data for the code\n   */\n  callData?: Encoded.ContractBytearray;\n  /**\n   * Version of the ABI\n   */\n  abiVersion?: AbiVersion;\n  /**\n   * Address of the contract to call\n   */\n  contract?: Encoded.ContractAddress;\n}\n\ninterface CallContractResult extends CallContractOptions {\n  returnValue?: any;\n  gasUsed?: number | BigNumber;\n  gasPrice?: number | BigNumber;\n  height?: number;\n  callerNonce?: number;\n  log?: any;\n  returnType?: ContractCallReturnType;\n}\n\ninterface Contract {\n  abiVersion: AbiVersion;\n  active: boolean;\n  deposit: number | BigNumber;\n  id: string;\n  ownerId: string;\n  referrerIds: string[];\n  vmVersion: VmVersion;\n}\n\nexport default class ChannelContract extends ChannelSpend {\n  static override async initialize(options: ChannelOptions): Promise<ChannelContract> {\n    return Channel._initialize(new ChannelContract(), options);\n  }\n\n  /**\n   * Trigger create contract update\n   *\n   * The create contract update is creating a contract inside the channel's internal state tree.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * That would create a contract with the poster being the owner of it. Poster commits initially\n   * a deposit amount of coins to the new contract.\n   *\n   * @param options - Options\n   * @param options.code - Api encoded compiled AEVM byte code\n   * @param options.callData - Api encoded compiled AEVM call data for the code\n   * @param options.deposit - Initial amount the owner of the contract commits to it\n   * @param options.vmVersion - Version of the Virtual Machine\n   * @param options.abiVersion - Version of the Application Binary Interface\n   * @param sign - Function which verifies and signs create contract transaction\n   * @example\n   * ```js\n   * channel.createContract({\n   *   code: 'cb_HKtpipK4aCgYb17wZ...',\n   *   callData: 'cb_1111111111111111...',\n   *   deposit: 10,\n   *   vmVersion: 3,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx, address }) => {\n   *   if (accepted) {\n   *     console.log('New contract has been created')\n   *     console.log('Contract address:', address)\n   *   } else {\n   *     console.log('New contract has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async createContract(\n    {\n      code,\n      callData,\n      deposit,\n      vmVersion,\n      abiVersion,\n    }: {\n      code: Encoded.ContractBytearray;\n      callData: Encoded.ContractBytearray;\n      deposit: number | BigNumber;\n      vmVersion: VmVersion;\n      abiVersion: AbiVersion;\n    },\n    sign: SignTx,\n  ): Promise<{\n    accepted: boolean;\n    signedTx: Encoded.Transaction;\n    address: Encoded.ContractAddress;\n  }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new_contract', {\n        code,\n        call_data: callData,\n        deposit,\n        vm_version: vmVersion,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(this, 'channels.update', message.params.data, async (tx) =>\n            state.sign(tx),\n          );\n          return {\n            handler: (_2: Channel, message2: ChannelMessage, state2: ChannelState): ChannelFsm =>\n              awaitingCompletion(this, message2, state2, () => {\n                const params = unpackTx(message2.params.data.state, Tag.SignedTx).encodedTx;\n                if (params.tag !== Tag.ChannelOffChainTx) {\n                  throw new ChannelError(\n                    `Tag should be ${Tag[Tag.ChannelOffChainTx]}, got ${Tag[params.tag]} instead`,\n                  );\n                }\n                const addressKey =\n                  this._options.role === 'initiator' ? 'initiatorId' : 'responderId';\n                const owner = this._options[addressKey];\n                changeState(this, message2.params.data.state);\n                const address = encodeContractAddress(owner, params.round);\n                emit(this, 'newContract', address);\n                state2.resolve({ accepted: true, address, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              }),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger call a contract update\n   *\n   * The call contract update is calling a preexisting contract inside the channel's\n   * internal state tree. The update is a change to be applied on top of the latest state.\n   *\n   * That would call a contract with the poster being the caller of it. Poster commits\n   * an amount of coins to the contract.\n   *\n   * The call would also create a call object inside the channel state tree. It contains\n   * the result of the contract call.\n   *\n   * It is worth mentioning that the gas is not consumed, because this is an off-chain\n   * contract call. It would be consumed if it were an on-chain one. This could happen\n   * if a call with a similar computation amount is to be forced on-chain.\n   *\n   * @param options - Options\n   * @param sign - Function which verifies and signs contract call transaction\n   * @example\n   * ```js\n   * channel.callContract({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract called succesfully')\n   *   } else {\n   *     console.log('Contract call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async callContract(\n    { amount, callData, contract, abiVersion }: CallContractOptions,\n    sign: SignTx,\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.call_contract', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(this, 'channels.update', message.params.data, async (tx) =>\n            state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (_2: Channel, message2: ChannelMessage, state2: ChannelState): ChannelFsm =>\n              awaitingCompletion(this, message2, state2, () => {\n                changeState(this, message2.params.data.state);\n                state2.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              }),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger a force progress contract call\n   * This call is going on-chain\n   * @param options - Options\n   * @param sign - Function which verifies and signs contract force progress transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.forceProgress({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1,\n   *   gasPrice: 1000005554\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract force progress call successful')\n   *   } else {\n   *     console.log('Contract force progress call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async forceProgress(\n    {\n      amount,\n      callData,\n      contract,\n      abiVersion,\n      gasLimit = 1000000,\n      gasPrice = MIN_GAS_PRICE,\n    }: CallContractOptions & {\n      gasLimit?: number;\n      gasPrice?: number;\n    },\n    sign: SignTx,\n    { onOnChainTx }: Pick<ChannelState, 'onOnChainTx'> = {},\n  ): Promise<{\n    accepted: boolean;\n    signedTx: Encoded.Transaction;\n    tx: Encoded.Transaction | Uint8Array;\n  }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.force_progress', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n        gas_price: gasPrice,\n        gas: gasLimit,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.force_progress_tx') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.force_progress_sign',\n            message.params.data,\n            async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (_2: Channel, message2: ChannelMessage, state2: ChannelState): ChannelFsm => {\n              if (message2.method === 'channels.on_chain_tx') {\n                state2.onOnChainTx?.(message2.params.data.tx);\n                emit(this, 'onChainTx', message2.params.data.tx, {\n                  info: message2.params.data.info,\n                  type: message2.params.data.type,\n                });\n                state2.resolve({ accepted: true, tx: message2.params.data.tx });\n                // TODO: shouldn't be unexpected message in this case\n              }\n              return handleUnexpectedMessage(this, message2, state2);\n            },\n            state,\n          };\n        },\n        state: { sign, onOnChainTx },\n      };\n    });\n  }\n\n  /**\n   * Call contract using dry-run\n   *\n   * In order to get the result of a potential contract call, one might need to\n   * dry-run a contract call. It takes the exact same arguments as a call would\n   * and returns the call object.\n   *\n   * The call is executed in the channel's state, but it does not impact the state\n   * whatsoever. It uses as an environment the latest channel's state and the current\n   * top of the blockchain as seen by the node.\n   *\n   * @param options - Options\n   * @example\n   * ```js\n   * channel.callContractStatic({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ returnValue, gasUsed }) => {\n   *   console.log('Returned value:', returnValue)\n   *   console.log('Gas used:', gasUsed)\n   * })\n   * ```\n   */\n  async callContractStatic({\n    amount,\n    callData,\n    contract,\n    abiVersion,\n  }: CallContractOptions): Promise<CallContractResult> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.dry_run.call_contract', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n      }),\n    );\n  }\n\n  /**\n   * Get contract call result\n   *\n   * The combination of a caller, contract and a round of execution determines the\n   * contract call. Providing an incorrect set of those results in an error response.\n   *\n   * @param options - Options\n   * @param options.caller - Address of contract caller\n   * @param options.contract - Address of the contract\n   * @param options.round - Round when contract was called\n   * @example\n   * ```js\n   * channel.getContractCall({\n   *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   round: 3\n   * }).then(({ returnType, returnValue }) => {\n   *   if (returnType === 'ok') console.log(returnValue)\n   * })\n   * ```\n   */\n  async getContractCall({\n    caller,\n    contract,\n    round,\n  }: {\n    caller: Encoded.AccountAddress;\n    contract: Encoded.ContractAddress;\n    round: number;\n  }): Promise<ContractCallObject> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.get.contract_call', {\n        caller_id: caller,\n        contract_id: contract,\n        round,\n      }),\n    );\n  }\n\n  /**\n   * Get the latest contract state\n   *\n   * @param contract - Address of the contract\n   * @example\n   * ```js\n   * channel.getContractState(\n   *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n   * ).then(({ contract }) => {\n   *   console.log('deposit:', contract.deposit)\n   * })\n   * ```\n   */\n  async getContractState(\n    contract: Encoded.ContractAddress,\n  ): Promise<{ contract: Contract; contractState: object }> {\n    const result = await call(this, 'channels.get.contract', { pubkey: contract });\n    return snakeToPascalObjKeys({\n      ...result,\n      contract: snakeToPascalObjKeys(result.contract),\n    });\n  }\n\n  /**\n   * Clean up all locally stored contract calls\n   *\n   * Contract calls are kept locally in order for the participant to be able to look them up.\n   * They consume memory and in order for the participant to free it - one can prune all messages.\n   * This cleans up all locally stored contract calls and those will no longer be available for\n   * fetching and inspection.\n   */\n  async cleanContractCalls(): Promise<void> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.clean_contract_calls');\n      return {\n        handler(_: Channel, message: ChannelMessage, state: ChannelState): ChannelFsm {\n          if (message.method === 'channels.calls_pruned.reply') {\n            state.resolve();\n            return { handler: channelOpen };\n          }\n          state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n          return { handler: channelClosed };\n        },\n      };\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport WebSocket from 'isomorphic-ws';\nimport { BaseError, UnexpectedTsError, InternalError } from './utils/errors.js';\nimport { Encoded } from './utils/encoder.js';\n\ninterface Message {\n  payload: Object;\n  source: Source.Middleware | Source.Node;\n  subscription: 'KeyBlocks' | 'MicroBlocks' | 'Transactions' | 'Object';\n  target?: string;\n}\n\nenum Source {\n  Middleware = 'mdw',\n  Node = 'node',\n  All = 'all',\n}\n\nexport class MiddlewareSubscriberError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MiddlewareSubscriberError';\n  }\n}\n\nexport class MiddlewareSubscriberDisconnected extends MiddlewareSubscriberError {\n  constructor(readonly closeEvent: WebSocket.CloseEvent) {\n    super('Connection closed');\n    this.name = 'MiddlewareSubscriberDisconnected';\n  }\n}\n\nexport default class MiddlewareSubscriber {\n  #subscriptions: Array<readonly [target: string, s: Source, cb: (p?: Object, e?: Error) => void]> =\n    [];\n\n  readonly #requestQueue: Array<[isSubscribe: boolean, target: string]> = [];\n\n  #webSocket?: WebSocket;\n\n  get webSocket(): WebSocket | undefined {\n    return this.#webSocket;\n  }\n\n  get #targets(): Set<string> {\n    return new Set(this.#subscriptions.map(([target]) => target));\n  }\n\n  #sendMessage(message: any): void {\n    if (this.#webSocket == null) throw new UnexpectedTsError();\n    this.#webSocket.send(JSON.stringify(message));\n  }\n\n  #sendSubscribe(isSubscribe: boolean, target: string): void {\n    if (this.#webSocket == null) return;\n    const payload = ['KeyBlocks', 'MicroBlocks', 'Transactions'].includes(target)\n      ? target\n      : 'Object';\n    this.#sendMessage({\n      op: isSubscribe ? 'Subscribe' : 'Unsubscribe',\n      payload,\n      ...(payload === 'Object' && { target }),\n    });\n    this.#requestQueue.push([isSubscribe, target]);\n  }\n\n  #emit(condition: (target: string, source: Source) => boolean, p?: Object, e?: Error): void {\n    this.#subscriptions\n      .filter(([target, source]) => condition(target, source))\n      .forEach(([, , cb]) => cb(p, e));\n  }\n\n  constructor(readonly url: string) {}\n\n  #disconnect(onlyReset = false): void {\n    if (this.#webSocket == null) return;\n    if (!onlyReset) this.#webSocket.close();\n    Object.assign(this.#webSocket, {\n      onopen: undefined,\n      onerror: undefined,\n      onmessage: undefined,\n    });\n    this.#webSocket = undefined;\n  }\n\n  async reconnect(): Promise<void> {\n    this.#disconnect();\n    this.#webSocket = await new Promise((resolve) => {\n      const webSocket = new WebSocket(this.url);\n      Object.assign(webSocket, {\n        onopen: () => resolve(webSocket),\n        onerror: (errorEvent: WebSocket.ErrorEvent) => {\n          this.#emit(() => true, undefined, errorEvent.error);\n        },\n        onmessage: (event: WebSocket.MessageEvent) => {\n          if (typeof event.data !== 'string') {\n            throw new InternalError(`Unknown incoming message type: ${typeof event.data}`);\n          }\n          this.#messageHandler(JSON.parse(event.data));\n        },\n        onclose: (event: WebSocket.CloseEvent) => {\n          this.#emit(() => true, undefined, new MiddlewareSubscriberDisconnected(event));\n          this.#disconnect(true);\n        },\n      });\n    });\n    await Promise.all([...this.#targets].map((target) => this.#sendSubscribe(true, target)));\n  }\n\n  #messageHandler(message: string | string[] | Message): void {\n    if (typeof message === 'string' || Array.isArray(message)) {\n      const request = this.#requestQueue.shift();\n      if (request == null) throw new InternalError('Request queue is empty');\n      const [isSubscribe, target] = request;\n      let error;\n      if (typeof message === 'string') error = new MiddlewareSubscriberError(message);\n      if (message.includes(target) !== isSubscribe) {\n        error = new InternalError(\n          `Expected ${target} to be${isSubscribe ? '' : ' not'} included into ${message}`,\n        );\n      }\n      if (error != null) this.#emit((t) => target === t, undefined, error);\n      return;\n    }\n    this.#emit(\n      (target, source) =>\n        (target === message.subscription || target === message.target) &&\n        (source === message.source || source === Source.All),\n      message.payload,\n    );\n  }\n\n  #subscribe(target: string, source: Source, cb: (p?: Object, e?: Error) => void): () => void {\n    const subscription = [target, source, cb] as const;\n    if (this.#targets.size === 0) this.reconnect();\n    if (!this.#targets.has(target)) this.#sendSubscribe(true, target);\n    this.#subscriptions.push(subscription);\n    return () => {\n      this.#subscriptions = this.#subscriptions.filter((item) => item !== subscription);\n      if (!this.#targets.has(target)) this.#sendSubscribe(false, target);\n      if (this.#targets.size === 0) this.#disconnect();\n    };\n  }\n\n  // TODO: replace p?: any with a proper type definition\n\n  subscribeKeyBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Middleware, cb);\n  }\n\n  subscribeKeyBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Node, cb);\n  }\n\n  subscribeKeyBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.All, cb);\n  }\n\n  subscribeMicroBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Middleware, cb);\n  }\n\n  subscribeMicroBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Node, cb);\n  }\n\n  subscribeMicroBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.All, cb);\n  }\n\n  subscribeTransactions(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Middleware, cb);\n  }\n\n  subscribeTransactionsNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Node, cb);\n  }\n\n  subscribeTransactionsAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.All, cb);\n  }\n\n  subscribeObject(\n    target:\n      | Encoded.KeyBlockHash\n      | Encoded.Channel\n      | Encoded.ContractAddress\n      | Encoded.OracleAddress\n      | Encoded.OracleQueryId\n      | Encoded.AccountAddress\n      | Encoded.Name\n      | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Middleware, cb);\n  }\n\n  subscribeObjectNode(\n    target:\n      | Encoded.KeyBlockHash\n      | Encoded.Channel\n      | Encoded.ContractAddress\n      | Encoded.OracleAddress\n      | Encoded.OracleQueryId\n      | Encoded.AccountAddress\n      | Encoded.Name\n      | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Node, cb);\n  }\n\n  subscribeObjectAll(\n    target:\n      | Encoded.KeyBlockHash\n      | Encoded.Channel\n      | Encoded.ContractAddress\n      | Encoded.OracleAddress\n      | Encoded.OracleQueryId\n      | Encoded.AccountAddress\n      | Encoded.Name\n      | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.All, cb);\n  }\n}\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 10,\n    constraints: {\n      InclusiveMaximum: 100,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const direction: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accountId: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"accountId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contract: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contract\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contract\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accountId1: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"account_id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ownedOnly: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedOnly\"],\n  mapper: {\n    serializedName: \"owned_only\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const scope: OperationQueryParameter = {\n  parameterPath: [\"options\", \"scope\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"(txi|gen):\\\\d+(-\\\\d+)?\"),\n    },\n    serializedName: \"scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction3: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const by: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const exact: OperationQueryParameter = {\n  parameterPath: [\"options\", \"exact\"],\n  mapper: {\n    serializedName: \"exact\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction4: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contractId: OperationURLParameter = {\n  parameterPath: \"contractId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contractId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction5: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const templateId: OperationURLParameter = {\n  parameterPath: \"templateId\",\n  mapper: {\n    serializedName: \"templateId\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const direction6: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tokenId: OperationURLParameter = {\n  parameterPath: \"tokenId\",\n  mapper: {\n    serializedName: \"tokenId\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const direction7: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"from\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const to: OperationQueryParameter = {\n  parameterPath: [\"options\", \"to\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"to\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id1: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction8: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const by1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction9: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const by2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blockHash: OperationQueryParameter = {\n  parameterPath: [\"options\", \"blockHash\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n    },\n    serializedName: \"block_hash\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash: OperationQueryParameter = {\n  parameterPath: [\"options\", \"hash\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n    },\n    serializedName: \"hash\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction10: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction11: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const state: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id2: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ch_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction12: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contractId1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contractId\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contract_id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const event: OperationQueryParameter = {\n  parameterPath: [\"options\", \"event\"],\n  mapper: {\n    serializedName: \"event\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const functionParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"function\"],\n  mapper: {\n    serializedName: \"function\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const functionPrefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"functionPrefix\"],\n  mapper: {\n    serializedName: \"function_prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const data: OperationQueryParameter = {\n  parameterPath: [\"options\", \"data\"],\n  mapper: {\n    serializedName: \"data\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const aexnArgs: OperationQueryParameter = {\n  parameterPath: [\"options\", \"aexnArgs\"],\n  mapper: {\n    serializedName: \"aexn-args\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const direction13: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction14: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction15: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contractId2: OperationURLParameter = {\n  parameterPath: \"contractId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contract_id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction16: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hashOrKbi: OperationURLParameter = {\n  parameterPath: \"hashOrKbi\",\n  mapper: {\n    serializedName: \"hash_or_kbi\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction17: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash1: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n    },\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ownedBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedBy\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"owned_by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const state1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction18: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction19: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id3: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction20: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction21: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction22: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction23: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction24: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction25: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id4: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const intervalBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const minStartDate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"minStartDate\"],\n  mapper: {\n    serializedName: \"min_start_date\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxStartDate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxStartDate\"],\n  mapper: {\n    serializedName: \"max_start_date\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const typeParam1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction26: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction27: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction28: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const intervalBy1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction29: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction30: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const intervalBy2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const txType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"txType\"],\n  mapper: {\n    serializedName: \"tx_type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction31: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const typeParam2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n  collectionFormat: \"Multi\",\n};\n\nexport const typeGroup: OperationQueryParameter = {\n  parameterPath: [\"options\", \"typeGroup\"],\n  mapper: {\n    serializedName: \"type_group\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n  collectionFormat: \"Multi\",\n};\n\nexport const account: OperationQueryParameter = {\n  parameterPath: [\"options\", \"account\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"account\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const channel: OperationQueryParameter = {\n  parameterPath: [\"options\", \"channel\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ch_\\\\w{38,50}$\"),\n    },\n    serializedName: \"channel\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const oracle: OperationQueryParameter = {\n  parameterPath: [\"options\", \"oracle\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n    },\n    serializedName: \"oracle\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const senderId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"senderId\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"sender_id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const recipientId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"recipientId\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"recipient_id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const entrypoint: OperationQueryParameter = {\n  parameterPath: [\"options\", \"entrypoint\"],\n  mapper: {\n    serializedName: \"entrypoint\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction32: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id5: OperationQueryParameter = {\n  parameterPath: [\"options\", \"id\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash2: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n    },\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction33: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TokenResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TokenResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TokenResponse\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ownerId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PaginatedResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedResponse\",\n    modelProperties: {\n      next: {\n        serializedName: \"next\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prev: {\n        serializedName: \"prev\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex9BalanceResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex9BalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9BalanceResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      tokenName: {\n        serializedName: \"token_name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenSymbol: {\n        serializedName: \"token_symbol\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txType: {\n        serializedName: \"tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Ymnu9GV3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ymnu9GV3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DexSwap\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const DexSwap: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DexSwap\",\n    modelProperties: {\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amounts: {\n        serializedName: \"amounts\",\n        type: {\n          name: \"Composite\",\n          className: \"DexSwapAmounts\",\n        },\n      },\n      caller: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromAmount: {\n        serializedName: \"from_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fromContract: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"from_contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromDecimals: {\n        serializedName: \"from_decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fromToken: {\n        serializedName: \"from_token\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      toAccount: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"to_account\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toAmount: {\n        serializedName: \"to_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      toContract: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"to_contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toDecimals: {\n        serializedName: \"to_decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      toToken: {\n        serializedName: \"to_token\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DexSwapAmounts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DexSwapAmounts\",\n    modelProperties: {\n      amount0In: {\n        serializedName: \"amount0_in\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount0Out: {\n        serializedName: \"amount0_out\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount1In: {\n        serializedName: \"amount1_in\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount1Out: {\n        serializedName: \"amount1_out\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Ent1R1V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ent1R1V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Activity\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Activity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Activity\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"Composite\",\n          className: \"ActivityPayload\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ActivityPayload: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ActivityPayload\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      recipientId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      senderId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recipient: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient\",\n        type: {\n          name: \"String\",\n        },\n      },\n      sender: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\",\n        },\n      },\n      refTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsC0UvfgV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsC0UvfgV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Pointee\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Pointee: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Pointee\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      key: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^\\\\w+\\\\.chain$\"),\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const NotFoundResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotFoundResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsLv15NfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsLv15NfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        channelCloseMutualTx: {\n          serializedName: \"channel_close_mutual_tx\",\n          type: {\n            name: \"Composite\",\n            className: \"Get200ApplicationJsonProperties\",\n          },\n        },\n        channelCloseSoloTx: {\n          serializedName: \"channel_close_solo_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsKcpsuzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx\",\n          },\n        },\n        channelCreateTx: {\n          serializedName: \"channel_create_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1W3C1Z4V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx\",\n          },\n        },\n        channelDepositTx: {\n          serializedName: \"channel_deposit_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsTvtzmvV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx\",\n          },\n        },\n        channelForceProgressTx: {\n          serializedName: \"channel_force_progress_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsMxcme6V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx\",\n          },\n        },\n        channelOffchainTx: {\n          serializedName: \"channel_offchain_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Cnk4LbV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx\",\n          },\n        },\n        channelSetDelegatesTx: {\n          serializedName: \"channel_set_delegates_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths13Ss1Q2V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx\",\n          },\n        },\n        channelSettleTx: {\n          serializedName: \"channel_settle_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Gime4MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx\",\n          },\n        },\n        channelSlashTx: {\n          serializedName: \"channel_slash_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsVn5L1LV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx\",\n          },\n        },\n        channelSnapshotSoloTx: {\n          serializedName: \"channel_snapshot_solo_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths10T1AqyV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx\",\n          },\n        },\n        channelWithdrawTx: {\n          serializedName: \"channel_withdraw_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsTr523PV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx\",\n          },\n        },\n        contractCallTx: {\n          serializedName: \"contract_call_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsChduayV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx\",\n          },\n        },\n        contractCreateTx: {\n          serializedName: \"contract_create_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths5Shu25V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCreateTx\",\n          },\n        },\n        gaAttachTx: {\n          serializedName: \"ga_attach_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1RkuxepV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx\",\n          },\n        },\n        gaMetaTx: {\n          serializedName: \"ga_meta_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsQklaaxV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx\",\n          },\n        },\n        nameClaimTx: {\n          serializedName: \"name_claim_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Hacjy0V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx\",\n          },\n        },\n        namePreclaimTx: {\n          serializedName: \"name_preclaim_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths139X1XaV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx\",\n          },\n        },\n        nameRevokeTx: {\n          serializedName: \"name_revoke_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1R3Fb8MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx\",\n          },\n        },\n        nameTransferTx: {\n          serializedName: \"name_transfer_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsZdcclfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx\",\n          },\n        },\n        nameUpdateTx: {\n          serializedName: \"name_update_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1VkyqhtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx\",\n          },\n        },\n        oracleExtendTx: {\n          serializedName: \"oracle_extend_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths107D9HzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx\",\n          },\n        },\n        oracleQueryTx: {\n          serializedName: \"oracle_query_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsS6Nx2KV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx\",\n          },\n        },\n        oracleRegisterTx: {\n          serializedName: \"oracle_register_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths184Oz8CV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx\",\n          },\n        },\n        oracleResponseTx: {\n          serializedName: \"oracle_response_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsLm5DjtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx\",\n          },\n        },\n        payingForTx: {\n          serializedName: \"paying_for_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths16B89KuV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx\",\n          },\n        },\n        spendTx: {\n          serializedName: \"spend_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Ljyzq7V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx\",\n          },\n        },\n        total: {\n          serializedName: \"total\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Get200ApplicationJsonProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Get200ApplicationJsonProperties\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsKcpsuzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKcpsuzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1W3C1Z4V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1W3C1Z4V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx\",\n      modelProperties: {\n        initiatorId: {\n          serializedName: \"initiator_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        responderId: {\n          serializedName: \"responder_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsTvtzmvV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsTvtzmvV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsMxcme6V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsMxcme6V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Cnk4LbV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Cnk4LbV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths13Ss1Q2V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths13Ss1Q2V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Gime4MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Gime4MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsVn5L1LV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsVn5L1LV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths10T1AqyV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths10T1AqyV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsTr523PV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsTr523PV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        toId: {\n          serializedName: \"to_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsChduayV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsChduayV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx\",\n      modelProperties: {\n        callerId: {\n          serializedName: \"caller_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        contractId: {\n          serializedName: \"contract_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths5Shu25V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCreateTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths5Shu25V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCreateTx\",\n      modelProperties: {\n        ownerId: {\n          serializedName: \"owner_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1RkuxepV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1RkuxepV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx\",\n      modelProperties: {\n        ownerId: {\n          serializedName: \"owner_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsQklaaxV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsQklaaxV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx\",\n      modelProperties: {\n        gaId: {\n          serializedName: \"ga_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Hacjy0V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Hacjy0V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths139X1XaV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths139X1XaV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        commitmentId: {\n          serializedName: \"commitment_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1R3Fb8MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1R3Fb8MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        nameId: {\n          serializedName: \"name_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsZdcclfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZdcclfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        nameId: {\n          serializedName: \"name_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        recipientId: {\n          serializedName: \"recipient_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1VkyqhtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1VkyqhtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        nameId: {\n          serializedName: \"name_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths107D9HzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths107D9HzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx\",\n      modelProperties: {\n        oracleId: {\n          serializedName: \"oracle_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsS6Nx2KV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsS6Nx2KV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx\",\n      modelProperties: {\n        oracleId: {\n          serializedName: \"oracle_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        senderId: {\n          serializedName: \"sender_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths184Oz8CV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths184Oz8CV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsLm5DjtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsLm5DjtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx\",\n      modelProperties: {\n        oracleId: {\n          serializedName: \"oracle_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths16B89KuV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths16B89KuV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx\",\n      modelProperties: {\n        payerId: {\n          serializedName: \"payer_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Ljyzq7V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ljyzq7V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx\",\n      modelProperties: {\n        recipientId: {\n          serializedName: \"recipient_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        senderId: {\n          serializedName: \"sender_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141Response\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141Response\",\n    modelProperties: {\n      baseUrl: {\n        serializedName: \"base_url\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      creationTime: {\n        serializedName: \"creation_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      invalid: {\n        serializedName: \"invalid\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      limits: {\n        serializedName: \"limits\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TemplatesResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TemplatesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplatesResponse\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      edition: {\n        serializedName: \"edition\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TemplateTokensResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TemplateTokensResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplateTokensResponse\",\n    modelProperties: {\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ownerId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TokenResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Fbvaw8V3Aex141ContractidTokensTokenidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Fbvaw8V3Aex141ContractidTokensTokenidGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        data: {\n          constraints: {\n            Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n          },\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TransferEvent\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TransferEvent\",\n    modelProperties: {\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      recipient: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sender: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex9Response\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex9Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9Response\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      eventSupply: {\n        serializedName: \"event_supply\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      holders: {\n        serializedName: \"holders\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      initialSupply: {\n        serializedName: \"initial_supply\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      invalid: {\n        serializedName: \"invalid\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      symbol: {\n        serializedName: \"symbol\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex9ContractBalanceResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex9ContractBalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9ContractBalanceResponse\",\n    modelProperties: {\n      accountId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastLogIdx: {\n        serializedName: \"last_log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        account: {\n          constraints: {\n            Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n          },\n          serializedName: \"account\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        amount: {\n          serializedName: \"amount\",\n          required: true,\n          type: {\n            // @ts-expect-error we are extending autorest with BigInt support\n            name: \"BigInt\",\n          },\n        },\n        contract: {\n          constraints: {\n            Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n          },\n          serializedName: \"contract\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Get200ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\",\n      modelProperties: {\n        account: {\n          constraints: {\n            Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n          },\n          serializedName: \"account\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        amount: {\n          serializedName: \"amount\",\n          required: true,\n          type: {\n            // @ts-expect-error we are extending autorest with BigInt support\n            name: \"BigInt\",\n          },\n        },\n        contract: {\n          constraints: {\n            Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n          },\n          serializedName: \"contract\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        height: {\n          serializedName: \"height\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Channel\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channel: {\n        constraints: {\n          Pattern: new RegExp(\"^ch_\\\\w{38,50}$\"),\n        },\n        serializedName: \"channel\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      initiator: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"initiator\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lastUpdatedHeight: {\n        serializedName: \"last_updated_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastUpdatedTime: {\n        serializedName: \"last_updated_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      lastUpdatedTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_updated_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lastUpdatedTxType: {\n        serializedName: \"last_updated_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      responder: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"responder\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        constraints: {\n          Pattern: new RegExp(\"^st_\\\\w+$\"),\n        },\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      updatesCount: {\n        serializedName: \"updates_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"ContractCall\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const ContractCall: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCall\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      localIdx: {\n        serializedName: \"local_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"ContractLog\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const ContractLog: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractLog\",\n    modelProperties: {\n      args: {\n        serializedName: \"args\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      eventHash: {\n        serializedName: \"event_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      eventName: {\n        serializedName: \"event_name\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extCallerContractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ext_caller_contract_id\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extCallerContractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ext_caller_contract_tx_hash\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      parentContractId: {\n        serializedName: \"parent_contract_id\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      aexnType: {\n        serializedName: \"aexn_type\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contract: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      createTx: {\n        serializedName: \"create_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DexSwap\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DexSwap\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"KeyBlock\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      beneficiary: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      beneficiaryReward: {\n        serializedName: \"beneficiary_reward\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^kh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      info: {\n        constraints: {\n          Pattern: new RegExp(\"^cb_\\\\w+$\"),\n        },\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microBlocksCount: {\n        serializedName: \"micro_blocks_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      miner: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pow: {\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\",\n            },\n          },\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        constraints: {\n          Pattern: new RegExp(\"^kh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        constraints: {\n          Pattern: new RegExp(\"^bs_\\\\w{38,50}$\"),\n        },\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      transactionsCount: {\n        serializedName: \"transactions_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"MicroBlock\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const MicroBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlock\",\n    modelProperties: {\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microBlockIndex: {\n        serializedName: \"micro_block_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pofHash: {\n        constraints: {\n          Pattern: new RegExp(\"^no_fraud|bf_\\\\w{38,50}$\"),\n        },\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        constraints: {\n          Pattern: new RegExp(\"^kh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      signature: {\n        constraints: {\n          Pattern: new RegExp(\"^sg_\\\\w+$\"),\n        },\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        constraints: {\n          Pattern: new RegExp(\"^bs_\\\\w{38,50}$\"),\n        },\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      transactionsCount: {\n        serializedName: \"transactions_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txsHash: {\n        constraints: {\n          Pattern: new RegExp(\"^bx_\\\\w{38,50}$\"),\n        },\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Transaction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Transaction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transaction\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Name\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Name: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      approximateActivationTime: {\n        serializedName: \"approximate_activation_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      approximateExpireTime: {\n        serializedName: \"approximate_expire_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      auction: {\n        serializedName: \"auction\",\n        type: {\n          name: \"Composite\",\n          className: \"Auction\",\n        },\n      },\n      auctionTimeout: {\n        serializedName: \"auction_timeout\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^nm_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^\\\\w+\\\\.chain$\"),\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ownership: {\n        serializedName: \"ownership\",\n        type: {\n          name: \"Composite\",\n          className: \"NameOwnership\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      revoke: {\n        serializedName: \"revoke\",\n        type: {\n          name: \"Composite\",\n          className: \"NameTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const Auction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Auction\",\n    modelProperties: {\n      activationTime: {\n        serializedName: \"activation_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      approximateExpireTime: {\n        serializedName: \"approximate_expire_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      auctionEnd: {\n        serializedName: \"auction_end\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastBid: {\n        serializedName: \"last_bid\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionLastBid\",\n        },\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^\\\\w+\\\\.chain$\"),\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const AuctionLastBid: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionLastBid\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const NameOwnership: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameOwnership\",\n    modelProperties: {\n      current: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"current\",\n        type: {\n          name: \"String\",\n        },\n      },\n      original: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"original\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTx\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"NameTxTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTxTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTxTx\",\n    modelProperties: {\n      accountId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nameId: {\n        constraints: {\n          Pattern: new RegExp(\"^nm_\\\\w{38,50}$\"),\n        },\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Auction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameClaim\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const NameClaim: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaim\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalSource: {\n        serializedName: \"internal_source\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameClaim\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameTransfer\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const NameTransfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransfer\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalSource: {\n        serializedName: \"internal_source\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameUpdate\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const NameUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdate\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalSource: {\n        serializedName: \"internal_source\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Oracle\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Oracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Oracle\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      approximateExpireTime: {\n        serializedName: \"approximate_expire_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      format: {\n        serializedName: \"format\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleFormat\",\n        },\n      },\n      oracle: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      register: {\n        serializedName: \"register\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleTx\",\n        },\n      },\n      registerTime: {\n        serializedName: \"register_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      registerTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"register_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleFormat\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleTx\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleTxTx\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleTxTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleTxTx\",\n    modelProperties: {\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleTxOracleTtl\",\n        },\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleTxOracleTtl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleTxOracleTtl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"OracleExtend\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const OracleExtend: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtend\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleExtendTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleExtendTxOracleTtl\",\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleExtendTxOracleTtl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTxOracleTtl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"OracleQuery\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      queryId: {\n        constraints: {\n          Pattern: new RegExp(\"^oq_\\\\w{38,50}$\"),\n        },\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleResponse\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      senderId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleResponse\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleResponse\",\n        },\n      },\n      queryId: {\n        constraints: {\n          Pattern: new RegExp(\"^oq_\\\\w{38,50}$\"),\n        },\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"OracleResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Stats: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Stats\",\n    modelProperties: {\n      feesTrend: {\n        serializedName: \"fees_trend\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      last24HsAverageTransactionFees: {\n        serializedName: \"last_24hs_average_transaction_fees\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      last24HsTransactions: {\n        serializedName: \"last_24hs_transactions\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      maxTransactionsPerSecond: {\n        serializedName: \"max_transactions_per_second\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      maxTransactionsPerSecondBlockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^kh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"max_transactions_per_second_block_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      minersCount: {\n        serializedName: \"miners_count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      transactionsTrend: {\n        serializedName: \"transactions_trend\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsV2Gh3TV3StatisticsBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsV2Gh3TV3StatisticsBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Stat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Stat\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      endDate: {\n        serializedName: \"end_date\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      startDate: {\n        serializedName: \"start_date\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsYpljbvV3DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsYpljbvV3DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DeltaStat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const DeltaStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeltaStat\",\n    modelProperties: {\n      auctionsStarted: {\n        serializedName: \"auctions_started\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockReward: {\n        serializedName: \"block_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      burnedInAuctions: {\n        serializedName: \"burned_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelsClosed: {\n        serializedName: \"channels_closed\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      channelsOpened: {\n        serializedName: \"channels_opened\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractsCreated: {\n        serializedName: \"contracts_created\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      devReward: {\n        serializedName: \"dev_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lockedInAuctions: {\n        serializedName: \"locked_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockedInChannels: {\n        serializedName: \"locked_in_channels\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      namesActivated: {\n        serializedName: \"names_activated\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      namesExpired: {\n        serializedName: \"names_expired\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      namesRevoked: {\n        serializedName: \"names_revoked\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oraclesExpired: {\n        serializedName: \"oracles_expired\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oraclesRegistered: {\n        serializedName: \"oracles_registered\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths10OmbqhV3MinerstatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths10OmbqhV3MinerstatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Miner\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Miner: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Miner\",\n    modelProperties: {\n      miner: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      totalReward: {\n        serializedName: \"total_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsAc89GqV3StatisticsNamesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsAc89GqV3StatisticsNamesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Vms155V3TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Vms155V3TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"TotalStat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const TotalStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TotalStat\",\n    modelProperties: {\n      activeAuctions: {\n        serializedName: \"active_auctions\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      activeNames: {\n        serializedName: \"active_names\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      activeOracles: {\n        serializedName: \"active_oracles\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      burnedInAuctions: {\n        serializedName: \"burned_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      contracts: {\n        serializedName: \"contracts\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      inactiveNames: {\n        serializedName: \"inactive_names\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      inactiveOracles: {\n        serializedName: \"inactive_oracles\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lockedInAuctions: {\n        serializedName: \"locked_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockedInChannels: {\n        serializedName: \"locked_in_channels\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      openChannels: {\n        serializedName: \"open_channels\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sumBlockReward: {\n        serializedName: \"sum_block_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      sumDevReward: {\n        serializedName: \"sum_dev_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      totalTokenSupply: {\n        serializedName: \"total_token_supply\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Syc8AnV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Syc8AnV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      mdwAsyncTasks: {\n        serializedName: \"mdw_async_tasks\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMdwAsyncTasks\",\n        },\n      },\n      mdwGensPerMinute: {\n        serializedName: \"mdw_gens_per_minute\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwHeight: {\n        serializedName: \"mdw_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwLastMigration: {\n        serializedName: \"mdw_last_migration\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwRevision: {\n        serializedName: \"mdw_revision\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      mdwSynced: {\n        serializedName: \"mdw_synced\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      mdwSyncing: {\n        serializedName: \"mdw_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      mdwTxIndex: {\n        serializedName: \"mdw_tx_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwVersion: {\n        serializedName: \"mdw_version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeHeight: {\n        serializedName: \"node_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nodeProgress: {\n        serializedName: \"node_progress\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeSyncing: {\n        serializedName: \"node_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const StatusMdwAsyncTasks: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMdwAsyncTasks\",\n    modelProperties: {\n      longTasks: {\n        serializedName: \"long_tasks\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      producerBuffer: {\n        serializedName: \"producer_buffer\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      totalPending: {\n        serializedName: \"total_pending\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Transaction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Transfer\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Transfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transfer\",\n    modelProperties: {\n      accountId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      refBlockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_block_hash\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      refTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_tx_hash\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      refTxType: {\n        serializedName: \"ref_tx_type\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Aex9TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      recipientId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      senderId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Aex9TransferResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      recipient: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sender: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const InternalContractCallEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalContractCallEvent\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const InternalTransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalTransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      refTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameClaimEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimEvent\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PaginatedResponse.type.modelProperties,\n        ...PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1\n          .type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Ceolv9V3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ceolv9V3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Ymnu9GV3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Opead5V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Opead5V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Ent1R1V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Gc4HwtV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Gc4HwtV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsC0UvfgV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PaginatedResponse.type.modelProperties,\n        ...Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1\n          .type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsJd68YV3StatisticsBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsJd68YV3StatisticsBlocksGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsV2Gh3TV3StatisticsBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsQtodvgV3DeltastatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsQtodvgV3DeltastatsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsYpljbvV3DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsZ2B507V3MinerstatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZ2B507V3MinerstatsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths10OmbqhV3MinerstatsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsD2HmjxV3StatisticsNamesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsD2HmjxV3StatisticsNamesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsAc89GqV3StatisticsNamesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsFrvc1LV3TotalstatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsFrvc1LV3TotalstatsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Vms155V3TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths150Ou6YV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths150Ou6YV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Syc8AnV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n","import { createSerializer } from \"../../utils/autorest.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  MiddlewareOptionalParams,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAccountDexSwapsOptionalParams,\n  GetAccountDexSwapsResponse,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetAccountPointeesOptionalParams,\n  GetAccountPointeesResponse,\n  GetAccountTransactionsCountOptionalParams,\n  GetAccountTransactionsCountResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ContractTokensOptionalParams,\n  GetAex141ContractTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractTransfersOptionalParams,\n  GetAex141ContractTransfersResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractCallsOptionalParams,\n  GetContractCallsResponse,\n  GetContractLogsOptionalParams,\n  GetContractLogsResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetDexSwapsOptionalParams,\n  GetDexSwapsResponse,\n  GetDexSwapsByContractIdOptionalParams,\n  GetDexSwapsByContractIdResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameAuctionClaimsOptionalParams,\n  GetNameAuctionClaimsResponse,\n  GetNamesCountOptionalParams,\n  GetNamesCountResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOracleExtendsOptionalParams,\n  GetOracleExtendsResponse,\n  GetOracleQueriesOptionalParams,\n  GetOracleQueriesResponse,\n  GetOracleResponsesOptionalParams,\n  GetOracleResponsesResponse,\n  GetStatsOptionalParams,\n  GetStatsResponse,\n  GetBlocksStatsOptionalParams,\n  GetBlocksStatsResponse,\n  GetDeltaStatsOptionalParams,\n  GetDeltaStatsResponse,\n  GetMinerStatsOptionalParams,\n  GetMinerStatsResponse,\n  GetNamesStatsOptionalParams,\n  GetNamesStatsResponse,\n  GetTotalStatsOptionalParams,\n  GetTotalStatsResponse,\n  GetTransactionsStatsOptionalParams,\n  GetTransactionsStatsResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTransactionsOptionalParams,\n  GetTransactionsResponse,\n  GetTransactionsCountOptionalParams,\n  GetTransactionsCountResponse,\n  GetTransactionOptionalParams,\n  GetTransactionResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n} from \"./models/index.js\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: `ak_${string}`,\n    options?: GetAex141OwnedTokensOptionalParams,\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: `ak_${string}`,\n    options?: GetAex9AccountBalancesOptionalParams,\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAccountDexSwaps(\n    accountId: `ak_${string}`,\n    options?: GetAccountDexSwapsOptionalParams,\n  ): Promise<GetAccountDexSwapsResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountDexSwapsOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account activities.\n   * @param id The account address Account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    id: `ak_${string}`,\n    options?: GetAccountActivitiesOptionalParams,\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountActivitiesOperationSpec,\n    );\n  }\n\n  /**\n   * Get account pointees\n   * @param id The account that names point to Account address\n   * @param options The options parameters.\n   */\n  getAccountPointees(\n    id: `ak_${string}`,\n    options?: GetAccountPointeesOptionalParams,\n  ): Promise<GetAccountPointeesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountPointeesOperationSpec,\n    );\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param id The ID of the address/name/oracle/etc Account address\n   * @param options The options parameters.\n   */\n  getAccountTransactionsCount(\n    id: `ak_${string}`,\n    options?: GetAccountTransactionsCountOptionalParams,\n  ): Promise<GetAccountTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams,\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec,\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTemplatesOptionalParams,\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id Contract address\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: `ct_${string}`,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams,\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTokens(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTokensOptionalParams,\n  ): Promise<GetAex141ContractTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id Contract address\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: `ct_${string}`,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams,\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 transfers on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTransfers(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTransfersOptionalParams,\n  ): Promise<GetAex141ContractTransfersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: `ct_${string}`,\n    options?: GetAex141ByContractOptionalParams,\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams,\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams,\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: `ct_${string}`,\n    options?: GetAex9ContractBalancesOptionalParams,\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: `ct_${string}`,\n    options?: GetAex9ByContractOptionalParams,\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams,\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel Channel ID\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: `ch_${string}`,\n    options?: GetChannelOptionalParams,\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractCalls(\n    options?: GetContractCallsOptionalParams,\n  ): Promise<GetContractCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractCallsOperationSpec,\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractLogs(\n    options?: GetContractLogsOptionalParams,\n  ): Promise<GetContractLogsResponse> {\n    return this.sendOperationRequest({ options }, getContractLogsOperationSpec);\n  }\n\n  /**\n   * Gets contract creation info.\n   * @param id Contract that emitted the logs Contract address\n   * @param options The options parameters.\n   */\n  getContract(\n    id: `ct_${string}`,\n    options?: GetContractOptionalParams,\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest({ id, options }, getContractOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param options The options parameters.\n   */\n  getDexSwaps(\n    options?: GetDexSwapsOptionalParams,\n  ): Promise<GetDexSwapsResponse> {\n    return this.sendOperationRequest({ options }, getDexSwapsOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getDexSwapsByContractId(\n    contractId: `ct_${string}`,\n    options?: GetDexSwapsByContractIdOptionalParams,\n  ): Promise<GetDexSwapsByContractIdResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getDexSwapsByContractIdOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams,\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockOptionalParams,\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockMicroBlocksOptionalParams,\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockOptionalParams,\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockTransactionsOptionalParams,\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams,\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionOptionalParams,\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction claims\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuctionClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionClaimsOptionalParams,\n  ): Promise<GetNameAuctionClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the total number of active names.\n   * @param options The options parameters.\n   */\n  getNamesCount(\n    options?: GetNamesCountOptionalParams,\n  ): Promise<GetNamesCountResponse> {\n    return this.sendOperationRequest({ options }, getNamesCountOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getName(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameOptionalParams,\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameClaimsOptionalParams,\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameTransfersOptionalParams,\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameUpdatesOptionalParams,\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: `ok_${string}`,\n    options?: GetOracleOptionalParams,\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get an oracle's extensions.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleExtends(\n    id: `ok_${string}`,\n    options?: GetOracleExtendsOptionalParams,\n  ): Promise<GetOracleExtendsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleExtendsOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's queries.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleQueries(\n    id: `ok_${string}`,\n    options?: GetOracleQueriesOptionalParams,\n  ): Promise<GetOracleQueriesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleQueriesOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's responses.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleResponses(\n    id: `ok_${string}`,\n    options?: GetOracleResponsesOptionalParams,\n  ): Promise<GetOracleResponsesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleResponsesOperationSpec,\n    );\n  }\n\n  /**\n   * Get stats.\n   * @param options The options parameters.\n   */\n  getStats(options?: GetStatsOptionalParams): Promise<GetStatsResponse> {\n    return this.sendOperationRequest({ options }, getStatsOperationSpec);\n  }\n\n  /**\n   * Get total blocks count stats.\n   * @param options The options parameters.\n   */\n  getBlocksStats(\n    options?: GetBlocksStatsOptionalParams,\n  ): Promise<GetBlocksStatsResponse> {\n    return this.sendOperationRequest({ options }, getBlocksStatsOperationSpec);\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltaStats(\n    options?: GetDeltaStatsOptionalParams,\n  ): Promise<GetDeltaStatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltaStatsOperationSpec);\n  }\n\n  /**\n   * Get miners list with total rewards obtained through mining.\n   * @param options The options parameters.\n   */\n  getMinerStats(\n    options?: GetMinerStatsOptionalParams,\n  ): Promise<GetMinerStatsResponse> {\n    return this.sendOperationRequest({ options }, getMinerStatsOperationSpec);\n  }\n\n  /**\n   * Get total names count stats.\n   * @param options The options parameters.\n   */\n  getNamesStats(\n    options?: GetNamesStatsOptionalParams,\n  ): Promise<GetNamesStatsResponse> {\n    return this.sendOperationRequest({ options }, getNamesStatsOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalStats(\n    options?: GetTotalStatsOptionalParams,\n  ): Promise<GetTotalStatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalStatsOperationSpec);\n  }\n\n  /**\n   * Get total transactions count stats.\n   * @param options The options parameters.\n   */\n  getTransactionsStats(\n    options?: GetTransactionsStatsOptionalParams,\n  ): Promise<GetTransactionsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTransactions(\n    options?: GetTransactionsOptionalParams,\n  ): Promise<GetTransactionsResponse> {\n    return this.sendOperationRequest({ options }, getTransactionsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTransactionsCount(\n    options?: GetTransactionsCountOptionalParams,\n  ): Promise<GetTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hash The transaction encoded hash Transaction hash\n   * @param options The options parameters.\n   */\n  getTransaction(\n    hash: `th_${string}`,\n    options?: GetTransactionOptionalParams,\n  ): Promise<GetTransactionResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams,\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = createSerializer(Mappers, /* isXml */ false);\n\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex141/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.contract,\n  ],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex9/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{account_id}/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ceolv9V3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction1],\n  urlParameters: [Parameters.$host, Parameters.accountId1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{id}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Opead5V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.ownedOnly,\n    Parameters.typeParam,\n    Parameters.scope,\n    Parameters.direction2,\n  ],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountPointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{id}/names/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Gc4HwtV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/count/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsLv15NfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction3,\n    Parameters.by,\n    Parameters.prefix,\n    Parameters.exact,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction4],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction5],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction6],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Fbvaw8V3Aex141ContractidTokensTokenidGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction7,\n    Parameters.fromParam,\n    Parameters.to,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.exact,\n    Parameters.direction8,\n    Parameters.by1,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction9,\n    Parameters.by2,\n    Parameters.blockHash,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/aex9/{contractId}/balances/{accountId}/history\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper:\n          Mappers.Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorResponse,\n        isError: true,\n      },\n    },\n    queryParameters: [\n      Parameters.limit,\n      Parameters.scope,\n      Parameters.direction10,\n    ],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.accountId,\n      Parameters.contractId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction11,\n    Parameters.state,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction12],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionParam,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs,\n    Parameters.direction13,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Contract,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction14],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsByContractIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/{contract_id}/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction15],\n  urlParameters: [Parameters.$host, Parameters.contractId2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction16],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction17],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.by2,\n    Parameters.ownedBy,\n    Parameters.state1,\n    Parameters.direction18,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction19],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction20],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction21],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.ownedBy],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction22],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction23],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction24],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.state1,\n    Parameters.direction25,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleExtendsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/extends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueriesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleResponsesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/responses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Stats,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBlocksStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/statistics/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsJd68YV3StatisticsBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.typeParam1,\n    Parameters.direction26,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeltaStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/deltastats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsQtodvgV3DeltastatsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction27],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMinerStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/minerstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsZ2B507V3MinerstatsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction28],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/statistics/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsD2HmjxV3StatisticsNamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy1,\n    Parameters.direction29,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTotalStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/totalstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFrvc1LV3TotalstatsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction30],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/statistics/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths150Ou6YV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy2,\n    Parameters.txType,\n    Parameters.direction31,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.contract,\n    Parameters.scope,\n    Parameters.typeParam2,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint,\n    Parameters.direction32,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id5],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transaction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction33],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\nexport const operationSpecs = [\n  getAex141OwnedTokensOperationSpec,\n  getAex9AccountBalancesOperationSpec,\n  getAccountDexSwapsOperationSpec,\n  getAccountActivitiesOperationSpec,\n  getAccountPointeesOperationSpec,\n  getAccountTransactionsCountOperationSpec,\n  getSortedAex141ContractsOperationSpec,\n  getAex141ContractTemplatesOperationSpec,\n  getAex141TemplateTokensOperationSpec,\n  getAex141ContractTokensOperationSpec,\n  getAex141TokenOwnerOperationSpec,\n  getAex141ContractTransfersOperationSpec,\n  getAex141ByContractOperationSpec,\n  getSortedAex9TokensOperationSpec,\n  getAex9TokensCountOperationSpec,\n  getAex9ContractBalancesOperationSpec,\n  getAex9ContractAccountBalanceOperationSpec,\n  getAex9ByContractOperationSpec,\n  getChannelsOperationSpec,\n  getChannelOperationSpec,\n  getContractCallsOperationSpec,\n  getContractLogsOperationSpec,\n  getContractOperationSpec,\n  getDexSwapsOperationSpec,\n  getDexSwapsByContractIdOperationSpec,\n  getKeyBlocksOperationSpec,\n  getKeyBlockOperationSpec,\n  getKeyBlockMicroBlocksOperationSpec,\n  getMicroBlockOperationSpec,\n  getMicroBlockTransactionsOperationSpec,\n  getNamesOperationSpec,\n  getNamesAuctionsOperationSpec,\n  getNameAuctionOperationSpec,\n  getNameAuctionClaimsOperationSpec,\n  getNamesCountOperationSpec,\n  getNameOperationSpec,\n  getNameClaimsOperationSpec,\n  getNameTransfersOperationSpec,\n  getNameUpdatesOperationSpec,\n  getOraclesOperationSpec,\n  getOracleOperationSpec,\n  getOracleExtendsOperationSpec,\n  getOracleQueriesOperationSpec,\n  getOracleResponsesOperationSpec,\n  getStatsOperationSpec,\n  getBlocksStatsOperationSpec,\n  getDeltaStatsOperationSpec,\n  getMinerStatsOperationSpec,\n  getNamesStatsOperationSpec,\n  getTotalStatsOperationSpec,\n  getTransactionsStatsOperationSpec,\n  getStatusOperationSpec,\n  getTransactionsOperationSpec,\n  getTransactionsCountOperationSpec,\n  getTransactionOperationSpec,\n  getTransfersOperationSpec,\n] as const;\n","/* eslint-disable max-classes-per-file */\nimport type Middleware from '../Middleware.js';\nimport { BaseError } from './errors.js';\n\nexport interface MiddlewareRawPage {\n  data: unknown[];\n  next: string | null;\n  prev: string | null;\n}\n\nexport function isMiddlewareRawPage(maybePage: unknown): maybePage is MiddlewareRawPage {\n  const testPage = maybePage as MiddlewareRawPage;\n  return (\n    testPage?.data != null &&\n    Array.isArray(testPage.data) &&\n    'next' in testPage &&\n    'prev' in testPage\n  );\n}\n\n/**\n * @category exception\n */\nexport class MiddlewarePageMissed extends BaseError {\n  constructor(isNext: boolean) {\n    super(`There is no ${isNext ? 'next' : 'previous'} page`);\n    this.name = 'MiddlewarePageMissed';\n  }\n}\n\n/**\n * A wrapper around the middleware's page allowing to get the next/previous pages.\n */\nexport class MiddlewarePage<Item> {\n  readonly data: Item[];\n\n  readonly nextPath: null | string;\n\n  readonly prevPath: null | string;\n\n  readonly #middleware: Middleware;\n\n  constructor(rawPage: MiddlewareRawPage, middleware: Middleware) {\n    this.data = rawPage.data as Item[];\n    this.nextPath = rawPage.next;\n    this.prevPath = rawPage.prev;\n    this.#middleware = middleware;\n  }\n\n  /**\n   * Get the next page.\n   * Check the presence of `nextPath` to not fall outside existing pages.\n   * @throws MiddlewarePageMissed\n   */\n  async next(): Promise<MiddlewarePage<Item>> {\n    if (this.nextPath == null) throw new MiddlewarePageMissed(true);\n    return this.#middleware.requestByPath(this.nextPath);\n  }\n\n  /**\n   * Get the previous page.\n   * Check the presence of `prevPath` to not fall outside existing pages.\n   * @throws MiddlewarePageMissed\n   */\n  async prev(): Promise<MiddlewarePage<Item>> {\n    if (this.prevPath == null) throw new MiddlewarePageMissed(false);\n    return this.#middleware.requestByPath(this.prevPath);\n  }\n}\n","import { OperationArguments, OperationOptions, OperationSpec } from '@azure/core-client';\nimport { userAgentPolicyName, setClientRequestIdPolicyName } from '@azure/core-rest-pipeline';\nimport {\n  genRequestQueuesPolicy,\n  genCombineGetRequestsPolicy,\n  genErrorFormatterPolicy,\n  parseBigIntPolicy,\n  genVersionCheckPolicy,\n  genRetryOnFailurePolicy,\n} from './utils/autorest.js';\nimport {\n  Middleware as MiddlewareApi,\n  MiddlewareOptionalParams,\n  ErrorResponse,\n} from './apis/middleware/index.js';\nimport { operationSpecs } from './apis/middleware/middleware.js';\nimport { IllegalArgumentError, InternalError } from './utils/errors.js';\nimport { MiddlewarePage, isMiddlewareRawPage } from './utils/MiddlewarePage.js';\n\nexport default class Middleware extends MiddlewareApi {\n  /**\n   * @param url - Url for middleware API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the middleware is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false,\n      retryCount = 3,\n      retryOverallDelay = 800,\n      ...options\n    }: MiddlewareOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    let version: string | undefined;\n    const getVersion = async (opts: OperationOptions): Promise<string> => {\n      if (version != null) return version;\n      version = (await this.getStatus(opts)).mdwVersion;\n      return version;\n    };\n\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        ...(ignoreVersion\n          ? []\n          : [genVersionCheckPolicy('middleware', getVersion, '1.81.0', '2.0.0')]),\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorResponse) => ` ${body.error}`),\n      ],\n      ...options,\n    });\n    this.pipeline.addPolicy(parseBigIntPolicy, { phase: 'Deserialize' });\n    this.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n    // TODO: use instead our retry policy\n    this.pipeline.removePolicy({ name: 'defaultRetryPolicy' });\n  }\n\n  /**\n   * Get a middleware response by path instead of a method name and arguments.\n   * @param pathWithQuery - a path to request starting with `/v3/`\n   */\n  async requestByPath<Response = unknown>(pathWithQuery: string): Promise<Response> {\n    const queryPos = pathWithQuery.indexOf('?');\n    const path = pathWithQuery.slice(0, queryPos === -1 ? pathWithQuery.length : queryPos);\n    const query = pathWithQuery.slice(queryPos === -1 ? pathWithQuery.length : queryPos + 1);\n\n    const operationSpec = operationSpecs.find((os) => {\n      let p = path;\n      if (os.path == null) return false;\n      const groups = os.path.replace(/{\\w+}/g, '{param}').split('{param}');\n      while (groups.length > 0) {\n        const part = groups.shift();\n        if (part == null) throw new InternalError(`Unexpected operation spec path: ${os.path}`);\n        if (!p.startsWith(part)) return false;\n        p = p.replace(part, '');\n        if (groups.length > 0) p = p.replace(/^[\\w.]+/, '');\n      }\n      return p === '';\n    });\n    if (operationSpec == null) {\n      throw new IllegalArgumentError(`Can't find operation spec corresponding to ${path}`);\n    }\n\n    return this.sendOperationRequest(\n      {},\n      {\n        ...operationSpec,\n        path,\n        urlParameters: operationSpec.urlParameters?.filter(\n          ({ parameterPath }) => parameterPath === '$host',\n        ),\n        queryParameters: Array.from(new URLSearchParams(query)).map(([key, value]) => ({\n          parameterPath: ['options', key],\n          mapper: {\n            defaultValue: value.toString(),\n            serializedName: key,\n            type: {\n              name: 'String',\n            },\n          },\n        })),\n      },\n    );\n  }\n\n  override async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const response = await super.sendOperationRequest(operationArguments, operationSpec);\n    if (!isMiddlewareRawPage(response)) return response as T;\n    return new MiddlewarePage(response, this) as T;\n  }\n}\n","import BrowserConnection from './connection/Browser.js';\n\n/**\n * Browser connection proxy\n * Provide functionality to easily forward messages from one connection to another and back\n * @category aepp wallet communication\n * @param con1 - first connection\n * @param con2 - second connection\n * @returns a function to stop proxying\n */\nexport default (con1: BrowserConnection, con2: BrowserConnection): (() => void) => {\n  con1.connect(\n    (msg: any) => con2.sendMessage(msg),\n    () => con2.disconnect(),\n  );\n  con2.connect(\n    (msg: any) => con1.sendMessage(msg),\n    () => con1.disconnect(),\n  );\n\n  return () => {\n    con1.disconnect();\n    con2.disconnect();\n  };\n};\n","import { AlreadyConnectedError, NoWalletConnectedError } from '../../utils/errors.js';\n\n/**\n * Browser connection base interface\n * @category aepp wallet communication\n */\nexport default abstract class BrowserConnection {\n  debug: boolean;\n\n  protected constructor({ debug = false }: { debug?: boolean }) {\n    this.debug = debug;\n  }\n\n  /**\n   * Connect\n   * @param onMessage - Message handler\n   * @param onDisconnect - trigger when runtime connection in closed\n   */\n  connect(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMessage: (message: any, origin: string, source: any) => void,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDisconnect: () => void,\n  ): void {\n    if (this.isConnected()) throw new AlreadyConnectedError('You already connected');\n  }\n\n  /**\n   * Disconnect\n   */\n  disconnect(): void {\n    if (!this.isConnected())\n      throw new NoWalletConnectedError('You dont have connection. Please connect before');\n  }\n\n  /**\n   * Receive message\n   */\n  protected receiveMessage(message: any): void {\n    if (this.debug) console.log('Receive message:', message);\n  }\n\n  /**\n   * Send message\n   */\n  sendMessage(message: any): void {\n    if (this.debug) console.log('Send message:', message);\n  }\n\n  /**\n   * Check if connected\n   * @returns Is connected\n   */\n  abstract isConnected(): boolean;\n}\n","import BrowserConnection from './Browser.js';\nimport { MESSAGE_DIRECTION } from '../schema.js';\nimport { InternalError, RpcConnectionError } from '../../utils/errors.js';\n\nexport type ImplPostMessage = Pick<\n  Window,\n  'addEventListener' | 'removeEventListener' | 'postMessage'\n>;\n\n/**\n * Browser window Post Message connector module\n * @category aepp wallet communication\n */\nexport default class BrowserWindowMessageConnection extends BrowserConnection {\n  origin?: string;\n\n  sendDirection?: MESSAGE_DIRECTION;\n\n  receiveDirection: MESSAGE_DIRECTION;\n\n  listener?: (this: Window, ev: MessageEvent<any>) => void;\n\n  #onDisconnect?: () => void;\n\n  readonly #target?: ImplPostMessage;\n\n  readonly #self: ImplPostMessage;\n\n  /**\n   * @param options - Options\n   * @param options.target Target window for message\n   * @param options.self Host window for message\n   * @param options.origin Origin of receiver\n   * @param options.sendDirection Wrapping messages into additional struct\n   * `({ type: 'to_aepp' || 'to_waellet', data })`\n   * Used for handling messages between content script and page\n   * @param options.receiveDirection Unwrapping messages from additional struct\n   */\n  constructor({\n    target,\n    self = window,\n    origin,\n    sendDirection,\n    receiveDirection = MESSAGE_DIRECTION.to_aepp,\n    ...options\n  }: {\n    target?: ImplPostMessage;\n    self?: ImplPostMessage;\n    origin?: string;\n    sendDirection?: MESSAGE_DIRECTION;\n    receiveDirection?: MESSAGE_DIRECTION;\n    debug?: boolean;\n  } = {}) {\n    super(options);\n    this.#target = target;\n    this.#self = self;\n    this.origin = origin;\n    this.sendDirection = sendDirection;\n    this.receiveDirection = receiveDirection;\n  }\n\n  isConnected(): boolean {\n    return this.listener != null;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: MessageEventSource | null) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.listener = (message: MessageEvent<any>) => {\n      // TODO: strict validate origin and source instead of checking message structure\n      if (\n        typeof message.data !== 'object' ||\n        (message.data.jsonrpc ?? message.data.data?.jsonrpc) !== '2.0'\n      )\n        return;\n      if (this.origin != null && this.origin !== message.origin) return;\n      if (this.#target != null && this.#target !== message.source) return;\n      this.receiveMessage(message);\n      let { data } = message;\n      if (data.type != null) {\n        if (message.data.type !== this.receiveDirection) return;\n        data = data.data;\n      }\n      onMessage(data, message.origin, message.source);\n    };\n    this.#self.addEventListener('message', this.listener);\n    this.#onDisconnect = onDisconnect;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    if (this.listener == null || this.#onDisconnect == null) {\n      throw new InternalError('Expected to not happen, required for TS');\n    }\n    this.#self.removeEventListener('message', this.listener);\n    delete this.listener;\n    this.#onDisconnect();\n    this.#onDisconnect = undefined;\n  }\n\n  override sendMessage(msg: any): void {\n    if (this.#target == null) throw new RpcConnectionError(\"Can't send messages without target\");\n    const message = this.sendDirection != null ? { type: this.sendDirection, data: msg } : msg;\n    super.sendMessage(message);\n    this.#target.postMessage(message, this.origin ?? '*');\n  }\n}\n","import BrowserConnection from './connection/Browser.js';\nimport BrowserWindowMessageConnection from './connection/BrowserWindowMessage.js';\nimport { MESSAGE_DIRECTION, METHODS } from './schema.js';\nimport { WalletInfo } from './rpc/types.js';\nimport { UnsupportedPlatformError } from '../utils/errors.js';\n\ninterface Wallet {\n  info: WalletInfo;\n  getConnection: () => BrowserWindowMessageConnection;\n}\ninterface Wallets {\n  [key: string]: Wallet;\n}\n\n/**\n * A function to detect available wallets\n * @category aepp wallet communication\n * @param connection - connection to use to detect wallets\n * @param onDetected - call-back function which trigger on new wallet\n * @returns a function to stop scanning\n */\nexport default (\n  connection: BrowserConnection,\n  onDetected: ({ wallets, newWallet }: { wallets: Wallets; newWallet: Wallet }) => void,\n): (() => void) => {\n  if (window == null)\n    throw new UnsupportedPlatformError(\n      'Window object not found, you can run wallet detector only in browser',\n    );\n  const wallets: Wallets = {};\n\n  connection.connect(\n    (\n      { method, params }: { method: string; params: WalletInfo },\n      origin: string,\n      source: Window,\n    ) => {\n      if (method !== METHODS.readyToConnect || wallets[params.id] != null) return;\n\n      const wallet = {\n        info: params,\n        getConnection() {\n          return new BrowserWindowMessageConnection({\n            target: source,\n            ...(params.type === 'extension'\n              ? {\n                  sendDirection: MESSAGE_DIRECTION.to_waellet,\n                  receiveDirection: MESSAGE_DIRECTION.to_aepp,\n                  ...(window.origin !== 'null' && { origin: window.origin }),\n                }\n              : {\n                  origin: params.origin,\n                }),\n          });\n        },\n      };\n      wallets[wallet.info.id] = wallet;\n      onDetected({ wallets, newWallet: wallet });\n    },\n    () => {},\n  );\n\n  return () => connection.disconnect();\n};\n","import { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser.js';\nimport { UnexpectedTsError } from '../../utils/errors.js';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  #listeners?: [(message: any, port: Runtime.Port) => void, () => void];\n\n  /**\n   * @param options - Options\n   */\n  constructor({ port, ...options }: { port: Runtime.Port; debug: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n    if (this.#listeners == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(this.#listeners[0]);\n    this.port.onDisconnect.removeListener(this.#listeners[1]);\n    this.#listeners = undefined;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.#listeners = [\n      (message, port) => {\n        this.receiveMessage(message);\n        // TODO: make `origin` optional because sender url is not available on aepp side\n        onMessage(message, port.sender?.url ?? '', port);\n      },\n      onDisconnect,\n    ];\n    this.port.onMessage.addListener(this.#listeners[0]);\n    this.port.onDisconnect.addListener(this.#listeners[1]);\n  }\n\n  override sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.#listeners != null;\n  }\n}\n","export {\n  _getPollInterval,\n  getHeight,\n  poll,\n  awaitHeight,\n  waitForTxConfirm,\n  getAccount,\n  getBalance,\n  getCurrentGeneration,\n  getGeneration,\n  getMicroBlockTransactions,\n  getKeyBlock,\n  getMicroBlockHeader,\n  txDryRun,\n  getContractByteCode,\n  getContract,\n  getName,\n  resolveName,\n} from './chain.js';\nexport { InvalidTxError, sendTransaction } from './send-transaction.js';\nexport {\n  isAddressValid,\n  genSalt,\n  encodeUnsigned,\n  hash,\n  encodeContractAddress,\n  verify,\n  messageToHash,\n  verifyMessage,\n} from './utils/crypto.js';\nexport { signJwt, unpackJwt, verifyJwt, isJwt, ensureJwt } from './utils/jwt.js';\nexport type { Jwt } from './utils/jwt.js';\nexport { toBytes } from './utils/bytes.js';\nexport {\n  buildTx,\n  buildTxAsync,\n  buildTxHash,\n  unpackTx,\n  buildContractIdByContractTx,\n} from './tx/builder/index.js';\nexport {\n  buildContractId,\n  oracleQueryId,\n  produceNameId,\n  commitmentHash,\n  readInt,\n  isNameValid,\n  ensureName,\n  getDefaultPointerKey,\n  getMinimumNameFee,\n  computeBidFee,\n  computeAuctionEndBlock,\n  isAuctionName,\n} from './tx/builder/helpers.js';\nexport {\n  MAX_AUTH_FUN_GAS,\n  MIN_GAS_PRICE,\n  NAME_FEE_MULTIPLIER,\n  NAME_FEE_BID_INCREMENT,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_MAX_LENGTH_FEE,\n  NAME_BID_RANGES,\n  ConsensusProtocolVersion,\n  VmVersion,\n  AbiVersion,\n  Tag,\n  DRY_RUN_ACCOUNT,\n} from './tx/builder/constants.js';\nexport type { Int, AensName } from './tx/builder/constants.js';\n// TODO: move to constants\nexport { ORACLE_TTL_TYPES } from './tx/builder/schema.js';\nexport { DelegationTag } from './tx/builder/delegation/schema.js';\nexport { packDelegation, unpackDelegation } from './tx/builder/delegation/index.js';\nexport { EntryTag, CallReturnType } from './tx/builder/entry/constants.js';\nexport { packEntry, unpackEntry } from './tx/builder/entry/index.js';\nexport {\n  getExecutionCost,\n  getExecutionCostBySignedTx,\n  getExecutionCostUsingNode,\n} from './tx/execution-cost.js';\nexport { default as getTransactionSignerAddress } from './tx/transaction-signer.js';\nexport {\n  AE_AMOUNT_FORMATS,\n  formatAmount,\n  toAe,\n  toAettos,\n  prefixedAmount,\n} from './utils/amount-formatter.js';\nexport { encode, decode, Encoding, Encoded } from './utils/encoder.js';\nexport { hashTypedData, hashDomain, hashJson } from './utils/typed-data.js';\nexport { default as Name } from './aens.js';\nexport { default as Contract } from './contract/Contract.js';\nexport type { ContractMethodsBase } from './contract/Contract.js';\nexport { default as Oracle } from './oracle/Oracle.js';\nexport { default as OracleClient } from './oracle/OracleClient.js';\nexport { spend, transferFunds, payForTransaction } from './spend.js';\nexport {\n  createGeneralizedAccount,\n  buildAuthTxHash,\n  buildAuthTxHashByGaMetaTx,\n} from './contract/ga.js';\n\nexport { default as AeSdkMethods } from './AeSdkMethods.js';\nexport { default as AeSdkBase } from './AeSdkBase.js';\nexport { default as AeSdk } from './AeSdk.js';\nexport { default as AeSdkAepp } from './AeSdkAepp.js';\nexport { default as WalletConnectorFrame } from './aepp-wallet-communication/WalletConnectorFrame.js';\nexport { default as WalletConnectorFrameWithNode } from './aepp-wallet-communication/WalletConnectorFrameWithNode.js';\nexport { default as AeSdkWallet } from './AeSdkWallet.js';\nexport { default as Node } from './Node.js';\nexport { default as verifyTransaction } from './tx/validator.js';\nexport { default as AccountBase } from './account/Base.js';\nexport { default as MemoryAccount } from './account/Memory.js';\nexport { default as AccountMnemonicFactory } from './account/MnemonicFactory.js';\nexport { default as AccountGeneralized } from './account/Generalized.js';\nexport { default as AccountLedger } from './account/Ledger.js';\nexport { default as AccountLedgerFactory } from './account/LedgerFactory.js';\nexport { default as AccountMetamask } from './account/Metamask.js';\nexport { default as AccountMetamaskFactory } from './account/MetamaskFactory.js';\nexport { default as CompilerBase } from './contract/compiler/Base.js';\nexport { default as CompilerHttp } from './contract/compiler/Http.js';\nexport { default as Channel } from './channel/Contract.js';\nexport {\n  default as MiddlewareSubscriber,\n  MiddlewareSubscriberError,\n  MiddlewareSubscriberDisconnected,\n} from './MiddlewareSubscriber.js';\nexport { default as Middleware } from './Middleware.js';\nexport { MiddlewarePageMissed } from './utils/MiddlewarePage.js';\n\nexport { default as connectionProxy } from './aepp-wallet-communication/connection-proxy.js';\nexport {\n  MESSAGE_DIRECTION,\n  WALLET_TYPE,\n  SUBSCRIPTION_TYPES,\n  METHODS,\n  RPC_STATUS,\n  RpcError,\n  RpcInvalidTransactionError,\n  RpcRejectedByUserError,\n  RpcUnsupportedProtocolError,\n  RpcConnectionDenyError,\n  RpcNotAuthorizeError,\n  RpcPermissionDenyError,\n  RpcInternalError,\n  RpcMethodNotFoundError,\n  RpcNoNetworkById,\n} from './aepp-wallet-communication/schema.js';\nexport { default as walletDetector } from './aepp-wallet-communication/wallet-detector.js';\nexport { default as BrowserRuntimeConnection } from './aepp-wallet-communication/connection/BrowserRuntime.js';\nexport { default as BrowserWindowMessageConnection } from './aepp-wallet-communication/connection/BrowserWindowMessage.js';\nexport {\n  BaseError,\n  AccountError,\n  AensError,\n  AeppError,\n  ChannelError,\n  CompilerError,\n  ContractError,\n  CryptographyError,\n  NodeError,\n  TransactionError,\n  WalletError,\n  ArgumentError,\n  IllegalArgumentError,\n  ArgumentCountMismatchError,\n  InsufficientBalanceError,\n  MissingParamError,\n  NoSerializerFoundError,\n  RequestTimedOutError,\n  TxTimedOutError,\n  TypeError,\n  UnsupportedPlatformError,\n  UnsupportedProtocolError,\n  NotImplementedError,\n  UnsupportedVersionError,\n  LogicError,\n  InternalError,\n  UnexpectedTsError,\n  UnavailableAccountError,\n  AensPointerContextError,\n  InsufficientNameFeeError,\n  InvalidAensNameError,\n  InvalidRpcMessageError,\n  MissingCallbackError,\n  UnAuthorizedAccountError,\n  UnknownRpcClientError,\n  UnsubscribedAccountError,\n  ChannelCallError,\n  ChannelConnectionError,\n  ChannelPingTimedOutError,\n  UnexpectedChannelMessageError,\n  ChannelIncomingMessageError,\n  UnknownChannelStateError,\n  InvalidAuthDataError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  InactiveContractError,\n  InvalidMethodInvocationError,\n  MissingContractAddressError,\n  MissingContractDefError,\n  MissingFunctionNameError,\n  NodeInvocationError,\n  NoSuchContractFunctionError,\n  NotPayableFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  InvalidChecksumError,\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownNodeLengthError,\n  UnknownPathNibbleError,\n  DuplicateNodeError,\n  NodeNotFoundError,\n  DecodeError,\n  PayloadLengthError,\n  DryRunError,\n  IllegalBidFeeError,\n  InvalidSignatureError,\n  PrefixNotFoundError,\n  SchemaNotFoundError,\n  TagNotFoundError,\n  TxNotInChainError,\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  RpcConnectionError,\n} from './utils/errors.js';\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"os\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs/promises\");","import { execFile } from 'child_process';\nimport { tmpdir } from 'os';\nimport { resolve, dirname, basename } from 'path';\nimport { mkdir, writeFile, rm } from 'fs/promises';\nimport { fileURLToPath } from 'url';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, InternalError, UnsupportedVersionError } from '../../utils/errors.js';\nimport semverSatisfies from '../../utils/semver-satisfies.js';\nimport { ensureError } from '../../utils/other.js';\n\nexport const getPackagePath = (): string => {\n  const path = dirname(fileURLToPath(import.meta.url));\n  if (basename(path) === 'dist') return resolve(path, '..');\n  if (basename(path) === 'compiler') return resolve(path, '../../..');\n  throw new InternalError(\"Can't get package path\");\n};\n\n/**\n * A wrapper around aesophia_cli, available only in Node.js.\n * Requires Erlang installed, assumes that `escript` is available in PATH.\n * @category contract\n */\nexport default class CompilerCli extends CompilerBase {\n  readonly #path: string;\n\n  readonly #ensureCompatibleVersion = Promise.resolve();\n\n  /**\n   * @param compilerPath - A path to aesophia_cli binary, by default uses the integrated one\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the compiler is supported\n   */\n  constructor(\n    compilerPath = resolve(getPackagePath(), './bin/aesophia_cli'),\n    { ignoreVersion }: { ignoreVersion?: boolean } = {},\n  ) {\n    super();\n    this.#path = compilerPath;\n    if (ignoreVersion !== true) {\n      this.#ensureCompatibleVersion = this.version().then((version) => {\n        const versions = [version, '8.0.0', '9.0.0'] as const;\n        if (!semverSatisfies(...versions))\n          throw new UnsupportedVersionError('compiler', ...versions);\n      });\n    }\n  }\n\n  async #runWithStderr(...parameters: string[]): Promise<{ stderr: string; stdout: string }> {\n    return new Promise((pResolve, pReject) => {\n      execFile('escript', [this.#path, ...parameters], (error, stdout, stderr) => {\n        if (error != null) pReject(error);\n        else pResolve({ stdout, stderr });\n      });\n    });\n  }\n\n  async #run(...parameters: string[]): Promise<string> {\n    const { stderr, stdout } = await this.#runWithStderr(...parameters);\n    if (stderr !== '') throw new CompilerError(stderr);\n    return stdout;\n  }\n\n  static async #saveContractToTmpDir(\n    sourceCode: string,\n    fileSystem: Record<string, string> = {},\n  ): Promise<string> {\n    const randomName = (): string => Math.random().toString(36).slice(2);\n    const path = resolve(tmpdir(), `aepp-sdk-js-${randomName()}`);\n    await mkdir(path);\n    const sourceCodePath = resolve(path, `${randomName()}.aes`);\n    await writeFile(sourceCodePath, sourceCode);\n    await Promise.all(\n      Object.entries(fileSystem).map(async ([name, src]) => {\n        const p = resolve(path, name);\n        await mkdir(dirname(p), { recursive: true });\n        return writeFile(p, src);\n      }),\n    );\n    return sourceCodePath;\n  }\n\n  async compile(path: string): CompileResult {\n    await this.#ensureCompatibleVersion;\n    try {\n      const [compileRes, aci] = await Promise.all([\n        this.#runWithStderr(path),\n        this.generateAci(path),\n      ]);\n      return {\n        bytecode: compileRes.stdout.trimEnd() as Encoded.ContractBytearray,\n        aci,\n        warnings: compileRes.stderr\n          .split('Warning in ')\n          .slice(1)\n          .map((warning) => {\n            const reg = /^'(.+)' at line (\\d+), col (\\d+):\\n(.+)$/s;\n            const match = warning.match(reg);\n            if (match == null) throw new InternalError(`Can't parse compiler output: \"${warning}\"`);\n            return {\n              message: match[4].trimEnd(),\n              pos: {\n                ...(match[1] !== path && { file: match[1] }),\n                line: +match[2],\n                col: +match[3],\n              },\n            };\n          }),\n      };\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.compile(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async generateAci(path: string): Promise<Aci> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return JSON.parse(await this.#run('--no_code', '--create_json_aci', path));\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.generateAci(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return (await this.#run(path, '--validate', bytecode)).includes('Validation successful.');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.validate(bytecode, tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async version(): Promise<string> {\n    const verMessage = await this.#run('--version');\n    const ver = verMessage.match(/Sophia compiler version ([\\d.]+.*)\\n/)?.[1];\n    if (ver == null) throw new CompilerError(\"Can't get compiler version\");\n    return ver;\n  }\n}\n","import { readFile } from 'fs/promises';\nimport { dirname, resolve, basename } from 'path';\nimport { InternalError } from '../../utils/errors.js';\n\nconst defaultIncludes = [\n  'List.aes',\n  'Option.aes',\n  'String.aes',\n  'Func.aes',\n  'Pair.aes',\n  'Triple.aes',\n  'BLS12_381.aes',\n  'Frac.aes',\n  'Set.aes',\n  'Bitwise.aes',\n];\nconst includeRegExp = /^include\\s*\"([\\w/.-]+)\"/im;\nconst includesRegExp = new RegExp(includeRegExp.source, `${includeRegExp.flags}g`);\n\nasync function getFileSystemRec(root: string, relative: string): Promise<Record<string, string>> {\n  const sourceCode = await readFile(resolve(root, relative), 'utf8');\n  const filesystem: Record<string, string> = {};\n  await Promise.all(\n    (sourceCode.match(includesRegExp) ?? [])\n      .map((include) => {\n        const m = include.match(includeRegExp);\n        if (m?.length !== 2) throw new InternalError('Unexpected match length');\n        return m[1];\n      })\n      .filter((include) => !defaultIncludes.includes(include))\n      .map(async (include) => {\n        const includePath = resolve(root, include);\n        filesystem[include] = await readFile(includePath, 'utf8');\n        Object.assign(filesystem, await getFileSystemRec(root, include));\n      }),\n  );\n  return filesystem;\n}\n\n/**\n * Reads all files included in the provided contract\n * Available only in Node.js\n * @param path - a path to the main contract source code\n */\nexport default async function getFileSystem(path: string): Promise<Record<string, string>> {\n  return getFileSystemRec(dirname(path), basename(path));\n}\n","import { readFile } from 'fs/promises';\nimport HttpBrowser from './Http.js';\nimport { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport getFileSystem from './getFileSystem.js';\n\n/**\n * Contract Compiler over HTTP for Nodejs\n *\n * Inherits CompilerHttp and implements `compile`, `validate` methods\n * @category contract\n * @example CompilerHttpNode('COMPILER_URL')\n */\nexport default class CompilerHttpNode extends HttpBrowser {\n  override async compile(path: string): CompileResult {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.compileBySourceCode(sourceCode, fileSystem);\n  }\n\n  override async generateAci(path: string): Promise<Aci> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.generateAciBySourceCode(sourceCode, fileSystem);\n  }\n\n  override async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.validateBySourceCode(bytecode, sourceCode, fileSystem);\n  }\n}\n","export * from './index-browser.js';\n\nexport { default as CompilerCli } from './contract/compiler/Cli.js';\nexport { default as getFileSystem } from './contract/compiler/getFileSystem.js';\nexport { default as CompilerHttpNode } from './contract/compiler/HttpNode.js';\n"],"names":["BigNumber","isBigNumber","number","includes","isNaN","Number","isInteger","ceil","bigNumber","integerValue","ROUND_CEIL","BaseError","Error","constructor","message","name","AccountError","AensError","AeppError","ChannelError","CompilerError","ContractError","CryptographyError","NodeError","TransactionError","WalletError","ArgumentError","argumentName","requirement","argumentValue","IllegalArgumentError","ArgumentCountMismatchError","functionName","requiredCount","providedCount","InsufficientBalanceError","MissingParamError","NoSerializerFoundError","RequestTimedOutError","height","TxTimedOutError","blocks","th","TypeError","UnsupportedPlatformError","UnsupportedProtocolError","NotImplementedError","UnsupportedVersionError","dependency","version","geVersion","ltVersion","LogicError","InternalError","UnexpectedTsError","UnavailableAccountError","address","AensPointerContextError","nameOrId","prefix","InsufficientNameFeeError","nameFee","minNameFee","toString","InvalidAensNameError","InvalidRpcMessageError","MissingCallbackError","id","UnAuthorizedAccountError","onAccount","UnknownRpcClientError","UnsubscribedAccountError","ChannelCallError","ChannelConnectionError","ChannelPingTimedOutError","UnexpectedChannelMessageError","ChannelIncomingMessageError","handlerError","incomingMessage","UnknownChannelStateError","InvalidAuthDataError","BytecodeMismatchError","source","DuplicateContractError","InactiveContractError","contractAddress","InvalidMethodInvocationError","MissingContractAddressError","MissingContractDefError","MissingFunctionNameError","NodeInvocationError","transaction","NoSuchContractFunctionError","NotPayableFunctionError","amount","fn","MissingEventDefinitionError","eventNameHash","eventAddress","AmbiguousEventDefinitionError","matchedEvents","map","join","InvalidChecksumError","MerkleTreeHashMismatchError","MissingNodeInTreeError","UnknownNodeLengthError","nodeLength","UnknownPathNibbleError","nibble","DuplicateNodeError","NodeNotFoundError","DecodeError","PayloadLengthError","DryRunError","IllegalBidFeeError","InvalidSignatureError","PrefixNotFoundError","tag","SchemaNotFoundError","key","TagNotFoundError","TxNotInChainError","txHash","AlreadyConnectedError","NoWalletConnectedError","RpcConnectionError","AE_AMOUNT_FORMATS","DENOMINATION_MAGNITUDE","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","formatAmount","value","denomination","targetDenomination","shiftedBy","toFixed","toAe","toAettos","prefixes","magnitude","getNearestPrefix","exponent","reduce","p","n","Math","abs","getLowerBoundPrefix","_prefixes$find","find","length","prefixedAmount","rawValue","_value$e","exp","e","v","precision","min","RestError","pause","duration","Promise","resolve","setTimeout","mapObject","object","Object","fromEntries","entries","isWebpack4Buffer","Buffer","concat","Uint8Array","from","error","concatBuffers","list","totalLength","el","isKeyOfObject","isItemOfArray","item","array","isAccountNotFoundError","statusCode","ensureError","wrapWithProxy","valueCb","Proxy","t","args","target","res","Reflect","bind","unwrapProxy","_wrappedValue","Encoding","bs58","Sha256","Encoded","sha256hash","input","update","digest","base64Types","ContractBytearray","ContractStoreKey","ContractStoreValue","Transaction","OracleQuery","OracleResponse","State","Poi","StateTrees","CallStateTree","Bytearray","base58Types","KeyBlockHash","MicroBlockHash","BlockPofHash","BlockTxHash","BlockStateHash","Channel","ContractAddress","TxHash","OracleAddress","OracleQueryId","AccountAddress","AccountSecretKey","Signature","Commitment","PeerPubkey","Name","byteSizeForType","ensureValidLength","data","type","reqLen","getChecksum","payload","slice","addChecksum","getPayload","buffer","equals","base64","encode","decode","string","base58","parseType","maybeType","base64Type","base58Type","encodedPayload","extra","split","encoder","nacl","blake2b","varuintEncode","isAddressValid","maybeEncoded","encodings","encoding","genSalt","random","BigUint64Array","randomBytes","BigInt","MAX_SAFE_INTEGER","encodeUnsigned","binary","allocUnsafe","writeUInt32BE","findIndex","i","hash","undefined","encodeContractAddress","owner","nonce","publicKey","verify","signature","sign","detached","messagePrefix","messagePrefixLength","messageToHash","msg","verifyMessage","toBytes","val","big","hexString","DRY_RUN_ACCOUNT","pub","MAX_AUTH_FUN_GAS","MIN_GAS_PRICE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_MAX_LENGTH_FEE","NAME_BID_RANGES","times","ConsensusProtocolVersion","VmVersion","AbiVersion","Tag","buildContractId","ownerId","ownerIdAndNonce","b2bHash","oracleQueryId","senderId","oracleId","_int32","nonceBE","alloc","AENS_SUFFIX","nameToPunycode","maybeName","suffix","other","test","at","punycode","u","URL","username","password","port","search","pathname","host","produceNameId","commitmentHash","salt","padStart","readInt","buf","ensureName","isNameValid","encodingToPointerKey","getDefaultPointerKey","identifier","substring","result","getMinimumNameFee","nameLength","computeBidFee","startFee","increment","plus","computeAuctionEndBlock","claimHeight","_ref","_ref2","_ref3","h","isAuctionName","_getPollInterval","_expectedMineRate","_microBlockCycle","onNode","_await$getVal","getVal","devModeDef","def","getNetworkId","base","floor","heightCache","WeakMap","getHeight","cached","options","cache","get","time","Date","now","getCurrentKeyBlockHeight","set","poll","interval","_interval","max","tx","getTransactionByHash","blockHeight","ttl","awaitHeight","_interval2","currentHeight","waitForTxConfirm","confirm","newBlockHeight","getAccount","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","getAccountByPubkey","getBalance","format","addr","startsWith","balance","catch","getCurrentGeneration","getGeneration","hashOrHeight","getGenerationByHeight","getGenerationByHash","getMicroBlockTransactions","getMicroBlockTransactionsByHash","transactions","getKeyBlock","getKeyBlockByHeight","getKeyBlockByHash","getMicroBlockHeader","getMicroBlockHeaderByHash","txDryRunRequests","Map","txDryRunHandler","rs","delete","dryRunRes","top","protectedDryRunTxs","txEvents","txs","req","accounts","Array","Set","accountAddress","pubKey","forEach","reject","results","reason","resultPayload","idx","assign","txDryRun","combine","_txDryRunRequests$get","requests","_requests$timeout","push","timeout","getContractByteCode","contractId","getContractCode","getContract","getName","getNameEntryByName","resolveName","resolveByNode","pointer","pointers","ProtocolToVmAbi","Ceres","vmVersion","Fate3","abiVersion","Fate","NoAbi","getProtocolDetails","protocolVersion","_protocol$vmVersion$","protocol","Fate2","serialize","params","consensusProtocolVersion","_value","prepare","keys","getNodeInfo","deserialize","vm","abi","_getProtocolDetails","c","kind","ContractCallTx","GaMetaTx","idTagToEncoding","genAddressField","hashId","enc","idTag","indexOf","readUIntBE","subarray","genArrayField","itemHandler","items","buffers","uInt","serializeAettos","genEncodedField","optional","encodedData","genEntryField","txParams","packEntry","ArrayBuffer","isView","unpackEntry","genEnumerationField","enm","values","filter","coinAmount","gasPriceCache","getCachedIncreasedGasPrice","node","gasPrice","minGasPrice","utilization","getRecentGasPrices","maxSafeGasPrice","console","warn","BASE_GAS","GAS_PER_BYTE","KEY_BLOCK_INTERVAL","TX_BASE_GAS","txType","_feeFactors","feeFactors","ChannelForceProgressTx","ChannelOffChainTx","ContractCreateTx","GaAttachTx","PayingForTx","factor","TX_OTHER_GAS","txSize","relativeTtl","innerTxSize","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleResponseTx","getOracleRelativeTtl","ttlKeys","buildGas","builtTx","unpackTx","buildTx","txObject","encodedTx","calculateMinFee","rebuildTx","fee","previousFee","eq","gasPricePrefix","_computingMinFee","_canIncreaseFee","minFee","dividedBy","replace","gt","call","shortUInt","calculateGasLimitMax","gasMax","_computingGasLimit","gasLimitMax","gasLimit","field","txFields","parameters","addressName","genNonceField","senderKey","strategy","getAccountNextNonce","nextNonce","ID_TAG","DATA_TAG","DATA_LENGTH_MAX","addressAny","allowRaw","bKey","bId","getOracleByPubkey","queryFee","genShortUIntConstField","constValue","constValueOptional","genTransactionField","absoluteTtl","_isInternalBuild","withDefault","defaultValue","withFormatting","CallReturnType","EntryTag","ctVersion","encoded","entry","enumeration","nameId","raw","shortUIntConst","ORACLE_TTL_TYPES","transactionAny","transactionSignedTx","SignedTx","entryTreesPoi","TreesPoi","clientTtl","nameTtl","NAME_TTL","txSchema","signatures","SpendTx","recipientId","NamePreclaimTx","accountId","commitmentId","NameClaimTx","nameSalt","NameUpdateTx","NameTransferTx","NameRevokeTx","code","deposit","callData","callerId","queryFormat","responseFormat","oracleTtlType","delta","oracleTtlValue","query","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","queryId","response","ChannelCreateTx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","initiatorDelegateIds","responderDelegateIds","stateHash","ChannelCloseMutualTx","channelId","fromId","initiatorAmountFinal","responderAmountFinal","ChannelCloseSoloTx","poi","ChannelSlashTx","ChannelDepositTx","round","ChannelWithdrawTx","toId","ChannelSettleTx","offChainTrees","ChannelSnapshotSoloTx","authFun","gaId","authData","payerId","rlpDecode","rlpEncode","getSchema","schemas","subSchemas","s","defaultSchema","schema","packRecord","extraParams","unpackRecord","encodedRecord","expectedTag","index","genMapField","Mtree","MtreeValue","recursiveType","NodeType","_rootHash","_isComplete","_nodes","_encoding","_tag","_unpackEntry","_MPTree_brand","WeakSet","MPTree","isComplete","_classPrivateFieldGet","unpEnt","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","_nodeHash","_parseNode","Branch","Extension","Leaf","isEqual","tree","mptHash","d","_assertClassBrand","_getRaw","toObject","_entriesRaw","k","_MPTree","path","_key","searchFrom","rec","genMPTreeField","genWrappedField","boolean","mptree","wrapped","entryMtreeValueArray","mapContracts","Contract","mapAccounts","Account","mapCalls","ContractCall","mapChannels","mapNames","mapOracles","Oracle","flags","gaContract","gaAuthFun","status","log","active","referers","callerNonce","gasUsed","returnValue","returnType","channelAmount","soloRound","lockedUntil","initiatorAuth","responderAuth","ChannelOffChainUpdateTransfer","to","ChannelOffChainUpdateDeposit","ChannelOffChainUpdateWithdraw","ChannelOffChainUpdateCreateContract","ChannelOffChainUpdateCallContract","caller","contract","callStack","calls","channels","contracts","ns","oracles","ContractsMtree","CallsMtree","ChannelsMtree","NameserviceMtree","OraclesMtree","AccountsMtree","GaMetaTxAuthData","encodingTag","_encodingTag$find$","_expectedTag","getSchemaCommon","overrideParams","buildTxAsync","all","buildTxHash","rawTx","buildContractIdByContractTx","contractTx","verCmp","a","b","getComponents","aComponents","bComponents","componentsToNumber","components","reverse","acc","semverSatisfies","createSerializer","createSerializerOrig","bigIntPrefix","serializer","mapper","objectName","_objectName","serializedName","responseBody","safeLength","bigIntPropertyRe","RegExp","String","bigIntArrayItemRe","parseBigIntPolicy","sendRequest","request","next","bodyAsText","replaceAll","matched","match","end","genRequestQueuesPolicy","requestQueues","policy","_requestQueues$get","headers","getResponse","then","position","genCombineGetRequestsPolicy","pendingGetRequests","_pendingGetRequests$g","method","JSON","stringify","url","body","genAggressiveCacheGetResponsesPolicy","getRequests","_getRequests$get","genErrorFormatterPolicy","getMessage","parsedBody","genVersionCheckPolicy","versionCb","has","requestOptions","customHeaders","genRetryOnFailurePolicy","retryCount","retryOverallDelay","_request$headers$get","retryCode","NaN","statusesToNotRetry","intervals","fill","_","intervalSum","intervalsInMs","attempt","urlParsed","searchParams","_e$response$status","className","modelProperties","required","constraints","InclusiveMinimum","InclusiveMaximum","payable","allowedValues","ErrorModel","errorCode","NextNonceResponse","SignedTxs","element","blockHash","Tx","initiatorId","responderId","delegateIds","offchainTrees","oracleTtl","queryTtl","responseTtl","gas","Pattern","Delegates","OffChainUpdate","uberParent","polymorphicDiscriminator","clientName","op","RelativeTTL","isConstant","Ttl","NamePointer","encodedKey","AuctionEntry","startedAt","endsAt","highestBidder","highestBid","ContractObject","referrerIds","ByteCode","bytecode","PoI","Currency","symbol","subunit","subunitsPerUnit","fiatConverstionUrl","fiatConversionUrl","logo","primaryColour","secondaryColour","networkName","Image","DryRunInput","DryRunAccount","DryRunInputItem","callReq","DryRunCallReq","calldata","context","DryRunCallContext","stateful","DryRunResults","DryRunResult","callObj","ContractCallObject","Event","topics","Generation","keyBlock","microBlocks","KeyBlock","prevHash","prevKeyHash","miner","beneficiary","pow","MinItems","MaxItems","info","Header","pofHash","txsHash","HashResponse","HeightResponse","MicroBlockHeader","CountResponse","count","NameEntry","RegisteredOracle","OracleQueries","oracleQueries","senderNonce","PeerPubKey","pubkey","GasPricesItem","minutes","Status","genesisKeyBlockHash","solutions","difficulty","hashrate","syncing","syncProgress","uptime","listening","protocols","nodeVersion","nodeRevision","peerCount","peerConnections","pendingTransactionsCount","networkId","peerPubkey","topKeyBlockHash","topBlockHeight","Protocol","effectiveAtHeight","PeerConnections","inbound","outbound","SyncStatus","progress","speed","estimate","EncodedTx","PostTxResponse","TxInfoObject","callInfo","gaInfo","txInfo","GAObject","innerObject","ChannelSetDelegatesTx","CheckTxInPoolResponse","CommitmentId","UnsignedTx","GAAttachTx","GAMetaTx","NameHash","PeerDetails","firstSeen","lastSeen","genesisHash","topHash","topDifficulty","nodeVendor","nodeOs","OracleRespondTx","PeerCount","connected","available","blocked","PeerCountConnected","PeerCountAvailable","verified","unverified","Peers","peers","PubKey","TokenSupply","contractOracles","locked","pendingRewards","total","OffChainCallContract","OffChainDeposit","OffChainNewContract","OffChainTransfer","OffChainWithdrawal","CreateContractUnsignedTx","discriminators","DryRunInputMapper","EncodedTxMapper","accept","parameterPath","$host","skipEncoding","contentType","nameHash","fromParam","limit","typeParam","body1","coreClient","Parameters","Mappers","Node","ServiceClient","_options$endpoint","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","sendOperationRequest","getAccountByPubkeyOperationSpec","getAccountByPubkeyAndHashOperationSpec","getAccountByPubkeyAndHeightOperationSpec","getAccountNextNonceOperationSpec","getPendingAccountTransactionsByPubkey","getPendingAccountTransactionsByPubkeyOperationSpec","getAuctionEntryByName","getAuctionEntryByNameOperationSpec","getChannelByPubkey","getChannelByPubkeyOperationSpec","getContractOperationSpec","getContractCodeOperationSpec","getContractPoI","getContractPoIOperationSpec","getCurrency","getCurrencyOperationSpec","protectedDryRunTxsOperationSpec","getCurrentGenerationOperationSpec","getGenerationByHashOperationSpec","getGenerationByHeightOperationSpec","getTopHeader","getTopHeaderOperationSpec","getCurrentKeyBlock","getCurrentKeyBlockOperationSpec","getCurrentKeyBlockHash","getCurrentKeyBlockHashOperationSpec","getCurrentKeyBlockHeightOperationSpec","getKeyBlockByHashOperationSpec","getKeyBlockByHeightOperationSpec","getPendingKeyBlock","getPendingKeyBlockOperationSpec","getMicroBlockHeaderByHashOperationSpec","getMicroBlockTransactionsByHashOperationSpec","getMicroBlockTransactionsCountByHash","getMicroBlockTransactionsCountByHashOperationSpec","getMicroBlockTransactionByHashAndIndex","getMicroBlockTransactionByHashAndIndexOperationSpec","getNameEntryByNameOperationSpec","getNameEntryByNameHash","getNameEntryByNameHashOperationSpec","getOracleByPubkeyOperationSpec","getOracleQueriesByPubkey","getOracleQueriesByPubkeyOperationSpec","getOracleQueryByPubkeyAndQueryId","getOracleQueryByPubkeyAndQueryIdOperationSpec","getPeerPubkey","getPeerPubkeyOperationSpec","getRecentGasPricesOperationSpec","getStatus","getStatusOperationSpec","getChainEnds","getChainEndsOperationSpec","getSyncStatus","getSyncStatusOperationSpec","postTransaction","postTransactionOperationSpec","getTransactionByHashOperationSpec","getTransactionInfoByHash","getTransactionInfoByHashOperationSpec","httpMethod","responses","bodyMapper","isError","urlParameters","headerParameters","queryParameters","requestBody","mediaType","userAgentPolicyName","setClientRequestIdPolicyName","NodeApi","_cachedStatusPromise","ignoreVersion","getVersion","opts","_getCachedStatus","allowInsecureConnection","additionalPolicies","pipeline","addPolicy","phase","removePolicy","promise","nodeNetworkId","versions","getTransactionSignerAddress","AccountBase","TypeResolver","ContractByteArrayEncoder","canonicalize","hashJson","_canonicalize","hashDomain","domain","domainAci","record","option","domainType","resolveType","fateValue","encodeWithType","hashTypedData","aci","getBufferToSign","innerTx","rlpBinaryTx","_secretKeyDecoded","AccountMemory","secretKey","keyPair","fromSeed","generate","signTransaction","txWithNetworkId","signMessage","signTypedData","dHash","signDelegation","delegation","getExecutionCost","isInitiator","getExecutionCostBySignedTx","isInnerTx","isNotInnerTx","f","getExecutionCostUsingNode","isMined","isSignedTx","combinedInfo","validators","verifyTransactionInternal","parentTxTypes","account","flat","verifyTransaction","nodeNotCached","clone","txBinary","txHashWithNetworkId","checkedKeys","nestedTx","cost","recipient","oracleCall","contractCreate","contractCall","parse","InvalidTxError","validation","sendTransaction","txUnsigned","waitMined","__queue","pollResult","txData","confirmationHeight","verifyTx","toBase64Url","fromBase64Url","objectToBase64Url","header","signJwt","originalPayload","sub_jwk","kty","crv","x","unpackJwt","jwt","_payload$sub_jwk","payloadEncoded","jwk","signer","isJwt","maybeJwt","ensureJwt","verifyJwt","DelegationTag","oracleAddressField","queryIdField","AensWildcard","AensName","AensPreclaim","packDelegation","unpackDelegation","_salt","revoke","opt","extendPointers","allPointers","hasRawPointers","some","transfer","getState","_this$options$onNode","nameEntry","extendTtl","claim","preclaim","bid","Encoder","Calldata","calcHash","_Contract_brand","_aciContract","$compile","$options","onCompiler","sourceCode","compileBySourceCode","fileSystem","sourceCodePath","compile","$getCallResultByTxHash","fnName","callInfoTyped","_getCallResult","_estimateGas","$call","callStatic","$deploy","_opt$gasLimit","_calldata","_name","_sendAndProcess","decodedEvents","$decodeEvents","_opt$gasLimit2","fnAci","_getFunctionAci","useFallbackAccount","topOption","txOpt","dryRunOther","events","omitUnknown","event","contractName","_getContractNameByEvent","decoded","decodeEvent","initialize","validateBytecode","otherOptions","_bytecode","onChanBytecode","isValid","validateBySourceCode","validate","ContractWithMethods","_aci","aciLast","functions","arguments","aciArgs","pop","_Contract","decodedResult","decodeFateString","returns","ctAddress","contractAddressToName","addressToName","variant","eventName","arr","decodeQuery","queryEntry","decodedQuery","decodedResponse","OracleBase","getQuery","_handleQueriesPromise","register","oracleRegisterTx","oracleExtendTx","pollQueries","onQuery","knownQueryIds","isChecking","checkNewQueries","_await$opt$onNode$get","queries","filtered","includeResponded","add","idPromise","_opt$interval","setInterval","clearInterval","respondToQuery","oracleRespondTx","handleQueries","queuePromise","handler","q","respondPromise","stopPoll","OracleClient","postQuery","oracleQueryTx","pollForResponse","responseBuffer","spend","recipientIdOrName","transferFunds","fraction","desiredAmount","ROUND_HALF_UP","minus","payForTransaction","createGeneralizedAccount","authFnName","_options$gasLimit","freeze","gaContractId","buildAuthTxHash","buildAuthTxHashByGaMetaTx","chainMethods","spendMethods","contractGaMethods","methods","_wrappedOptions","AeSdkMethods","_defineProperty","_options","getContext","mergeWith","prototype","methodWrapper","AeSdkMethodsTyped","AeSdkBase","nodes","instance","addNode","api","compilerApi","_resolveAccount","ensureNodeConnected","pool","selectedNodeName","select","selectNode","isNodeConnected","getNodesInPool","addresses","_options$networkId","AeSdk","addAccount","selectedAddress","selectAccount","removeAccount","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","rpcErrors","RpcError","toJSON","json","RpcErr","cl","RpcInvalidTransactionError","RpcRejectedByUserError","RpcUnsupportedProtocolError","RpcConnectionDenyError","RpcNotAuthorizeError","RpcPermissionDenyError","RpcInternalError","RpcNoNetworkById","RpcMethodNotFoundError","AccountRpc","rpcClient","_rpcClient","dataRaw","unsafeSign","returnSigned","signedTransaction","RPC_VERSION","_callbacks","_messageId","_methods","_RpcClient_brand","RpcClient","connection","onDisconnect","connect","_handleMessage","_sendRequest","notify","origin","jsonrpc","_processResponse","methodName","_sendResponse","sendMessage","callbacks","AeSdkAepp","onAddressChange","onNetworkChange","_ensureConnected","_ensureAccountAccess","_accounts","current","connectToWallet","connectNode","disconnectParams","updateNetwork","client","updateAddress","closeConnection","disconnect","readyToConnect","walletInfo","disconnectWallet","askAddresses","subscribeAddress","askToSelectNetwork","network","EventEmitter","_WalletConnectorFrameBase_brand","WalletConnectorFrameBase","isConnected","_connect","connector","emit","_updateAccounts","_updateNetwork","_getRpcClient","getAccounts","subscribeAccounts","_networkId","WalletConnectorFrame","_node","WalletConnectorFrameWithNode","JsonBig","jsonBig","storeAsString","convertValuesToBigNumbers","isArray","bn","AeSdkWallet","onConnection","onSubscription","onAskAccounts","onAskToSelectNetwork","_type","_getAccountsForClient","addressSubscription","_pushAccountsToApps","_clients","clientId","_isRpcClientConnected","_getClient","size","rpc","_getNode","CONNECTED","_disconnectRpcClient","DISCONNECTED","removeRpcClient","addRpcClient","clientConnection","WAITING_FOR_CONNECTION_REQUEST","icons","getWalletInfo","subscribe","unsubscribe","subscription","aeppOrigin","aeppRpcClientId","transactionHash","shareWalletInfo","window","location","AccountBaseFactory","discover","mnemonicToSeed","tweetnaclAuth","ED25519_CURVE","HARDENED_OFFSET","deriveKey","I","full","IL","IR","chainCode","derivePathFromKey","segments","segment","indexBuffer","_mnemonic","_wallet","_AccountMnemonicFactory_brand","AccountMnemonicFactory","mnemonicOrWallet","getWallet","seed","masterKey","walletKey","accountIndex","_getAccountSecretKey","wallet","_authFun","AccountGeneralized","authCallData","gaMetaTx","CLA","GET_ADDRESS","SIGN_TRANSACTION","GET_APP_CONFIGURATION","SIGN_PERSONAL_MESSAGE","AccountLedger","transport","decorateAppAPIMethods","offset","headerLength","networkIdBuffer","toSend","maxChunkSize","chunkSize","bufferOffset","writeUInt8","copy","previous","send","messageStr","_ensureReadyPromise","_AccountLedgerFactory_brand","AccountLedgerFactory","ensureReady","_getAppConfiguration","getAppConfiguration","getAddress","_ensureReady","addressLength","_classPrivateFieldGet2","snapId","invokeSnap","provider","AccountMetamask","derivationPath","snapMinVersion","snapMaxVersion","_AccountMetamaskFactory_brand","AccountMetamaskFactory","ethereum","installSnap","_ensureMetamaskSupported","details","snapVersion","getSnapVersion","snaps","metamaskPrefix","CompilerBase","CompileOpts","srcFile","pos","ErrorPos","file","line","col","CompileResult","warnings","SophiaCallResultInput","function","callResult","callValue","BytecodeCallResultInput","DecodedCallresult","FunctionCallInput","DecodeCalldataBytecode","DecodedCalldata","DecodeCalldataSource","ByteCodeInput","FateAssembler","fateAssembler","ValidateByteCodeInput","CompilerVersion","ApiVersion","apiVersion","SophiaBinaryData","sophiaType","SophiaJsonData","ContractMapper","SophiaCallResultInputMapper","BytecodeCallResultInputMapper","FunctionCallInputMapper","DecodeCalldataBytecodeMapper","DecodeCalldataSourceMapper","ByteCodeInputMapper","ValidateByteCodeInputMapper","body2","body3","body4","body5","body6","body7","Compiler","generateACI","generateACIOperationSpec","compileContract","compileContractOperationSpec","decodeCallResult","decodeCallResultOperationSpec","decodeCallResultBytecode","decodeCallResultBytecodeOperationSpec","encodeCalldata","encodeCalldataOperationSpec","decodeCalldataBytecode","decodeCalldataBytecodeOperationSpec","decodeCalldataSource","decodeCalldataSourceOperationSpec","getFateAssemblerCode","getFateAssemblerCodeOperationSpec","validateByteCode","validateByteCodeOperationSpec","getCompilerVersion","getCompilerVersionOperationSpec","versionOperationSpec","apiVersionOperationSpec","apiOperationSpec","CompilerApi","CompilerHttp","compilerUrl","parameter","cmpOut","warning","generateAciBySourceCode","generateAci","snakeToPascal","toUpperCase","pascalToSnake","toLowerCase","default","websocket","w3cwebsocket","W3CWebSocket","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","channel","rest","_eventEmitter","enterState","nextState","_debug","_fsm","enter","dequeueAction","changeStatus","newStatus","debug","_status","changeState","newState","_state","_websocket","_isActionQueueLocked","queue","_actionQueue","action","guard","enqueueAction","state","handleMessage","st","updates","dequeueMessage","_isMessageQueueLocked","_messageQueue","shift","close","clearTimeout","_pingTimeoutId","ping","onMessage","callback","_rpcCallbacks","channel_id","_channelId","_nextRpcMessageId","_message$error$data$","connectionHandler","openHandler","channelOptions","wsUrl","onerror","onopen","onclose","onmessage","appendSignature","signFn","payloadTx","signatures2","signAndNotify","_signedTx","signedTx","signed_tx","handleUnexpectedMessage","_channel","wsMessage","channelOpen","awaitingCompletion","onSuccess","accepted","error_code","errorMessage","error_msg","codes","awaitingConnection","channelInfoStatus","nextStatus","awaitingChannelCreateTx","awaitingOpenConfirmation","_fsmId","fsm_id","channelClosed","awaitingReestablish","awaitingChannelReestablished","message2","state2","awaitingReconnection","role","awaitingOnChainTx","awaitingBlockInclusion","awaitingChannelsUpdate","awaitingTxSignRequest","_message$method$match","awaitingUpdateConflict","awaitingShutdownTx","awaitingLeave","closeTx","handlers","channelDisconnect","snakeToPascalObjKeys","obj","channelCounter","_debugId","_initialize","_options$existingFsmI","reconnect","existingFsmId","existingChannelId","reconnectHandler","reestablish","on","off","removeListener","halfSignedTx","trees","fsmId","leave","shutdown","ChannelSpend","metadata","meta","awaitingOffChainTx","_2","balances","awaitingActionTx","awaitingActionCompletion","onOnChainTx","Action","isOwn","withdraw","onOwnWithdrawLocked","onWithdrawLocked","onOwnDepositLocked","onDepositLocked","onStatusChanged","ChannelContract","createContract","call_data","vm_version","abi_version","addressKey","callContract","contract_id","forceProgress","gas_price","callContractStatic","getContractCall","caller_id","getContractState","cleanContractCalls","WebSocket","Source","MiddlewareSubscriberError","MiddlewareSubscriberDisconnected","closeEvent","_subscriptions","_requestQueue","_webSocket","_MiddlewareSubscriber_brand","MiddlewareSubscriber","webSocket","_disconnect","errorEvent","_emit","_messageHandler","_classPrivateGetter","_get_targets","_sendSubscribe","subscribeKeyBlocks","cb","_subscribe","Middleware","subscribeKeyBlocksNode","subscribeKeyBlocksAll","All","subscribeMicroBlocks","subscribeMicroBlocksNode","subscribeMicroBlocksAll","subscribeTransactions","subscribeTransactionsNode","subscribeTransactionsAll","subscribeObject","subscribeObjectNode","subscribeObjectAll","_this","_sendMessage","isSubscribe","condition","onlyReset","direction","direction1","accountId1","ownedOnly","scope","direction2","direction3","by","exact","direction4","direction5","templateId","direction6","tokenId","direction7","id1","direction8","by1","direction9","by2","direction10","direction11","id2","direction12","contractId1","functionParam","functionPrefix","aexnArgs","direction13","direction14","direction15","contractId2","direction16","hashOrKbi","direction17","hash1","ownedBy","state1","direction18","direction19","id3","direction20","direction21","direction22","direction23","direction24","direction25","id4","intervalBy","minStartDate","maxStartDate","typeParam1","direction26","direction27","direction28","intervalBy1","direction29","direction30","intervalBy2","direction31","typeParam2","collectionFormat","typeGroup","oracle","entrypoint","direction32","id5","hash2","direction33","Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TokenResponse","PaginatedResponse","nullable","prev","ErrorResponse","PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1","Aex9BalanceResponse","decimals","tokenName","tokenSymbol","txIndex","Paths1Ymnu9GV3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0","DexSwap","amounts","fromAmount","fromContract","fromDecimals","fromToken","logIdx","microTime","toAccount","toAmount","toContract","toDecimals","toToken","DexSwapAmounts","amount0In","amount0Out","amount1In","amount1Out","Paths1Ent1R1V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0","Activity","blockTime","ActivityPayload","microIndex","sender","callTxHash","contractTxHash","internalTx","refTxHash","PathsC0UvfgV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0","Pointee","sourceTxHash","sourceTxType","NotFoundResponse","PathsLv15NfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchema","channelCloseMutualTx","channelCloseSoloTx","channelCreateTx","channelDepositTx","channelForceProgressTx","channelOffchainTx","channelSetDelegatesTx","channelSettleTx","channelSlashTx","channelSnapshotSoloTx","channelWithdrawTx","contractCallTx","contractCreateTx","gaAttachTx","nameClaimTx","namePreclaimTx","nameRevokeTx","nameTransferTx","nameUpdateTx","oracleResponseTx","payingForTx","spendTx","Get200ApplicationJsonProperties","PathsKcpsuzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx","Paths1W3C1Z4V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx","PathsTvtzmvV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx","PathsMxcme6V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx","Paths1Cnk4LbV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx","Paths13Ss1Q2V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx","Paths1Gime4MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx","PathsVn5L1LV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx","Paths10T1AqyV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx","PathsTr523PV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx","PathsChduayV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx","Paths5Shu25V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesContractCreateTx","Paths1RkuxepV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx","PathsQklaaxV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx","Paths1Hacjy0V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx","Paths139X1XaV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx","Paths1R3Fb8MV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx","PathsZdcclfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx","Paths1VkyqhtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx","Paths107D9HzV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx","PathsS6Nx2KV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx","Paths184Oz8CV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx","PathsLm5DjtV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx","Paths16B89KuV3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx","Paths1Ljyzq7V3TransactionsCountIdGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx","Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0","Aex141Response","baseUrl","creationTime","extensions","invalid","limits","PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplatesResponse","edition","PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplateTokensResponse","Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0","Paths1Fbvaw8V3Aex141ContractidTokensTokenidGetResponses200ContentApplicationJsonSchema","Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TransferEvent","Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0","Aex9Response","eventSupply","holders","initialSupply","Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema","PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0","Aex9ContractBalanceResponse","lastLogIdx","lastTxHash","PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1","Get200ApplicationJsonAllOfPropertiesItemsItem","PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0","lastUpdatedHeight","lastUpdatedTime","lastUpdatedTxHash","lastUpdatedTxType","updatesCount","Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0","localIdx","Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0","ContractLog","eventHash","extCallerContractId","extCallerContractTxHash","parentContractId","aexnType","createTx","Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0","Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0","PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0","beneficiaryReward","microBlocksCount","transactionsCount","PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0","MicroBlock","microBlockIndex","PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0","Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0","activeFrom","approximateActivationTime","approximateExpireTime","auction","auctionTimeout","expireHeight","ownership","Auction","activationTime","auctionEnd","lastBid","AuctionLastBid","NameOwnership","original","NameTx","NameTxTx","Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0","PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema","NameClaim","internalSource","PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0","Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0","NameTransfer","PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0","NameUpdate","PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0","registerTime","registerTxHash","OracleFormat","OracleTx","OracleTxTx","OracleTxOracleTtl","PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0","OracleExtend","OracleExtendTxOracleTtl","Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0","Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0","Stats","feesTrend","last24HsAverageTransactionFees","last24HsTransactions","maxTransactionsPerSecond","maxTransactionsPerSecondBlockHash","minersCount","transactionsTrend","PathsV2Gh3TV3StatisticsBlocksGetResponses200ContentApplicationJsonSchemaAllof0","Stat","endDate","startDate","PathsYpljbvV3DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0","DeltaStat","auctionsStarted","blockReward","burnedInAuctions","channelsClosed","channelsOpened","contractsCreated","devReward","lockedInAuctions","lockedInChannels","namesActivated","namesExpired","namesRevoked","oraclesExpired","oraclesRegistered","Paths10OmbqhV3MinerstatsGetResponses200ContentApplicationJsonSchemaAllof0","Miner","totalReward","PathsAc89GqV3StatisticsNamesGetResponses200ContentApplicationJsonSchemaAllof0","Paths1Vms155V3TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0","TotalStat","activeAuctions","activeNames","activeOracles","inactiveNames","inactiveOracles","openChannels","sumBlockReward","sumDevReward","totalTokenSupply","Paths1Syc8AnV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0","mdwAsyncTasks","mdwGensPerMinute","mdwHeight","mdwLastMigration","mdwRevision","mdwSynced","mdwSyncing","mdwTxIndex","mdwVersion","nodeHeight","nodeProgress","nodeSyncing","StatusMdwAsyncTasks","longTasks","producerBuffer","totalPending","PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0","PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0","Transfer","refBlockHash","refTxType","Aex9TransferEvent","Aex9TransferResponse","callTxi","InternalContractCallEvent","InternalTransferEvent","NameClaimEvent","Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema","PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema","Paths1Ceolv9V3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchema","Paths1Opead5V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema","Paths1Gc4HwtV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchema","Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema","Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema","Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema","Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema","Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema","Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema","Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema","Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema","PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema","Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema","Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema","Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema","PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema","Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema","Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema","Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema","Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema","Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema","Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema","PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema","PathsJd68YV3StatisticsBlocksGetResponses200ContentApplicationJsonSchema","PathsQtodvgV3DeltastatsGetResponses200ContentApplicationJsonSchema","PathsZ2B507V3MinerstatsGetResponses200ContentApplicationJsonSchema","PathsD2HmjxV3StatisticsNamesGetResponses200ContentApplicationJsonSchema","PathsFrvc1LV3TotalstatsGetResponses200ContentApplicationJsonSchema","Paths150Ou6YV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchema","Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema","PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema","getAex141OwnedTokens","getAex141OwnedTokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAccountDexSwaps","getAccountDexSwapsOperationSpec","getAccountActivities","getAccountActivitiesOperationSpec","getAccountPointees","getAccountPointeesOperationSpec","getAccountTransactionsCount","getAccountTransactionsCountOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141ContractTemplates","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","getAex141TemplateTokensOperationSpec","getAex141ContractTokens","getAex141ContractTokensOperationSpec","getAex141TokenOwner","getAex141TokenOwnerOperationSpec","getAex141ContractTransfers","getAex141ContractTransfersOperationSpec","getAex141ByContract","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractCalls","getContractCallsOperationSpec","getContractLogs","getContractLogsOperationSpec","getDexSwaps","getDexSwapsOperationSpec","getDexSwapsByContractId","getDexSwapsByContractIdOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","getMicroBlockOperationSpec","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameAuctionClaims","getNameAuctionClaimsOperationSpec","getNamesCount","getNamesCountOperationSpec","getNameOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracles","getOraclesOperationSpec","getOracle","getOracleOperationSpec","getOracleExtends","getOracleExtendsOperationSpec","getOracleQueries","getOracleQueriesOperationSpec","getOracleResponses","getOracleResponsesOperationSpec","getStats","getStatsOperationSpec","getBlocksStats","getBlocksStatsOperationSpec","getDeltaStats","getDeltaStatsOperationSpec","getMinerStats","getMinerStatsOperationSpec","getNamesStats","getNamesStatsOperationSpec","getTotalStats","getTotalStatsOperationSpec","getTransactionsStats","getTransactionsStatsOperationSpec","getTransactions","getTransactionsOperationSpec","getTransactionsCount","getTransactionsCountOperationSpec","getTransaction","getTransactionOperationSpec","getTransfers","getTransfersOperationSpec","operationSpecs","isMiddlewareRawPage","maybePage","testPage","MiddlewarePageMissed","isNext","_middleware","MiddlewarePage","rawPage","middleware","nextPath","prevPath","requestByPath","MiddlewareApi","pathWithQuery","queryPos","operationSpec","os","groups","part","URLSearchParams","operationArguments","con1","con2","BrowserConnection","receiveMessage","_onDisconnect","_target","_self","BrowserWindowMessageConnection","self","sendDirection","receiveDirection","to_aepp","listener","_message$data$jsonrpc","addEventListener","removeEventListener","_this$origin","postMessage","onDetected","wallets","getConnection","to_waellet","newWallet","_listeners","BrowserRuntimeConnection","_port$sender$url","addListener","MemoryAccount","connectionProxy","walletDetector","execFile","tmpdir","dirname","basename","mkdir","writeFile","rm","fileURLToPath","getPackagePath","require","pathToFileURL","__filename","_path","_ensureCompatibleVersion","_CompilerCli_brand","CompilerCli","compilerPath","compileRes","_runWithStderr","stdout","trimEnd","stderr","reg","tmp","_saveContractToTmpDir","recursive","_run","verMessage","ver","pResolve","pReject","randomName","src","readFile","defaultIncludes","includeRegExp","includesRegExp","_flagsInstanceProperty","getFileSystemRec","root","relative","_sourceCode$match","filesystem","include","m","includePath","getFileSystem","HttpBrowser","CompilerHttpNode"],"sourceRoot":""}
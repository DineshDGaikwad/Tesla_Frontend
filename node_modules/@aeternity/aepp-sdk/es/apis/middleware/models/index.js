/** Response Schema for owners of AEX-141 tokens */

/** Error response from the API */

/** Response Schema for AEX9 balance responses */

/** DEX swap */

/** Activity related to an account */

/** A mix of all activity types. */

/** Pointee */

/** Resource not found on the API */

/** The channel close mutual transactions count */

/** The channel close solo transactions count */

/** The channel create transactions count */

/** The channel deposit transactions count */

/** The channel force progress transactions count */

/** The channel offchain transactions count */

/** The channel set delegates transactions count */

/** The channel settle transactions count */

/** The channel slash transactions count */

/** The channel snapshot solo transactions count */

/** The channel withdraw transactions count */

/** The contract call transactions count */

/** The contract create transactions count */

/** The ga attach transactions count */

/** The ga meta transactions count */

/** The name claim transactions count */

/** The name preclaim transactions count */

/** The name revoke transactions count */

/** The name transfer transactions count */

/** The name update transactions count */

/** The oracle extend transactions count */

/** The oracle query transactions count */

/** The oracle register transactions count */

/** The oracle response transactions count */

/** The paying for transactions count */

/** The spend transactions count */

/** Response Schema for AEX141 contract */

/** Response Schema for templates of a AEX-141 contract */

/** Response Schema for template tokens of a AEX-141 contract */

/** AEx141 Transfer */

/** Response Schema for AEX9 contract */

/** Response Schema for AEX9 contract balances responses */

/** ContractCall */

/** ContractLog */

/** Contract creation info */

/** Key Block */

/** MicroBlock */

/** Transaction */

/** Name */

/** Auction */

/** Name Claim */

/** Name Transfer */

/** Name Update */

/** The oracle's query and response formats */

/** Expiration of the oracle */

/** Expiration of the oracle */

/** Stats */

/** Stat */

/** DeltaStat */

/** Miner */

/** TotalStat */

/** AEx9 Transfer */

/** Response Schema for AEX9 transfer responses */

/** Contract call made inside of a contract call or contract create transaction */

/** Internal transfer */

/** Name claim */

/** Known values of {@link Enum0} that the service accepts. */
export let KnownEnum0 = /*#__PURE__*/function (KnownEnum0) {
  KnownEnum0["Forward"] = "forward";
  KnownEnum0["Backward"] = "backward";
  return KnownEnum0;
}({});

/**
 * Defines values for Enum0. \
 * {@link KnownEnum0} can be used interchangeably with Enum0,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum1} that the service accepts. */
export let KnownEnum1 = /*#__PURE__*/function (KnownEnum1) {
  KnownEnum1["Forward"] = "forward";
  KnownEnum1["Backward"] = "backward";
  return KnownEnum1;
}({});

/**
 * Defines values for Enum1. \
 * {@link KnownEnum1} can be used interchangeably with Enum1,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link DexSwapAction} that the service accepts. */
export let KnownDexSwapAction = /*#__PURE__*/function (KnownDexSwapAction) {
  KnownDexSwapAction["Swap"] = "SWAP";
  KnownDexSwapAction["BUY"] = "BUY";
  KnownDexSwapAction["Sell"] = "SELL";
  return KnownDexSwapAction;
}({});

/**
 * Defines values for DexSwapAction. \
 * {@link KnownDexSwapAction} can be used interchangeably with DexSwapAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SWAP** \
 * **BUY** \
 * **SELL**
 */

/** Known values of {@link Enum3} that the service accepts. */
export let KnownEnum3 = /*#__PURE__*/function (KnownEnum3) {
  KnownEnum3["Transactions"] = "transactions";
  KnownEnum3["Aexn"] = "aexn";
  KnownEnum3["Aex9"] = "aex9";
  KnownEnum3["Aex141"] = "aex141";
  KnownEnum3["Contract"] = "contract";
  KnownEnum3["Transfers"] = "transfers";
  KnownEnum3["Claims"] = "claims";
  KnownEnum3["Swaps"] = "swaps";
  return KnownEnum3;
}({});

/**
 * Defines values for Enum3. \
 * {@link KnownEnum3} can be used interchangeably with Enum3,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **transactions** \
 * **aexn** \
 * **aex9** \
 * **aex141** \
 * **contract** \
 * **transfers** \
 * **claims** \
 * **swaps**
 */

/** Known values of {@link Enum4} that the service accepts. */
export let KnownEnum4 = /*#__PURE__*/function (KnownEnum4) {
  KnownEnum4["Forward"] = "forward";
  KnownEnum4["Backward"] = "backward";
  return KnownEnum4;
}({});

/**
 * Defines values for Enum4. \
 * {@link KnownEnum4} can be used interchangeably with Enum4,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link ActivityPayloadKind} that the service accepts. */
export let KnownActivityPayloadKind = /*#__PURE__*/function (KnownActivityPayloadKind) {
  KnownActivityPayloadKind["AccountsExtraLima"] = "accounts_extra_lima";
  KnownActivityPayloadKind["AccountsFortuna"] = "accounts_fortuna";
  KnownActivityPayloadKind["AccountsGenesis"] = "accounts_genesis";
  KnownActivityPayloadKind["AccountsLima"] = "accounts_lima";
  KnownActivityPayloadKind["AccountsMinerva"] = "accounts_minerva";
  KnownActivityPayloadKind["ContractsLima"] = "contracts_lima";
  KnownActivityPayloadKind["RewardDev"] = "reward_dev";
  KnownActivityPayloadKind["RewardBlock"] = "reward_block";
  KnownActivityPayloadKind["FeeRefundOracle"] = "fee_refund_oracle";
  KnownActivityPayloadKind["FeeLockName"] = "fee_lock_name";
  KnownActivityPayloadKind["FeeRefundName"] = "fee_refund_name";
  KnownActivityPayloadKind["FeeSpendName"] = "fee_spend_name";
  KnownActivityPayloadKind["RewardOracle"] = "reward_oracle";
  return KnownActivityPayloadKind;
}({});

/**
 * Defines values for ActivityPayloadKind. \
 * {@link KnownActivityPayloadKind} can be used interchangeably with ActivityPayloadKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **accounts_extra_lima** \
 * **accounts_fortuna** \
 * **accounts_genesis** \
 * **accounts_lima** \
 * **accounts_minerva** \
 * **contracts_lima** \
 * **reward_dev** \
 * **reward_block** \
 * **fee_refund_oracle** \
 * **fee_lock_name** \
 * **fee_refund_name** \
 * **fee_spend_name** \
 * **reward_oracle**
 */

/** Known values of {@link ActivityType} that the service accepts. */
export let KnownActivityType = /*#__PURE__*/function (KnownActivityType) {
  KnownActivityType["SpendTxEvent"] = "SpendTxEvent";
  KnownActivityType["OracleRegisterTxEvent"] = "OracleRegisterTxEvent";
  KnownActivityType["OracleExtendTxEvent"] = "OracleExtendTxEvent";
  KnownActivityType["OracleQueryTxEvent"] = "OracleQueryTxEvent";
  KnownActivityType["OracleResponseTxEvent"] = "OracleResponseTxEvent";
  KnownActivityType["NamePreclaimTxEvent"] = "NamePreclaimTxEvent";
  KnownActivityType["NameClaimTxEvent"] = "NameClaimTxEvent";
  KnownActivityType["NameTransferTxEvent"] = "NameTransferTxEvent";
  KnownActivityType["NameUpdateTxEvent"] = "NameUpdateTxEvent";
  KnownActivityType["NameRevokeTxEvent"] = "NameRevokeTxEvent";
  KnownActivityType["ContractCreateTxEvent"] = "ContractCreateTxEvent";
  KnownActivityType["ContractCallTxEvent"] = "ContractCallTxEvent";
  KnownActivityType["GaAttachTxEvent"] = "GaAttachTxEvent";
  KnownActivityType["GaMetaTxEvent"] = "GaMetaTxEvent";
  KnownActivityType["ChannelCreateTxEvent"] = "ChannelCreateTxEvent";
  KnownActivityType["ChannelDepositTxEvent"] = "ChannelDepositTxEvent";
  KnownActivityType["ChannelWithdrawTxEvent"] = "ChannelWithdrawTxEvent";
  KnownActivityType["ChannelForceProgressTxEvent"] = "ChannelForceProgressTxEvent";
  KnownActivityType["ChannelCloseMutualTxEvent"] = "ChannelCloseMutualTxEvent";
  KnownActivityType["ChannelCloseSoloTxEvent"] = "ChannelCloseSoloTxEvent";
  KnownActivityType["ChannelSlashTxEvent"] = "ChannelSlashTxEvent";
  KnownActivityType["ChannelSettleTxEvent"] = "ChannelSettleTxEvent";
  KnownActivityType["ChannelSnapshotSoloTxEvent"] = "ChannelSnapshotSoloTxEvent";
  KnownActivityType["ChannelSetDelegatesTxEvent"] = "ChannelSetDelegatesTxEvent";
  KnownActivityType["ChannelOffchainTxEvent"] = "ChannelOffchainTxEvent";
  KnownActivityType["ChannelClientReconnectTxEvent"] = "ChannelClientReconnectTxEvent";
  KnownActivityType["PayingForTxEvent"] = "PayingForTxEvent";
  return KnownActivityType;
}({});

/**
 * Defines values for ActivityType. \
 * {@link KnownActivityType} can be used interchangeably with ActivityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SpendTxEvent** \
 * **OracleRegisterTxEvent** \
 * **OracleExtendTxEvent** \
 * **OracleQueryTxEvent** \
 * **OracleResponseTxEvent** \
 * **NamePreclaimTxEvent** \
 * **NameClaimTxEvent** \
 * **NameTransferTxEvent** \
 * **NameUpdateTxEvent** \
 * **NameRevokeTxEvent** \
 * **ContractCreateTxEvent** \
 * **ContractCallTxEvent** \
 * **GaAttachTxEvent** \
 * **GaMetaTxEvent** \
 * **ChannelCreateTxEvent** \
 * **ChannelDepositTxEvent** \
 * **ChannelWithdrawTxEvent** \
 * **ChannelForceProgressTxEvent** \
 * **ChannelCloseMutualTxEvent** \
 * **ChannelCloseSoloTxEvent** \
 * **ChannelSlashTxEvent** \
 * **ChannelSettleTxEvent** \
 * **ChannelSnapshotSoloTxEvent** \
 * **ChannelSetDelegatesTxEvent** \
 * **ChannelOffchainTxEvent** \
 * **ChannelClientReconnectTxEvent** \
 * **PayingForTxEvent**
 */

/** Known values of {@link Enum7} that the service accepts. */
export let KnownEnum7 = /*#__PURE__*/function (KnownEnum7) {
  KnownEnum7["Forward"] = "forward";
  KnownEnum7["Backward"] = "backward";
  return KnownEnum7;
}({});

/**
 * Defines values for Enum7. \
 * {@link KnownEnum7} can be used interchangeably with Enum7,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum8} that the service accepts. */
export let KnownEnum8 = /*#__PURE__*/function (KnownEnum8) {
  KnownEnum8["Creation"] = "creation";
  KnownEnum8["Name"] = "name";
  KnownEnum8["Symbol"] = "symbol";
  return KnownEnum8;
}({});

/**
 * Defines values for Enum8. \
 * {@link KnownEnum8} can be used interchangeably with Enum8,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **creation** \
 * **name** \
 * **symbol**
 */

/** Known values of {@link Enum9} that the service accepts. */
export let KnownEnum9 = /*#__PURE__*/function (KnownEnum9) {
  KnownEnum9["Forward"] = "forward";
  KnownEnum9["Backward"] = "backward";
  return KnownEnum9;
}({});

/**
 * Defines values for Enum9. \
 * {@link KnownEnum9} can be used interchangeably with Enum9,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum10} that the service accepts. */
export let KnownEnum10 = /*#__PURE__*/function (KnownEnum10) {
  KnownEnum10["Forward"] = "forward";
  KnownEnum10["Backward"] = "backward";
  return KnownEnum10;
}({});

/**
 * Defines values for Enum10. \
 * {@link KnownEnum10} can be used interchangeably with Enum10,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum11} that the service accepts. */
export let KnownEnum11 = /*#__PURE__*/function (KnownEnum11) {
  KnownEnum11["Forward"] = "forward";
  KnownEnum11["Backward"] = "backward";
  return KnownEnum11;
}({});

/**
 * Defines values for Enum11. \
 * {@link KnownEnum11} can be used interchangeably with Enum11,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum12} that the service accepts. */
export let KnownEnum12 = /*#__PURE__*/function (KnownEnum12) {
  KnownEnum12["Forward"] = "forward";
  KnownEnum12["Backward"] = "backward";
  return KnownEnum12;
}({});

/**
 * Defines values for Enum12. \
 * {@link KnownEnum12} can be used interchangeably with Enum12,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum13} that the service accepts. */
export let KnownEnum13 = /*#__PURE__*/function (KnownEnum13) {
  KnownEnum13["Forward"] = "forward";
  KnownEnum13["Backward"] = "backward";
  return KnownEnum13;
}({});

/**
 * Defines values for Enum13. \
 * {@link KnownEnum13} can be used interchangeably with Enum13,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum14} that the service accepts. */
export let KnownEnum14 = /*#__PURE__*/function (KnownEnum14) {
  KnownEnum14["Creation"] = "creation";
  KnownEnum14["Name"] = "name";
  KnownEnum14["Symbol"] = "symbol";
  return KnownEnum14;
}({});

/**
 * Defines values for Enum14. \
 * {@link KnownEnum14} can be used interchangeably with Enum14,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **creation** \
 * **name** \
 * **symbol**
 */

/** Known values of {@link Enum15} that the service accepts. */
export let KnownEnum15 = /*#__PURE__*/function (KnownEnum15) {
  KnownEnum15["Forward"] = "forward";
  KnownEnum15["Backward"] = "backward";
  return KnownEnum15;
}({});

/**
 * Defines values for Enum15. \
 * {@link KnownEnum15} can be used interchangeably with Enum15,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum16} that the service accepts. */
export let KnownEnum16 = /*#__PURE__*/function (KnownEnum16) {
  KnownEnum16["Forward"] = "forward";
  KnownEnum16["Backward"] = "backward";
  return KnownEnum16;
}({});

/**
 * Defines values for Enum16. \
 * {@link KnownEnum16} can be used interchangeably with Enum16,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum17} that the service accepts. */
export let KnownEnum17 = /*#__PURE__*/function (KnownEnum17) {
  KnownEnum17["Forward"] = "forward";
  KnownEnum17["Backward"] = "backward";
  return KnownEnum17;
}({});

/**
 * Defines values for Enum17. \
 * {@link KnownEnum17} can be used interchangeably with Enum17,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum18} that the service accepts. */
export let KnownEnum18 = /*#__PURE__*/function (KnownEnum18) {
  KnownEnum18["Active"] = "active";
  KnownEnum18["Inactive"] = "inactive";
  return KnownEnum18;
}({});

/**
 * Defines values for Enum18. \
 * {@link KnownEnum18} can be used interchangeably with Enum18,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **inactive**
 */

/** Known values of {@link Enum19} that the service accepts. */
export let KnownEnum19 = /*#__PURE__*/function (KnownEnum19) {
  KnownEnum19["Forward"] = "forward";
  KnownEnum19["Backward"] = "backward";
  return KnownEnum19;
}({});

/**
 * Defines values for Enum19. \
 * {@link KnownEnum19} can be used interchangeably with Enum19,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum20} that the service accepts. */
export let KnownEnum20 = /*#__PURE__*/function (KnownEnum20) {
  KnownEnum20["Forward"] = "forward";
  KnownEnum20["Backward"] = "backward";
  return KnownEnum20;
}({});

/**
 * Defines values for Enum20. \
 * {@link KnownEnum20} can be used interchangeably with Enum20,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum21} that the service accepts. */
export let KnownEnum21 = /*#__PURE__*/function (KnownEnum21) {
  KnownEnum21["Forward"] = "forward";
  KnownEnum21["Backward"] = "backward";
  return KnownEnum21;
}({});

/**
 * Defines values for Enum21. \
 * {@link KnownEnum21} can be used interchangeably with Enum21,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum22} that the service accepts. */
export let KnownEnum22 = /*#__PURE__*/function (KnownEnum22) {
  KnownEnum22["Forward"] = "forward";
  KnownEnum22["Backward"] = "backward";
  return KnownEnum22;
}({});

/**
 * Defines values for Enum22. \
 * {@link KnownEnum22} can be used interchangeably with Enum22,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum23} that the service accepts. */
export let KnownEnum23 = /*#__PURE__*/function (KnownEnum23) {
  KnownEnum23["Forward"] = "forward";
  KnownEnum23["Backward"] = "backward";
  return KnownEnum23;
}({});

/**
 * Defines values for Enum23. \
 * {@link KnownEnum23} can be used interchangeably with Enum23,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum24} that the service accepts. */
export let KnownEnum24 = /*#__PURE__*/function (KnownEnum24) {
  KnownEnum24["Forward"] = "forward";
  KnownEnum24["Backward"] = "backward";
  return KnownEnum24;
}({});

/**
 * Defines values for Enum24. \
 * {@link KnownEnum24} can be used interchangeably with Enum24,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum25} that the service accepts. */
export let KnownEnum25 = /*#__PURE__*/function (KnownEnum25) {
  KnownEnum25["Forward"] = "forward";
  KnownEnum25["Backward"] = "backward";
  return KnownEnum25;
}({});

/**
 * Defines values for Enum25. \
 * {@link KnownEnum25} can be used interchangeably with Enum25,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum26} that the service accepts. */
export let KnownEnum26 = /*#__PURE__*/function (KnownEnum26) {
  KnownEnum26["Forward"] = "forward";
  KnownEnum26["Backward"] = "backward";
  return KnownEnum26;
}({});

/**
 * Defines values for Enum26. \
 * {@link KnownEnum26} can be used interchangeably with Enum26,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum27} that the service accepts. */
export let KnownEnum27 = /*#__PURE__*/function (KnownEnum27) {
  KnownEnum27["Forward"] = "forward";
  KnownEnum27["Backward"] = "backward";
  return KnownEnum27;
}({});

/**
 * Defines values for Enum27. \
 * {@link KnownEnum27} can be used interchangeably with Enum27,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum28} that the service accepts. */
export let KnownEnum28 = /*#__PURE__*/function (KnownEnum28) {
  KnownEnum28["Forward"] = "forward";
  KnownEnum28["Backward"] = "backward";
  return KnownEnum28;
}({});

/**
 * Defines values for Enum28. \
 * {@link KnownEnum28} can be used interchangeably with Enum28,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum29} that the service accepts. */
export let KnownEnum29 = /*#__PURE__*/function (KnownEnum29) {
  KnownEnum29["Forward"] = "forward";
  KnownEnum29["Backward"] = "backward";
  return KnownEnum29;
}({});

/**
 * Defines values for Enum29. \
 * {@link KnownEnum29} can be used interchangeably with Enum29,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum30} that the service accepts. */
export let KnownEnum30 = /*#__PURE__*/function (KnownEnum30) {
  KnownEnum30["Forward"] = "forward";
  KnownEnum30["Backward"] = "backward";
  return KnownEnum30;
}({});

/**
 * Defines values for Enum30. \
 * {@link KnownEnum30} can be used interchangeably with Enum30,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum31} that the service accepts. */
export let KnownEnum31 = /*#__PURE__*/function (KnownEnum31) {
  KnownEnum31["Forward"] = "forward";
  KnownEnum31["Backward"] = "backward";
  return KnownEnum31;
}({});

/**
 * Defines values for Enum31. \
 * {@link KnownEnum31} can be used interchangeably with Enum31,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum32} that the service accepts. */
export let KnownEnum32 = /*#__PURE__*/function (KnownEnum32) {
  KnownEnum32["Forward"] = "forward";
  KnownEnum32["Backward"] = "backward";
  return KnownEnum32;
}({});

/**
 * Defines values for Enum32. \
 * {@link KnownEnum32} can be used interchangeably with Enum32,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link OracleTxOracleTtlType} that the service accepts. */
export let KnownOracleTxOracleTtlType = /*#__PURE__*/function (KnownOracleTxOracleTtlType) {
  KnownOracleTxOracleTtlType["Delta"] = "delta";
  KnownOracleTxOracleTtlType["Block"] = "block";
  return KnownOracleTxOracleTtlType;
}({});

/**
 * Defines values for OracleTxOracleTtlType. \
 * {@link KnownOracleTxOracleTtlType} can be used interchangeably with OracleTxOracleTtlType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **delta** \
 * **block**
 */

/** Known values of {@link OracleExtendTxOracleTtlType} that the service accepts. */
export let KnownOracleExtendTxOracleTtlType = /*#__PURE__*/function (KnownOracleExtendTxOracleTtlType) {
  KnownOracleExtendTxOracleTtlType["Delta"] = "delta";
  KnownOracleExtendTxOracleTtlType["Block"] = "block";
  return KnownOracleExtendTxOracleTtlType;
}({});

/**
 * Defines values for OracleExtendTxOracleTtlType. \
 * {@link KnownOracleExtendTxOracleTtlType} can be used interchangeably with OracleExtendTxOracleTtlType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **delta** \
 * **block**
 */

/** Known values of {@link Enum35} that the service accepts. */
export let KnownEnum35 = /*#__PURE__*/function (KnownEnum35) {
  KnownEnum35["Day"] = "day";
  KnownEnum35["Week"] = "week";
  KnownEnum35["Month"] = "month";
  return KnownEnum35;
}({});

/**
 * Defines values for Enum35. \
 * {@link KnownEnum35} can be used interchangeably with Enum35,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **day** \
 * **week** \
 * **month**
 */

/** Known values of {@link Enum36} that the service accepts. */
export let KnownEnum36 = /*#__PURE__*/function (KnownEnum36) {
  KnownEnum36["Key"] = "key";
  KnownEnum36["Micro"] = "micro";
  return KnownEnum36;
}({});

/**
 * Defines values for Enum36. \
 * {@link KnownEnum36} can be used interchangeably with Enum36,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **key** \
 * **micro**
 */

/** Known values of {@link Enum37} that the service accepts. */
export let KnownEnum37 = /*#__PURE__*/function (KnownEnum37) {
  KnownEnum37["Forward"] = "forward";
  KnownEnum37["Backward"] = "backward";
  return KnownEnum37;
}({});

/**
 * Defines values for Enum37. \
 * {@link KnownEnum37} can be used interchangeably with Enum37,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum38} that the service accepts. */
export let KnownEnum38 = /*#__PURE__*/function (KnownEnum38) {
  KnownEnum38["Forward"] = "forward";
  KnownEnum38["Backward"] = "backward";
  return KnownEnum38;
}({});

/**
 * Defines values for Enum38. \
 * {@link KnownEnum38} can be used interchangeably with Enum38,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum39} that the service accepts. */
export let KnownEnum39 = /*#__PURE__*/function (KnownEnum39) {
  KnownEnum39["Forward"] = "forward";
  KnownEnum39["Backward"] = "backward";
  return KnownEnum39;
}({});

/**
 * Defines values for Enum39. \
 * {@link KnownEnum39} can be used interchangeably with Enum39,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum40} that the service accepts. */
export let KnownEnum40 = /*#__PURE__*/function (KnownEnum40) {
  KnownEnum40["Day"] = "day";
  KnownEnum40["Week"] = "week";
  KnownEnum40["Month"] = "month";
  return KnownEnum40;
}({});

/**
 * Defines values for Enum40. \
 * {@link KnownEnum40} can be used interchangeably with Enum40,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **day** \
 * **week** \
 * **month**
 */

/** Known values of {@link Enum41} that the service accepts. */
export let KnownEnum41 = /*#__PURE__*/function (KnownEnum41) {
  KnownEnum41["Forward"] = "forward";
  KnownEnum41["Backward"] = "backward";
  return KnownEnum41;
}({});

/**
 * Defines values for Enum41. \
 * {@link KnownEnum41} can be used interchangeably with Enum41,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum42} that the service accepts. */
export let KnownEnum42 = /*#__PURE__*/function (KnownEnum42) {
  KnownEnum42["Forward"] = "forward";
  KnownEnum42["Backward"] = "backward";
  return KnownEnum42;
}({});

/**
 * Defines values for Enum42. \
 * {@link KnownEnum42} can be used interchangeably with Enum42,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum43} that the service accepts. */
export let KnownEnum43 = /*#__PURE__*/function (KnownEnum43) {
  KnownEnum43["Day"] = "day";
  KnownEnum43["Week"] = "week";
  KnownEnum43["Month"] = "month";
  return KnownEnum43;
}({});

/**
 * Defines values for Enum43. \
 * {@link KnownEnum43} can be used interchangeably with Enum43,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **day** \
 * **week** \
 * **month**
 */

/** Known values of {@link Enum44} that the service accepts. */
export let KnownEnum44 = /*#__PURE__*/function (KnownEnum44) {
  KnownEnum44["Forward"] = "forward";
  KnownEnum44["Backward"] = "backward";
  return KnownEnum44;
}({});

/**
 * Defines values for Enum44. \
 * {@link KnownEnum44} can be used interchangeably with Enum44,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Get0ItemsItem} that the service accepts. */
export let KnownGet0ItemsItem = /*#__PURE__*/function (KnownGet0ItemsItem) {
  KnownGet0ItemsItem["ChannelCloseMutual"] = "channel_close_mutual";
  KnownGet0ItemsItem["ChannelCloseSolo"] = "channel_close_solo";
  KnownGet0ItemsItem["ChannelCreate"] = "channel_create";
  KnownGet0ItemsItem["ChannelDeposit"] = "channel_deposit";
  KnownGet0ItemsItem["ChannelForceProgress"] = "channel_force_progress";
  KnownGet0ItemsItem["ChannelOffchain"] = "channel_offchain";
  KnownGet0ItemsItem["ChannelSettle"] = "channel_settle";
  KnownGet0ItemsItem["ChannelSlash"] = "channel_slash";
  KnownGet0ItemsItem["ChannelSnapshotSolo"] = "channel_snapshot_solo";
  KnownGet0ItemsItem["ChannelWithdraw"] = "channel_withdraw";
  KnownGet0ItemsItem["ContractCall"] = "contract_call";
  KnownGet0ItemsItem["ContractCreate"] = "contract_create";
  KnownGet0ItemsItem["GaAttach"] = "ga_attach";
  KnownGet0ItemsItem["GaMeta"] = "ga_meta";
  KnownGet0ItemsItem["NameClaim"] = "name_claim";
  KnownGet0ItemsItem["NamePreclaim"] = "name_preclaim";
  KnownGet0ItemsItem["NameRevoke"] = "name_revoke";
  KnownGet0ItemsItem["NameTransfer"] = "name_transfer";
  KnownGet0ItemsItem["NameUpdate"] = "name_update";
  KnownGet0ItemsItem["OracleExtend"] = "oracle_extend";
  KnownGet0ItemsItem["OracleQuery"] = "oracle_query";
  KnownGet0ItemsItem["OracleRegister"] = "oracle_register";
  KnownGet0ItemsItem["OracleResponse"] = "oracle_response";
  KnownGet0ItemsItem["PayingFor"] = "paying_for";
  KnownGet0ItemsItem["Spend"] = "spend";
  return KnownGet0ItemsItem;
}({});

/**
 * Defines values for Get0ItemsItem. \
 * {@link KnownGet0ItemsItem} can be used interchangeably with Get0ItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **channel_close_mutual** \
 * **channel_close_solo** \
 * **channel_create** \
 * **channel_deposit** \
 * **channel_force_progress** \
 * **channel_offchain** \
 * **channel_settle** \
 * **channel_slash** \
 * **channel_snapshot_solo** \
 * **channel_withdraw** \
 * **contract_call** \
 * **contract_create** \
 * **ga_attach** \
 * **ga_meta** \
 * **name_claim** \
 * **name_preclaim** \
 * **name_revoke** \
 * **name_transfer** \
 * **name_update** \
 * **oracle_extend** \
 * **oracle_query** \
 * **oracle_register** \
 * **oracle_response** \
 * **paying_for** \
 * **spend**
 */

/** Known values of {@link Get1ItemsItem} that the service accepts. */
export let KnownGet1ItemsItem = /*#__PURE__*/function (KnownGet1ItemsItem) {
  KnownGet1ItemsItem["Channel"] = "channel";
  KnownGet1ItemsItem["Contract"] = "contract";
  KnownGet1ItemsItem["Ga"] = "ga";
  KnownGet1ItemsItem["Name"] = "name";
  KnownGet1ItemsItem["Oracle"] = "oracle";
  KnownGet1ItemsItem["PayingFor"] = "paying_for";
  KnownGet1ItemsItem["Spend"] = "spend";
  return KnownGet1ItemsItem;
}({});

/**
 * Defines values for Get1ItemsItem. \
 * {@link KnownGet1ItemsItem} can be used interchangeably with Get1ItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **channel** \
 * **contract** \
 * **ga** \
 * **name** \
 * **oracle** \
 * **paying_for** \
 * **spend**
 */

/** Known values of {@link Enum47} that the service accepts. */
export let KnownEnum47 = /*#__PURE__*/function (KnownEnum47) {
  KnownEnum47["Forward"] = "forward";
  KnownEnum47["Backward"] = "backward";
  return KnownEnum47;
}({});

/**
 * Defines values for Enum47. \
 * {@link KnownEnum47} can be used interchangeably with Enum47,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link Enum48} that the service accepts. */
export let KnownEnum48 = /*#__PURE__*/function (KnownEnum48) {
  KnownEnum48["Forward"] = "forward";
  KnownEnum48["Backward"] = "backward";
  return KnownEnum48;
}({});

/**
 * Defines values for Enum48. \
 * {@link KnownEnum48} can be used interchangeably with Enum48,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link TransferKind} that the service accepts. */
export let KnownTransferKind = /*#__PURE__*/function (KnownTransferKind) {
  KnownTransferKind["RewardDev"] = "reward_dev";
  KnownTransferKind["RewardBlock"] = "reward_block";
  return KnownTransferKind;
}({});

/**
 * Defines values for TransferKind. \
 * {@link KnownTransferKind} can be used interchangeably with TransferKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **reward_dev** \
 * **reward_block**
 */

/** Known values of {@link InternalTransferEventKind} that the service accepts. */
export let KnownInternalTransferEventKind = /*#__PURE__*/function (KnownInternalTransferEventKind) {
  KnownInternalTransferEventKind["AccountsExtraLima"] = "accounts_extra_lima";
  KnownInternalTransferEventKind["AccountsFortuna"] = "accounts_fortuna";
  KnownInternalTransferEventKind["AccountsGenesis"] = "accounts_genesis";
  KnownInternalTransferEventKind["AccountsLima"] = "accounts_lima";
  KnownInternalTransferEventKind["AccountsMinerva"] = "accounts_minerva";
  KnownInternalTransferEventKind["ContractsLima"] = "contracts_lima";
  KnownInternalTransferEventKind["RewardDev"] = "reward_dev";
  KnownInternalTransferEventKind["RewardBlock"] = "reward_block";
  KnownInternalTransferEventKind["FeeRefundOracle"] = "fee_refund_oracle";
  KnownInternalTransferEventKind["FeeLockName"] = "fee_lock_name";
  KnownInternalTransferEventKind["FeeRefundName"] = "fee_refund_name";
  KnownInternalTransferEventKind["FeeSpendName"] = "fee_spend_name";
  KnownInternalTransferEventKind["RewardOracle"] = "reward_oracle";
  return KnownInternalTransferEventKind;
}({});

/**
 * Defines values for InternalTransferEventKind. \
 * {@link KnownInternalTransferEventKind} can be used interchangeably with InternalTransferEventKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **accounts_extra_lima** \
 * **accounts_fortuna** \
 * **accounts_genesis** \
 * **accounts_lima** \
 * **accounts_minerva** \
 * **contracts_lima** \
 * **reward_dev** \
 * **reward_block** \
 * **fee_refund_oracle** \
 * **fee_lock_name** \
 * **fee_refund_name** \
 * **fee_spend_name** \
 * **reward_oracle**
 */

/** Known values of {@link Enum51} that the service accepts. */
export let KnownEnum51 = /*#__PURE__*/function (KnownEnum51) {
  KnownEnum51["Forward"] = "forward";
  KnownEnum51["Backward"] = "backward";
  return KnownEnum51;
}({});

/**
 * Defines values for Enum51. \
 * {@link KnownEnum51} can be used interchangeably with Enum51,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Optional parameters. */

/** Contains response data for the getAex141OwnedTokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex9AccountBalances operation. */

/** Optional parameters. */

/** Contains response data for the getAccountDexSwaps operation. */

/** Optional parameters. */

/** Contains response data for the getAccountActivities operation. */

/** Optional parameters. */

/** Contains response data for the getAccountPointees operation. */

/** Optional parameters. */

/** Contains response data for the getAccountTransactionsCount operation. */

/** Optional parameters. */

/** Contains response data for the getSortedAex141Contracts operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ContractTemplates operation. */

/** Optional parameters. */

/** Contains response data for the getAex141TemplateTokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ContractTokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex141TokenOwner operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ContractTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ByContract operation. */

/** Optional parameters. */

/** Contains response data for the getSortedAex9Tokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex9TokensCount operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ContractBalances operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ContractAccountBalance operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ContractAccountBalanceHistory operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ByContract operation. */

/** Optional parameters. */

/** Contains response data for the getChannels operation. */

/** Optional parameters. */

/** Contains response data for the getChannel operation. */

/** Optional parameters. */

/** Contains response data for the getContractCalls operation. */

/** Optional parameters. */

/** Contains response data for the getContractLogs operation. */

/** Optional parameters. */

/** Contains response data for the getContract operation. */

/** Optional parameters. */

/** Contains response data for the getDexSwaps operation. */

/** Optional parameters. */

/** Contains response data for the getDexSwapsByContractId operation. */

/** Optional parameters. */

/** Contains response data for the getKeyBlocks operation. */

/** Optional parameters. */

/** Contains response data for the getKeyBlock operation. */

/** Optional parameters. */

/** Contains response data for the getKeyBlockMicroBlocks operation. */

/** Optional parameters. */

/** Contains response data for the getMicroBlock operation. */

/** Optional parameters. */

/** Contains response data for the getMicroBlockTransactions operation. */

/** Optional parameters. */

/** Contains response data for the getNames operation. */

/** Optional parameters. */

/** Contains response data for the getNamesAuctions operation. */

/** Optional parameters. */

/** Contains response data for the getNameAuction operation. */

/** Optional parameters. */

/** Contains response data for the getNameAuctionClaims operation. */

/** Optional parameters. */

/** Contains response data for the getNamesCount operation. */

/** Optional parameters. */

/** Contains response data for the getName operation. */

/** Optional parameters. */

/** Contains response data for the getNameClaims operation. */

/** Optional parameters. */

/** Contains response data for the getNameTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getNameUpdates operation. */

/** Optional parameters. */

/** Contains response data for the getOracles operation. */

/** Optional parameters. */

/** Contains response data for the getOracle operation. */

/** Optional parameters. */

/** Contains response data for the getOracleExtends operation. */

/** Optional parameters. */

/** Contains response data for the getOracleQueries operation. */

/** Optional parameters. */

/** Contains response data for the getOracleResponses operation. */

/** Optional parameters. */

/** Contains response data for the getStats operation. */

/** Optional parameters. */

/** Contains response data for the getBlocksStats operation. */

/** Optional parameters. */

/** Contains response data for the getDeltaStats operation. */

/** Optional parameters. */

/** Contains response data for the getMinerStats operation. */

/** Optional parameters. */

/** Contains response data for the getNamesStats operation. */

/** Optional parameters. */

/** Contains response data for the getTotalStats operation. */

/** Optional parameters. */

/** Contains response data for the getTransactionsStats operation. */

/** Optional parameters. */

/** Contains response data for the getStatus operation. */

/** Optional parameters. */

/** Contains response data for the getTransactions operation. */

/** Optional parameters. */

/** Contains response data for the getTransactionsCount operation. */

/** Optional parameters. */

/** Contains response data for the getTransaction operation. */

/** Optional parameters. */

/** Contains response data for the getTransfers operation. */

/** Optional parameters. */
//# sourceMappingURL=index.js.map
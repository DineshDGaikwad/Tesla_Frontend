{"version":3,"file":"middleware.js","names":["createSerializer","coreClient","Parameters","Mappers","Middleware","ServiceClient","constructor","$host","options","_ref","_options$endpoint","undefined","Error","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","getAex141OwnedTokens","accountId","sendOperationRequest","getAex141OwnedTokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAccountDexSwaps","getAccountDexSwapsOperationSpec","getAccountActivities","id","getAccountActivitiesOperationSpec","getAccountPointees","getAccountPointeesOperationSpec","getAccountTransactionsCount","getAccountTransactionsCountOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141ContractTemplates","contractId","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","templateId","getAex141TemplateTokensOperationSpec","getAex141ContractTokens","getAex141ContractTokensOperationSpec","getAex141TokenOwner","tokenId","getAex141TokenOwnerOperationSpec","getAex141ContractTransfers","getAex141ContractTransfersOperationSpec","getAex141ByContract","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractCalls","getContractCallsOperationSpec","getContractLogs","getContractLogsOperationSpec","getContract","getContractOperationSpec","getDexSwaps","getDexSwapsOperationSpec","getDexSwapsByContractId","getDexSwapsByContractIdOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlock","hashOrKbi","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","hash","getMicroBlockOperationSpec","getMicroBlockTransactions","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameAuctionClaims","getNameAuctionClaimsOperationSpec","getNamesCount","getNamesCountOperationSpec","getName","getNameOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracles","getOraclesOperationSpec","getOracle","getOracleOperationSpec","getOracleExtends","getOracleExtendsOperationSpec","getOracleQueries","getOracleQueriesOperationSpec","getOracleResponses","getOracleResponsesOperationSpec","getStats","getStatsOperationSpec","getBlocksStats","getBlocksStatsOperationSpec","getDeltaStats","getDeltaStatsOperationSpec","getMinerStats","getMinerStatsOperationSpec","getNamesStats","getNamesStatsOperationSpec","getTotalStats","getTotalStatsOperationSpec","getTransactionsStats","getTransactionsStatsOperationSpec","getStatus","getStatusOperationSpec","getTransactions","getTransactionsOperationSpec","getTransactionsCount","getTransactionsCountOperationSpec","getTransaction","getTransactionOperationSpec","getTransfers","getTransfersOperationSpec","serializer","path","httpMethod","responses","bodyMapper","Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema","ErrorResponse","isError","queryParameters","limit","direction","contract","urlParameters","headerParameters","accept","PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema","Paths1Ceolv9V3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchema","direction1","accountId1","Paths1Opead5V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema","ownedOnly","typeParam","scope","direction2","Paths1Gc4HwtV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchema","NotFoundResponse","PathsLv15NfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchema","Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema","direction3","by","prefix","exact","Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","direction4","Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","direction5","PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema","direction6","Paths1Fbvaw8V3Aex141ContractidTokensTokenidGetResponses200ContentApplicationJsonSchema","Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema","direction7","fromParam","to","Aex141Response","id1","Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema","direction8","by1","Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema","Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","direction9","by2","blockHash","PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","direction10","Aex9Response","Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema","direction11","state","Channel","id2","Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema","direction12","Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema","contractId1","event","functionParam","functionPrefix","data","aexnArgs","direction13","Contract","Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema","direction14","PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema","direction15","contractId2","Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema","direction16","KeyBlock","Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","direction17","MicroBlock","hash1","Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema","Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema","ownedBy","state1","direction18","PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema","direction19","Auction","direction20","id3","PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema","direction21","type","name","Name","Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema","direction22","Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema","direction23","Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema","direction24","Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema","direction25","Oracle","id4","Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema","Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema","PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema","Stats","PathsJd68YV3StatisticsBlocksGetResponses200ContentApplicationJsonSchema","intervalBy","minStartDate","maxStartDate","typeParam1","direction26","PathsQtodvgV3DeltastatsGetResponses200ContentApplicationJsonSchema","direction27","PathsZ2B507V3MinerstatsGetResponses200ContentApplicationJsonSchema","direction28","PathsD2HmjxV3StatisticsNamesGetResponses200ContentApplicationJsonSchema","intervalBy1","direction29","PathsFrvc1LV3TotalstatsGetResponses200ContentApplicationJsonSchema","direction30","Paths150Ou6YV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchema","intervalBy2","txType","direction31","Status","Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema","typeParam2","typeGroup","account","channel","oracle","senderId","recipientId","entrypoint","direction32","id5","Transaction","hash2","PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema","direction33","operationSpecs"],"sources":["../../../src/apis/middleware/middleware.ts"],"sourcesContent":["import { createSerializer } from \"../../utils/autorest.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  MiddlewareOptionalParams,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAccountDexSwapsOptionalParams,\n  GetAccountDexSwapsResponse,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetAccountPointeesOptionalParams,\n  GetAccountPointeesResponse,\n  GetAccountTransactionsCountOptionalParams,\n  GetAccountTransactionsCountResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ContractTokensOptionalParams,\n  GetAex141ContractTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractTransfersOptionalParams,\n  GetAex141ContractTransfersResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractCallsOptionalParams,\n  GetContractCallsResponse,\n  GetContractLogsOptionalParams,\n  GetContractLogsResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetDexSwapsOptionalParams,\n  GetDexSwapsResponse,\n  GetDexSwapsByContractIdOptionalParams,\n  GetDexSwapsByContractIdResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameAuctionClaimsOptionalParams,\n  GetNameAuctionClaimsResponse,\n  GetNamesCountOptionalParams,\n  GetNamesCountResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOracleExtendsOptionalParams,\n  GetOracleExtendsResponse,\n  GetOracleQueriesOptionalParams,\n  GetOracleQueriesResponse,\n  GetOracleResponsesOptionalParams,\n  GetOracleResponsesResponse,\n  GetStatsOptionalParams,\n  GetStatsResponse,\n  GetBlocksStatsOptionalParams,\n  GetBlocksStatsResponse,\n  GetDeltaStatsOptionalParams,\n  GetDeltaStatsResponse,\n  GetMinerStatsOptionalParams,\n  GetMinerStatsResponse,\n  GetNamesStatsOptionalParams,\n  GetNamesStatsResponse,\n  GetTotalStatsOptionalParams,\n  GetTotalStatsResponse,\n  GetTransactionsStatsOptionalParams,\n  GetTransactionsStatsResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTransactionsOptionalParams,\n  GetTransactionsResponse,\n  GetTransactionsCountOptionalParams,\n  GetTransactionsCountResponse,\n  GetTransactionOptionalParams,\n  GetTransactionResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n} from \"./models/index.js\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: `ak_${string}`,\n    options?: GetAex141OwnedTokensOptionalParams,\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: `ak_${string}`,\n    options?: GetAex9AccountBalancesOptionalParams,\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAccountDexSwaps(\n    accountId: `ak_${string}`,\n    options?: GetAccountDexSwapsOptionalParams,\n  ): Promise<GetAccountDexSwapsResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountDexSwapsOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account activities.\n   * @param id The account address Account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    id: `ak_${string}`,\n    options?: GetAccountActivitiesOptionalParams,\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountActivitiesOperationSpec,\n    );\n  }\n\n  /**\n   * Get account pointees\n   * @param id The account that names point to Account address\n   * @param options The options parameters.\n   */\n  getAccountPointees(\n    id: `ak_${string}`,\n    options?: GetAccountPointeesOptionalParams,\n  ): Promise<GetAccountPointeesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountPointeesOperationSpec,\n    );\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param id The ID of the address/name/oracle/etc Account address\n   * @param options The options parameters.\n   */\n  getAccountTransactionsCount(\n    id: `ak_${string}`,\n    options?: GetAccountTransactionsCountOptionalParams,\n  ): Promise<GetAccountTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams,\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec,\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTemplatesOptionalParams,\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id Contract address\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: `ct_${string}`,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams,\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTokens(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTokensOptionalParams,\n  ): Promise<GetAex141ContractTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id Contract address\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: `ct_${string}`,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams,\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 transfers on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTransfers(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTransfersOptionalParams,\n  ): Promise<GetAex141ContractTransfersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: `ct_${string}`,\n    options?: GetAex141ByContractOptionalParams,\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams,\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams,\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: `ct_${string}`,\n    options?: GetAex9ContractBalancesOptionalParams,\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: `ct_${string}`,\n    options?: GetAex9ByContractOptionalParams,\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams,\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel Channel ID\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: `ch_${string}`,\n    options?: GetChannelOptionalParams,\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractCalls(\n    options?: GetContractCallsOptionalParams,\n  ): Promise<GetContractCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractCallsOperationSpec,\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractLogs(\n    options?: GetContractLogsOptionalParams,\n  ): Promise<GetContractLogsResponse> {\n    return this.sendOperationRequest({ options }, getContractLogsOperationSpec);\n  }\n\n  /**\n   * Gets contract creation info.\n   * @param id Contract that emitted the logs Contract address\n   * @param options The options parameters.\n   */\n  getContract(\n    id: `ct_${string}`,\n    options?: GetContractOptionalParams,\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest({ id, options }, getContractOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param options The options parameters.\n   */\n  getDexSwaps(\n    options?: GetDexSwapsOptionalParams,\n  ): Promise<GetDexSwapsResponse> {\n    return this.sendOperationRequest({ options }, getDexSwapsOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getDexSwapsByContractId(\n    contractId: `ct_${string}`,\n    options?: GetDexSwapsByContractIdOptionalParams,\n  ): Promise<GetDexSwapsByContractIdResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getDexSwapsByContractIdOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams,\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockOptionalParams,\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockMicroBlocksOptionalParams,\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockOptionalParams,\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockTransactionsOptionalParams,\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams,\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionOptionalParams,\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction claims\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuctionClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionClaimsOptionalParams,\n  ): Promise<GetNameAuctionClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the total number of active names.\n   * @param options The options parameters.\n   */\n  getNamesCount(\n    options?: GetNamesCountOptionalParams,\n  ): Promise<GetNamesCountResponse> {\n    return this.sendOperationRequest({ options }, getNamesCountOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getName(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameOptionalParams,\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameClaimsOptionalParams,\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameTransfersOptionalParams,\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameUpdatesOptionalParams,\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: `ok_${string}`,\n    options?: GetOracleOptionalParams,\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get an oracle's extensions.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleExtends(\n    id: `ok_${string}`,\n    options?: GetOracleExtendsOptionalParams,\n  ): Promise<GetOracleExtendsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleExtendsOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's queries.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleQueries(\n    id: `ok_${string}`,\n    options?: GetOracleQueriesOptionalParams,\n  ): Promise<GetOracleQueriesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleQueriesOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's responses.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleResponses(\n    id: `ok_${string}`,\n    options?: GetOracleResponsesOptionalParams,\n  ): Promise<GetOracleResponsesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleResponsesOperationSpec,\n    );\n  }\n\n  /**\n   * Get stats.\n   * @param options The options parameters.\n   */\n  getStats(options?: GetStatsOptionalParams): Promise<GetStatsResponse> {\n    return this.sendOperationRequest({ options }, getStatsOperationSpec);\n  }\n\n  /**\n   * Get total blocks count stats.\n   * @param options The options parameters.\n   */\n  getBlocksStats(\n    options?: GetBlocksStatsOptionalParams,\n  ): Promise<GetBlocksStatsResponse> {\n    return this.sendOperationRequest({ options }, getBlocksStatsOperationSpec);\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltaStats(\n    options?: GetDeltaStatsOptionalParams,\n  ): Promise<GetDeltaStatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltaStatsOperationSpec);\n  }\n\n  /**\n   * Get miners list with total rewards obtained through mining.\n   * @param options The options parameters.\n   */\n  getMinerStats(\n    options?: GetMinerStatsOptionalParams,\n  ): Promise<GetMinerStatsResponse> {\n    return this.sendOperationRequest({ options }, getMinerStatsOperationSpec);\n  }\n\n  /**\n   * Get total names count stats.\n   * @param options The options parameters.\n   */\n  getNamesStats(\n    options?: GetNamesStatsOptionalParams,\n  ): Promise<GetNamesStatsResponse> {\n    return this.sendOperationRequest({ options }, getNamesStatsOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalStats(\n    options?: GetTotalStatsOptionalParams,\n  ): Promise<GetTotalStatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalStatsOperationSpec);\n  }\n\n  /**\n   * Get total transactions count stats.\n   * @param options The options parameters.\n   */\n  getTransactionsStats(\n    options?: GetTransactionsStatsOptionalParams,\n  ): Promise<GetTransactionsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTransactions(\n    options?: GetTransactionsOptionalParams,\n  ): Promise<GetTransactionsResponse> {\n    return this.sendOperationRequest({ options }, getTransactionsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTransactionsCount(\n    options?: GetTransactionsCountOptionalParams,\n  ): Promise<GetTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hash The transaction encoded hash Transaction hash\n   * @param options The options parameters.\n   */\n  getTransaction(\n    hash: `th_${string}`,\n    options?: GetTransactionOptionalParams,\n  ): Promise<GetTransactionResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams,\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = createSerializer(Mappers, /* isXml */ false);\n\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex141/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.contract,\n  ],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex9/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{account_id}/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ceolv9V3AccountsAccountIdDexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction1],\n  urlParameters: [Parameters.$host, Parameters.accountId1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{id}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Opead5V3AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.ownedOnly,\n    Parameters.typeParam,\n    Parameters.scope,\n    Parameters.direction2,\n  ],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountPointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{id}/names/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Gc4HwtV3AccountsIdNamesPointeesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/count/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsLv15NfV3TransactionsCountIdGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction3,\n    Parameters.by,\n    Parameters.prefix,\n    Parameters.exact,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction4],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction5],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction6],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Fbvaw8V3Aex141ContractidTokensTokenidGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction7,\n    Parameters.fromParam,\n    Parameters.to,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.exact,\n    Parameters.direction8,\n    Parameters.by1,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction9,\n    Parameters.by2,\n    Parameters.blockHash,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/aex9/{contractId}/balances/{accountId}/history\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper:\n          Mappers.Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorResponse,\n        isError: true,\n      },\n    },\n    queryParameters: [\n      Parameters.limit,\n      Parameters.scope,\n      Parameters.direction10,\n    ],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.accountId,\n      Parameters.contractId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction11,\n    Parameters.state,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction12],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionParam,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs,\n    Parameters.direction13,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Contract,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction14],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsByContractIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/{contract_id}/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction15],\n  urlParameters: [Parameters.$host, Parameters.contractId2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction16],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction17],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.by2,\n    Parameters.ownedBy,\n    Parameters.state1,\n    Parameters.direction18,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction19],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction20],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction21],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.ownedBy],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction22],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction23],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction24],\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.state1,\n    Parameters.direction25,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleExtendsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/extends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueriesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleResponsesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/responses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id4],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Stats,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBlocksStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/statistics/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsJd68YV3StatisticsBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.typeParam1,\n    Parameters.direction26,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeltaStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/deltastats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsQtodvgV3DeltastatsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction27],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMinerStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/minerstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsZ2B507V3MinerstatsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction28],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/statistics/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsD2HmjxV3StatisticsNamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy1,\n    Parameters.direction29,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTotalStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/totalstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFrvc1LV3TotalstatsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction30],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/statistics/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths150Ou6YV3StatisticsTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy2,\n    Parameters.txType,\n    Parameters.direction31,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.contract,\n    Parameters.scope,\n    Parameters.typeParam2,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint,\n    Parameters.direction32,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id5],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transaction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction33],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\nexport const operationSpecs = [\n  getAex141OwnedTokensOperationSpec,\n  getAex9AccountBalancesOperationSpec,\n  getAccountDexSwapsOperationSpec,\n  getAccountActivitiesOperationSpec,\n  getAccountPointeesOperationSpec,\n  getAccountTransactionsCountOperationSpec,\n  getSortedAex141ContractsOperationSpec,\n  getAex141ContractTemplatesOperationSpec,\n  getAex141TemplateTokensOperationSpec,\n  getAex141ContractTokensOperationSpec,\n  getAex141TokenOwnerOperationSpec,\n  getAex141ContractTransfersOperationSpec,\n  getAex141ByContractOperationSpec,\n  getSortedAex9TokensOperationSpec,\n  getAex9TokensCountOperationSpec,\n  getAex9ContractBalancesOperationSpec,\n  getAex9ContractAccountBalanceOperationSpec,\n  getAex9ByContractOperationSpec,\n  getChannelsOperationSpec,\n  getChannelOperationSpec,\n  getContractCallsOperationSpec,\n  getContractLogsOperationSpec,\n  getContractOperationSpec,\n  getDexSwapsOperationSpec,\n  getDexSwapsByContractIdOperationSpec,\n  getKeyBlocksOperationSpec,\n  getKeyBlockOperationSpec,\n  getKeyBlockMicroBlocksOperationSpec,\n  getMicroBlockOperationSpec,\n  getMicroBlockTransactionsOperationSpec,\n  getNamesOperationSpec,\n  getNamesAuctionsOperationSpec,\n  getNameAuctionOperationSpec,\n  getNameAuctionClaimsOperationSpec,\n  getNamesCountOperationSpec,\n  getNameOperationSpec,\n  getNameClaimsOperationSpec,\n  getNameTransfersOperationSpec,\n  getNameUpdatesOperationSpec,\n  getOraclesOperationSpec,\n  getOracleOperationSpec,\n  getOracleExtendsOperationSpec,\n  getOracleQueriesOperationSpec,\n  getOracleResponsesOperationSpec,\n  getStatsOperationSpec,\n  getBlocksStatsOperationSpec,\n  getDeltaStatsOperationSpec,\n  getMinerStatsOperationSpec,\n  getNamesStatsOperationSpec,\n  getTotalStatsOperationSpec,\n  getTransactionsStatsOperationSpec,\n  getStatusOperationSpec,\n  getTransactionsOperationSpec,\n  getTransactionsCountOperationSpec,\n  getTransactionOperationSpec,\n  getTransfersOperationSpec,\n] as const;\n"],"mappings":"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","ignoreList":[]}
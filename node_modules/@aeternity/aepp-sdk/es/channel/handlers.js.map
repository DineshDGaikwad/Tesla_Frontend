{"version":3,"file":"handlers.js","names":["changeStatus","changeState","notify","emit","disconnect","unpackTx","buildTx","decode","IllegalArgumentError","InsufficientBalanceError","ChannelConnectionError","UnexpectedChannelMessageError","ChannelError","Tag","snakeToPascal","appendSignature","tx","signFn","signatures","encodedTx","SignedTx","payloadTx","result","signatures2","tag","concat","signAndNotify","channel","method","data","_signedTx","signedTx","signed_tx","isError","key","error","handleUnexpectedMessage","_channel","message","state","reject","Object","assign","JSON","stringify","wsMessage","handler","channelOpen","awaitingCompletion","onSuccess","resolve","accepted","errorCode","params","error_code","errorMessage","error_msg","event","codes","map","d","code","includes","awaitingConnection","channelInfoStatus","nextStatus","awaitingChannelCreateTx","awaitingOpenConfirmation","_fsmId","fsm_id","payload","channelClosed","awaitingReestablish","awaitingChannelReestablished","_","message2","state2","awaitingReconnection","_options","role","sign","awaitingOnChainTx","awaitingBlockInclusion","info","type","_channelId","channel_id","awaitingChannelsUpdate","awaitingTxSignRequest","enter","_message$method$match","match","updates","awaitingUpdateConflict","awaitingShutdownTx","awaitingLeave","channelId","closeTx"],"sources":["../../src/channel/handlers.ts"],"sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport {\n  ChannelState,\n  changeStatus,\n  changeState,\n  notify,\n  emit,\n  disconnect,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n  ChannelStatus,\n  ChannelEvents,\n} from './internal.js';\nimport { unpackTx, buildTx } from '../tx/builder/index.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n  ChannelError,\n} from '../utils/errors.js';\nimport type Channel from './Base.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { snakeToPascal } from '../utils/string.js';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx);\n  const payloadTx = buildTx(encodedTx);\n  const result = await signFn(payloadTx);\n  if (typeof result === 'string') {\n    const { signatures: signatures2 } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      tag: Tag.SignedTx,\n      signatures: signatures.concat(signatures2),\n      encodedTx: decode(payloadTx),\n    });\n  }\n  return result;\n}\n\nexport async function signAndNotify(\n  channel: Channel,\n  method: string,\n  data: {\n    tx?: Encoded.Transaction;\n    signed_tx?: Encoded.Transaction;\n  },\n  signFn: SignTx,\n): Promise<boolean> {\n  let signedTx;\n  if (data.tx != null) signedTx = await signFn(data.tx);\n  else if (data.signed_tx != null) signedTx = await appendSignature(data.signed_tx, signFn);\n  else throw new ChannelError(\"Can't find transaction in message\");\n  const isError = typeof signedTx !== 'string';\n  const key = data.tx != null ? 'tx' : 'signed_tx';\n  notify(channel, method, isError ? { error: signedTx ?? 1 } : { [key]: signedTx });\n  return isError;\n}\n\nexport function handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(\n    Object.assign(\n      new UnexpectedChannelMessageError(\n        `Unexpected message received:\\n\\n${JSON.stringify(message)}`,\n      ),\n      { wsMessage: message },\n    ),\n  );\n  return { handler: channelOpen };\n}\n\nexport function awaitingCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n  onSuccess?: typeof handleUnexpectedMessage,\n): ChannelFsm {\n  if (onSuccess != null && message.method === 'channels.update') {\n    return onSuccess(channel, message, state);\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    const codes = message.error.data.map((d) => d.code);\n    if (codes.includes(1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (codes.includes(1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n\n    let nextStatus: ChannelStatus | null = null;\n    if (channelInfoStatus === 'channel_accept') nextStatus = 'accepted';\n    if (channelInfoStatus === 'funding_created') nextStatus = 'halfSigned';\n    if (nextStatus != null) {\n      changeStatus(channel, nextStatus);\n      return { handler: awaitingChannelCreateTx };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReestablish(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info' && message.params.data.event === 'fsm_up') {\n    channel._fsmId = message.params.data.fsm_id;\n    return {\n      handler: function awaitingChannelReestablished(\n        _: Channel,\n        message2: ChannelMessage,\n        state2: ChannelState,\n      ): ChannelFsm | undefined {\n        if (\n          message2.method === 'channels.info' &&\n          message2.params.data.event === 'channel_reestablished'\n        )\n          return { handler: awaitingOpenConfirmation };\n        return handleUnexpectedMessage(channel, message2, state2);\n      },\n    };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info' && message.params.data.event === 'fsm_up') {\n    channel._fsmId = message.params.data.fsm_id;\n    const { signedTx } = await channel.state();\n    changeState(channel, signedTx == null ? '' : buildTx(signedTx));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const tag = channel._options.role === 'initiator' ? 'initiator_sign' : 'responder_sign';\n  if (message.method === `channels.sign.${tag}`) {\n    await signAndNotify(channel, `channels.${tag}`, message.params.data, async (tx) =>\n      channel._options.sign(tag, tx),\n    );\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  function awaitingBlockInclusion(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n    if (message2.method === 'channels.info') {\n      switch (message2.params.data.event) {\n        case 'funding_created':\n        case 'own_funding_locked':\n          return { handler: awaitingBlockInclusion };\n        case 'funding_locked':\n          return { handler: awaitingOpenConfirmation };\n      }\n    }\n    if (message2.method === 'channels.on_chain_tx') {\n      emit(channel, 'onChainTx', message2.params.data.tx, {\n        info: message2.params.data.info,\n        type: message2.params.data.type,\n      });\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    const { info } = message.params.data;\n    const { role } = channel._options;\n    if (\n      (info === 'funding_signed' && role === 'initiator') ||\n      (info === 'funding_created' && role === 'responder')\n    ) {\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    channel._options.role === 'initiator'\n  ) {\n    channel._channelId = message.params.channel_id;\n    changeStatus(channel, 'signed');\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nfunction awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channel._channelId = message.params.channel_id;\n    return {\n      handler: function awaitingChannelsUpdate(\n        _: Channel,\n        message2: ChannelMessage,\n        state2: ChannelState,\n      ): ChannelFsm | undefined {\n        if (message2.method === 'channels.update') {\n          changeState(channel, message2.params.data.state);\n          return { handler: channelOpen };\n        }\n        return handleUnexpectedMessage(channel, message2, state2);\n      },\n    };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, snakeToPascal(message.params.data.event) as keyof ChannelEvents);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          channel._fsmId = message.params.data.fsm_id;\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nasync function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  if (tag == null) return handleUnexpectedMessage(channel, message, state);\n  const isError = await signAndNotify(channel, `channels.${tag}`, message.params.data, async (tx) =>\n    channel._options.sign(tag, tx, { updates: message.params.data.updates }),\n  );\n\n  function awaitingUpdateConflict(_: Channel, message2: ChannelMessage): ChannelFsm {\n    if (message2.error != null) {\n      return { handler: awaitingUpdateConflict, state };\n    }\n    if (message2.method === 'channels.conflict') {\n      return { handler: channelOpen };\n    }\n    return handleUnexpectedMessage(channel, message2, state);\n  }\n  return isError ? { handler: awaitingUpdateConflict, state } : { handler: channelOpen };\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method !== 'channels.sign.shutdown_sign') {\n    return handleUnexpectedMessage(channel, message, state);\n  }\n  await signAndNotify(channel, 'channels.shutdown_sign', message.params.data, async (tx) =>\n    state.sign(tx),\n  );\n  return {\n    handler(_: Channel, message2: ChannelMessage): ChannelFsm {\n      if (message2.method !== 'channels.on_chain_tx') {\n        return handleUnexpectedMessage(channel, message2, state);\n      }\n      // state.resolve(message.params.data.tx)\n      return { handler: channelClosed, state };\n    },\n    state,\n  };\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n"],"mappings":"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","ignoreList":[]}
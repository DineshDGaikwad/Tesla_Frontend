{"version":3,"file":"Node.js","names":["userAgentPolicyName","setClientRequestIdPolicyName","genRequestQueuesPolicy","genCombineGetRequestsPolicy","genErrorFormatterPolicy","parseBigIntPolicy","genVersionCheckPolicy","genRetryOnFailurePolicy","Node","NodeApi","UnsupportedVersionError","ConsensusProtocolVersion","_cachedStatusPromise","WeakMap","constructor","url","ignoreVersion","retryCount","retryOverallDelay","options","getVersion","opts","_getCachedStatus","nodeVersion","allowInsecureConnection","additionalPolicies","body","reason","errorCode","join","_classPrivateFieldInitSpec","pipeline","addPolicy","phase","removePolicy","name","_classPrivateFieldGet","getStatus","args","promise","then","_classPrivateFieldSet","getNetworkId","networkId","getNodeInfo","nodeNetworkId","protocols","topBlockHeight","consensusProtocolVersion","filter","effectiveAtHeight","reduce","acc","p","version","toString","versions","Object","values","el","map","geVersion","Math","min","ltVersion","max","$host"],"sources":["../src/Node.ts"],"sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport { OperationOptions } from '@azure/core-client';\nimport { userAgentPolicyName, setClientRequestIdPolicyName } from '@azure/core-rest-pipeline';\nimport {\n  genRequestQueuesPolicy,\n  genCombineGetRequestsPolicy,\n  genErrorFormatterPolicy,\n  parseBigIntPolicy,\n  genVersionCheckPolicy,\n  genRetryOnFailurePolicy,\n} from './utils/autorest.js';\nimport { Node as NodeApi, NodeOptionalParams, ErrorModel } from './apis/node/index.js';\nimport { UnsupportedVersionError } from './utils/errors.js';\nimport { ConsensusProtocolVersion } from './tx/builder/constants.js';\n\ninterface NodeInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\nexport default class Node extends NodeApi {\n  /**\n   * @param url - Url for node API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the node is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false,\n      retryCount = 3,\n      retryOverallDelay = 800,\n      ...options\n    }: NodeOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    const getVersion = async (opts: OperationOptions): Promise<string> =>\n      (await this._getCachedStatus(opts)).nodeVersion;\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        ...(ignoreVersion ? [] : [genVersionCheckPolicy('node', getVersion, '7.1.0', '8.0.0')]),\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorModel) =>\n          [' ', body.reason, body.errorCode == null ? '' : ` (${body.errorCode})`].join(''),\n        ),\n      ],\n      ...options,\n    });\n    this.pipeline.addPolicy(parseBigIntPolicy, { phase: 'Deserialize' });\n    this.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n    // TODO: use instead our retry policy\n    this.pipeline.removePolicy({ name: 'defaultRetryPolicy' });\n  }\n\n  #cachedStatusPromise?: ReturnType<NodeApi['getStatus']>;\n\n  async _getCachedStatus(options?: OperationOptions): ReturnType<NodeApi['getStatus']> {\n    if (this.#cachedStatusPromise != null) return this.#cachedStatusPromise;\n    return this.getStatus(options);\n  }\n\n  override async getStatus(\n    ...args: Parameters<NodeApi['getStatus']>\n  ): ReturnType<NodeApi['getStatus']> {\n    const promise = super.getStatus(...args);\n    promise.then(\n      () => {\n        this.#cachedStatusPromise = promise;\n      },\n      () => {},\n    );\n    return promise;\n  }\n\n  /**\n   * Returns network ID provided by node.\n   * This method won't do extra requests on subsequent calls.\n   */\n  async getNetworkId(): Promise<string> {\n    return (await this._getCachedStatus()).networkId;\n  }\n\n  async getNodeInfo(): Promise<NodeInfo> {\n    const {\n      nodeVersion,\n      networkId: nodeNetworkId,\n      protocols,\n      topBlockHeight,\n    } = await this.getStatus();\n\n    const consensusProtocolVersion = protocols\n      .filter(({ effectiveAtHeight }) => topBlockHeight >= effectiveAtHeight)\n      .reduce((acc, p) => (p.effectiveAtHeight > acc.effectiveAtHeight ? p : acc), {\n        effectiveAtHeight: -1,\n        version: 0,\n      }).version;\n    if (ConsensusProtocolVersion[consensusProtocolVersion] == null) {\n      const version = consensusProtocolVersion.toString();\n      const versions = Object.values(ConsensusProtocolVersion)\n        .filter((el) => typeof el === 'number')\n        .map((el) => +el);\n      const geVersion = Math.min(...versions).toString();\n      const ltVersion = (Math.max(...versions) + 1).toString();\n      throw new UnsupportedVersionError('consensus protocol', version, geVersion, ltVersion);\n    }\n\n    return {\n      url: this.$host,\n      nodeNetworkId,\n      version: nodeVersion,\n      consensusProtocolVersion,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"Cli.js","names":["execFile","tmpdir","resolve","dirname","basename","mkdir","writeFile","rm","fileURLToPath","CompilerBase","CompilerError","InternalError","UnsupportedVersionError","semverSatisfies","ensureError","getPackagePath","path","import","meta","url","_path","WeakMap","_ensureCompatibleVersion","_CompilerCli_brand","WeakSet","CompilerCli","constructor","compilerPath","ignoreVersion","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","Promise","_classPrivateFieldSet","version","then","versions","compile","_classPrivateFieldGet","compileRes","aci","all","_assertClassBrand","_runWithStderr","call","generateAci","bytecode","stdout","trimEnd","warnings","stderr","split","slice","map","warning","reg","match","message","pos","file","line","col","error","compileBySourceCode","sourceCode","fileSystem","tmp","_saveContractToTmpDir","recursive","JSON","parse","_run","generateAciBySourceCode","validate","includes","validateBySourceCode","verMessage","ver","parameters","pResolve","pReject","randomName","Math","random","toString","sourceCodePath","Object","entries","name","src","p"],"sources":["../../../src/contract/compiler/Cli.ts"],"sourcesContent":["import { execFile } from 'child_process';\nimport { tmpdir } from 'os';\nimport { resolve, dirname, basename } from 'path';\nimport { mkdir, writeFile, rm } from 'fs/promises';\nimport { fileURLToPath } from 'url';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, InternalError, UnsupportedVersionError } from '../../utils/errors.js';\nimport semverSatisfies from '../../utils/semver-satisfies.js';\nimport { ensureError } from '../../utils/other.js';\n\nexport const getPackagePath = (): string => {\n  const path = dirname(fileURLToPath(import.meta.url));\n  if (basename(path) === 'dist') return resolve(path, '..');\n  if (basename(path) === 'compiler') return resolve(path, '../../..');\n  throw new InternalError(\"Can't get package path\");\n};\n\n/**\n * A wrapper around aesophia_cli, available only in Node.js.\n * Requires Erlang installed, assumes that `escript` is available in PATH.\n * @category contract\n */\nexport default class CompilerCli extends CompilerBase {\n  readonly #path: string;\n\n  readonly #ensureCompatibleVersion = Promise.resolve();\n\n  /**\n   * @param compilerPath - A path to aesophia_cli binary, by default uses the integrated one\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the compiler is supported\n   */\n  constructor(\n    compilerPath = resolve(getPackagePath(), './bin/aesophia_cli'),\n    { ignoreVersion }: { ignoreVersion?: boolean } = {},\n  ) {\n    super();\n    this.#path = compilerPath;\n    if (ignoreVersion !== true) {\n      this.#ensureCompatibleVersion = this.version().then((version) => {\n        const versions = [version, '8.0.0', '9.0.0'] as const;\n        if (!semverSatisfies(...versions))\n          throw new UnsupportedVersionError('compiler', ...versions);\n      });\n    }\n  }\n\n  async #runWithStderr(...parameters: string[]): Promise<{ stderr: string; stdout: string }> {\n    return new Promise((pResolve, pReject) => {\n      execFile('escript', [this.#path, ...parameters], (error, stdout, stderr) => {\n        if (error != null) pReject(error);\n        else pResolve({ stdout, stderr });\n      });\n    });\n  }\n\n  async #run(...parameters: string[]): Promise<string> {\n    const { stderr, stdout } = await this.#runWithStderr(...parameters);\n    if (stderr !== '') throw new CompilerError(stderr);\n    return stdout;\n  }\n\n  static async #saveContractToTmpDir(\n    sourceCode: string,\n    fileSystem: Record<string, string> = {},\n  ): Promise<string> {\n    const randomName = (): string => Math.random().toString(36).slice(2);\n    const path = resolve(tmpdir(), `aepp-sdk-js-${randomName()}`);\n    await mkdir(path);\n    const sourceCodePath = resolve(path, `${randomName()}.aes`);\n    await writeFile(sourceCodePath, sourceCode);\n    await Promise.all(\n      Object.entries(fileSystem).map(async ([name, src]) => {\n        const p = resolve(path, name);\n        await mkdir(dirname(p), { recursive: true });\n        return writeFile(p, src);\n      }),\n    );\n    return sourceCodePath;\n  }\n\n  async compile(path: string): CompileResult {\n    await this.#ensureCompatibleVersion;\n    try {\n      const [compileRes, aci] = await Promise.all([\n        this.#runWithStderr(path),\n        this.generateAci(path),\n      ]);\n      return {\n        bytecode: compileRes.stdout.trimEnd() as Encoded.ContractBytearray,\n        aci,\n        warnings: compileRes.stderr\n          .split('Warning in ')\n          .slice(1)\n          .map((warning) => {\n            const reg = /^'(.+)' at line (\\d+), col (\\d+):\\n(.+)$/s;\n            const match = warning.match(reg);\n            if (match == null) throw new InternalError(`Can't parse compiler output: \"${warning}\"`);\n            return {\n              message: match[4].trimEnd(),\n              pos: {\n                ...(match[1] !== path && { file: match[1] }),\n                line: +match[2],\n                col: +match[3],\n              },\n            };\n          }),\n      };\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.compile(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async generateAci(path: string): Promise<Aci> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return JSON.parse(await this.#run('--no_code', '--create_json_aci', path));\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.generateAci(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return (await this.#run(path, '--validate', bytecode)).includes('Validation successful.');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.validate(bytecode, tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async version(): Promise<string> {\n    const verMessage = await this.#run('--version');\n    const ver = verMessage.match(/Sophia compiler version ([\\d.]+.*)\\n/)?.[1];\n    if (ver == null) throw new CompilerError(\"Can't get compiler version\");\n    return ver;\n  }\n}\n"],"mappings":"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","ignoreList":[]}